{"version":3,"file":"amphion.js","sources":["../src/core/index.js","../src/utils/constants.js","../src/utils/transform.js","../src/primitives/Mesh.js","../src/primitives/Cylinder.js","../src/primitives/Cone.js","../src/primitives/Group.js","../src/primitives/Arrow.js","../src/primitives/Axes.js","../src/primitives/Line.js","../src/primitives/LineArrow.js","../src/utils/helpers.js","../src/viz/Pose.js","../src/viz/Polygon.js","../src/primitives/Text.js","../src/primitives/TfFrame.js","../src/viz/Tf.js","../src/viz/RobotModel.js","../src/viz/PointCloud.js","../src/primitives/Cube.js","../src/primitives/Sphere.js","../src/primitives/LineSegment.js","../src/utils/objectCacher.js","../src/primitives/SphereList.js","../src/primitives/Points.js","../src/primitives/TriangleList.js","../src/primitives/CubeList.js","../src/utils/primitives.js","../src/utils/markerManager.js","../src/viz/MarkerArray.js","../src/utils/points.js","../src/viz/LaserScan.js","../src/utils/processing.js","../src/primitives/Plane.js","../src/viz/Map.js","../src/viz/Odometry.js","../src/viz/PoseArray.js","../src/viz/Path.js","../src/viz/Image.js","../src/viz/Marker.js","../src/core/scene.js","../src/utils/2dControls.js","../src/viewers/2d.js","../src/viewers/3d.js","../src/viewers/Tf.js","../src/index.js"],"sourcesContent":["import ROSLIB from 'roslib';\n\nclass Core {\n  constructor(ros, topicName, messageType, options = {}) {\n    const { onHeaderChange } = options;\n    this.options = options;\n    this.ros = ros;\n    this.headerFrameId = '';\n    this.changeTopic(topicName, messageType, false);\n    this.onHeaderChange = onHeaderChange || (() => {});\n    this.update = this.update.bind(this);\n  }\n\n  hide() {\n    this.object.visible = false;\n  }\n\n  show() {\n    this.object.visible = true;\n  }\n\n  destroy() {\n    this.unsubscribe();\n    this.object.parent.remove(this.object);\n    this.object = null;\n  }\n\n  reset() {}\n\n  subscribe() {\n    if (!this.topicInstances) {\n      return;\n    }\n    this.topicInstances.forEach(t => {\n      t.subscribe(this.update);\n    });\n  }\n\n  unsubscribe() {\n    if (!this.topicInstances) {\n      return;\n    }\n    this.topicInstances.forEach(t => {\n      t.unsubscribe();\n    });\n  }\n\n  update(message) {\n    const header = message.header ? message.header.frame_id : '';\n    if (header !== this.headerFrameId) {\n      this.headerFrameId = header;\n      this.onHeaderChange(this.headerFrameId);\n    }\n  }\n\n  updateOptions(options) {\n    this.options = {\n      ...this.options,\n      ...options,\n    };\n  }\n\n  changeTopic(topicName, type, autoSubscribe = true) {\n    const { throttleRate, queueSize } = this.options;\n\n    if (autoSubscribe) {\n      this.unsubscribe();\n    }\n\n    this.topicName = topicName;\n    this.messageType = type || this.messageType;\n    this.topicInstances = (Array.isArray(topicName)\n      ? topicName\n      : [{ name: topicName, type }]\n    ).map(\n      ({ name, messageType }) =>\n        new ROSLIB.Topic({\n          ros: this.ros,\n          name,\n          messageType,\n          throttle_rate: throttleRate || 0,\n          queue_size: queueSize || 10,\n        }),\n    );\n\n    if (autoSubscribe) {\n      this.reset();\n      this.subscribe();\n    }\n  }\n}\n\nexport default Core;\n","export const OBJECT_TYPE_ARROW = 'Arrow';\nexport const OBJECT_TYPE_AXES = 'Axes';\nexport const OBJECT_TYPE_FLAT_ARROW = 'FlatArrow';\n\nexport const MAX_POINTCLOUD_POINTS = 100000;\n\nexport const DEFAULT_BACKGROUND_COLOR = '#000000';\nexport const DEFAULT_GRID_SIZE = 30;\nexport const DEFAULT_GRID_DIVISIONS = 30;\nexport const DEFAULT_GRID_COLOR = '#222222';\nexport const DEFAULT_GRID_COLOR_CENTERLINE = '#333333';\n\n/** ***************************\n *   Message types\n * ************************** */\nexport const MESSAGE_TYPE_ROBOT_MODEL = 'robot_description';\nexport const MESSAGE_TYPE_ACCELSTAMPED = 'geometry_msgs/AccelStamped';\nexport const MESSAGE_TYPE_POLYGONSTAMPED = 'geometry_msgs/PolygonStamped';\nexport const MESSAGE_TYPE_POSEARRAY = 'geometry_msgs/PoseArray';\nexport const MESSAGE_TYPE_POSECOVARIANCE = 'geometry_msgs/PoseWithCovariance';\nexport const MESSAGE_TYPE_POSESTAMPED = 'geometry_msgs/PoseStamped';\nexport const MESSAGE_TYPE_TWISTSTAMPED = 'geometry_msgs/TwistStamped';\nexport const MESSAGE_TYPE_VECTOR3STAMPED = 'geometry_msgs/Vector3Stamped';\nexport const MESSAGE_TYPE_WRENCHSTAMPED = 'geometry_msgs/WrenchStamped';\n\nexport const MESSAGE_TYPE_BOUNDINGVOLUME = 'moveit_msgs/BoundingVolume';\nexport const MESSAGE_TYPE_DISPLAYROBOTSTATE = 'moveit_msgs/DisplayRobotState';\nexport const MESSAGE_TYPE_DISPLAYTRAJECTORY = 'moveit_msgs/DisplayTrajectory';\nexport const MESSAGE_TYPE_PLANNINGSCENE = 'moveit_msgs/PlanningScene';\n\nexport const MESSAGE_TYPE_OCCUPANCYGRID = 'nav_msgs/OccupancyGrid';\nexport const MESSAGE_TYPE_ODOMETRY = 'nav_msgs/Odometry';\nexport const MESSAGE_TYPE_PATH = 'nav_msgs/Path';\n\nexport const MESSAGE_TYPE_COMPRESSEDIMAGE = 'sensor_msgs/CompressedImage';\nexport const MESSAGE_TYPE_DISPLAYJOINTSTATE = 'sensor_msgs/JointState';\nexport const MESSAGE_TYPE_IMAGE = 'sensor_msgs/Image';\nexport const MESSAGE_TYPE_LASERSCAN = 'sensor_msgs/LaserScan';\nexport const MESSAGE_TYPE_MAGNETICFIELD = 'sensor_msgs/MagneticField';\nexport const MESSAGE_TYPE_POINTCLOUD = 'sensor_msgs/PointCloud';\nexport const MESSAGE_TYPE_POINTCLOUD2 = 'sensor_msgs/PointCloud2';\nexport const MESSAGE_TYPE_RANGE = 'sensor_msgs/Range';\n\nexport const MESSAGE_TYPE_TF = 'tf/tfMessage';\nexport const MESSAGE_TYPE_TF2 = 'tf2_msgs/TFMessage';\n\nexport const MESSAGE_TYPE_MARKER = 'visualization_msgs/Marker';\nexport const MESSAGE_TYPE_MARKERARRAY = 'visualization_msgs/MarkerArray';\nexport const MESSAGE_TYPE_INTERACTIVEMARKER =\n  'visualization_msgs/InteractiveMarkerInit';\n\n/** ***************************\n *   Visualizations\n * ************************** */\nexport const VIZ_TYPE_IMAGE = 'Image';\nexport const VIZ_TYPE_IMTERACTIVEMARKER = 'InteractiveMarker';\nexport const VIZ_TYPE_LASERSCAN = 'LaserScan';\nexport const VIZ_TYPE_MAP = 'Map';\nexport const VIZ_TYPE_MARKER = 'Marker';\nexport const VIZ_TYPE_MARKERARRAY = 'MarkerArray';\nexport const VIZ_TYPE_ODOMETRY = 'Odometry';\nexport const VIZ_TYPE_PATH = 'Path';\nexport const VIZ_TYPE_POINTCLOUD = 'PointCloud';\nexport const VIZ_TYPE_POLYGON = 'Polygon';\nexport const VIZ_TYPE_POSE = 'Pose';\nexport const VIZ_TYPE_POSEARRAY = 'PoseArray';\nexport const VIZ_TYPE_ROBOTMODEL = 'RobotModel';\nexport const VIZ_TYPE_TF = 'Tf';\n\n/** ***************************\n *   Viz specific constants\n * ************************** */\nexport const MARKER_OBJECT_TYPES = {\n  ARROW: 0,\n  CUBE: 1,\n  SPHERE: 2,\n  CYLINDER: 3,\n  LINE_STRIP: 4,\n  LINE_LIST: 5,\n  CUBE_LIST: 6,\n  SPHERE_LIST: 7,\n  POINTS: 8,\n  TEXT_VIEW_FACING: 9,\n  MESH_RESOURCE: 10,\n  TRIANGLE_LIST: 11,\n};\n\nexport const LINE_STYLES = {\n  LINES: 'Lines',\n  BILLBOARDS: 'Billboards',\n};\n\nexport const MAP_COLOR_SCHEMES = {\n  MAP: 'map',\n  CONST_MAP: 'constmap',\n  RAW: 'raw',\n};\n\nexport const LASERSCAN_STYLES = {\n  SQUARES: 'squares',\n  POINTS: 'points',\n  FLAT_SQUARES: 'flat_squares',\n  SPHERES: 'spheres',\n  BOXES: 'boxes',\n};\n\nexport const COLOR_TRANSFORMERS = {\n  INTENSITY: 'Intensity',\n  AXIS_COLOR: 'AxisColor',\n  FLAT_COLOR: 'FlatColor',\n};\n\nexport const AXES = {\n  X: 'x',\n  Y: 'y',\n  Z: 'z',\n};\n\nexport const INTENSITY_CHANNEL_OPTIONS = {\n  INTENSITY: 'intensity',\n  ...AXES,\n};\n\nexport const ODOMETRY_OBJECT_TYPES = {\n  arrow: OBJECT_TYPE_ARROW,\n  axes: OBJECT_TYPE_AXES,\n};\n\nexport const POSE_OBJECT_TYPES = {\n  arrow: OBJECT_TYPE_ARROW,\n  axes: OBJECT_TYPE_AXES,\n  flatArrow: OBJECT_TYPE_FLAT_ARROW,\n};\n\n/** ***************************\n *   Default Options\n * ************************** */\nexport const DEFAULT_CYLINDER_HEIGHT = 1;\nexport const DEFAULT_CYLINDER_RADIUS = 1;\nexport const DEFAULT_RADIAL_SEGMENTS = 32;\n\nexport const DEFAULT_CONE_HEIGHT = 1;\nexport const DEFAULT_CONE_RADIUS = 1;\n\nexport const DEFAULT_COLOR_X_AXIS = '#ff0000';\nexport const DEFAULT_COLOR_Y_AXIS = '#008000';\nexport const DEFAULT_COLOR_Z_AXIS = '#0000ff';\nexport const DEFAULT_COLOR_ARROW = '#f0ff00';\nexport const DEFAULT_COLOR_LINE = '#f0ff00';\n\nexport const DEFAULT_OPTIONS_SCENE = {\n  backgroundColor: DEFAULT_BACKGROUND_COLOR,\n  gridSize: DEFAULT_GRID_SIZE,\n  gridDivisions: DEFAULT_GRID_DIVISIONS,\n  gridColor: DEFAULT_GRID_COLOR,\n  gridCenterlineColor: DEFAULT_GRID_COLOR_CENTERLINE,\n};\n\nexport const DEFAULT_OPTIONS_ARROW = {\n  shaftLength: 1,\n  shaftRadius: 0.05,\n  headLength: 0.3,\n  headRadius: 0.1,\n};\n\nexport const DEFAULT_OPTIONS_AXES = {\n  axesLength: 1,\n  axesRadius: 0.1,\n};\n\nexport const DEFAULT_OPTIONS_FLATARROW = {\n  arrowLength: 0.3,\n};\n\nconst DEFAULT_OPTIONS_INTENSITY = {\n  channelName: INTENSITY_CHANNEL_OPTIONS.INTENSITY,\n  useRainbow: false,\n  invertRainbow: false,\n  minColor: '#000000',\n  maxColor: '#ffffff',\n  autocomputeIntensityBounds: false,\n  maxIntensity: 3730,\n  minIntensity: 388,\n};\n\nconst DEFAULT_OPITONS_AXIS_COLOR = {\n  axis: AXES.X,\n  autocomputeValueBounds: false,\n  useFixedFrame: false,\n  minAxisValue: 0,\n  maxAxisValue: 0,\n};\n\nexport const DEFAULT_OPTIONS_IMAGE = {\n  queueSize: 1,\n};\n\nexport const DEFAULT_OPTIONS_LASERSCAN = {\n  selectable: false,\n  style: LASERSCAN_STYLES.FLAT_SQUARES,\n  size: 0.05,\n  alpha: 1,\n  decayTime: 0,\n  queueSize: 10,\n  colorTransformer: COLOR_TRANSFORMERS.INTENSITY,\n  flatColor: '#ffffff',\n  ...DEFAULT_OPTIONS_INTENSITY,\n  ...DEFAULT_OPITONS_AXIS_COLOR,\n};\n\nexport const DEFAULT_OPTIONS_MAP = {\n  alpha: 1,\n  colorScheme: MAP_COLOR_SCHEMES.MAP,\n  drawBehind: false,\n};\n\nexport const DEFAULT_OPTIONS_MARKER = {\n  queueSize: 1,\n  namespaces: [],\n};\n\nexport const DEFAULT_OPTIONS_MARKERARRAY = {\n  queueSize: 1,\n  namespaces: [],\n  throttleRate: 0,\n};\n\nexport const DEFAULT_OPTIONS_ODOMETRY = {\n  type: OBJECT_TYPE_ARROW,\n  color: DEFAULT_COLOR_X_AXIS,\n  alpha: 1,\n  ...DEFAULT_OPTIONS_ARROW,\n  ...DEFAULT_OPTIONS_AXES,\n  ...DEFAULT_OPTIONS_FLATARROW,\n  positionTolerance: 0.1,\n  angleTolerance: 0.1,\n  keep: 100,\n};\n\nexport const DEFAULT_OPTIONS_PATH = {\n  color: '#ffffff',\n  alpha: 1,\n};\n\nexport const DEFAULT_OPTIONS_POINTCLOUD = {};\n\nexport const DEFAULT_OPTIONS_POLYGON = {\n  color: '#ffffff',\n  alpha: 1,\n};\n\nexport const DEFAULT_OPTIONS_POSE = {\n  color: DEFAULT_COLOR_X_AXIS,\n  alpha: 1,\n  ...DEFAULT_OPTIONS_ARROW,\n  ...DEFAULT_OPTIONS_AXES,\n  type: POSE_OBJECT_TYPES.arrow,\n};\n\nexport const DEFAULT_OPTIONS_POSEARRAY = {\n  color: DEFAULT_COLOR_X_AXIS,\n  alpha: 1,\n  ...DEFAULT_OPTIONS_ARROW,\n  ...DEFAULT_OPTIONS_AXES,\n  ...DEFAULT_OPTIONS_FLATARROW,\n  type: POSE_OBJECT_TYPES.arrow,\n};\n\nexport const DEFAULT_OPTIONS_ROBOTMODEL = {};\n\nexport const DEFAULT_OPTIONS_TF = {};\n\n/** ***************************\n *   Zethus exports\n * ************************** */\nexport const SUPPORTED_MESSAGE_TYPES = [\n  MESSAGE_TYPE_IMAGE,\n  MESSAGE_TYPE_LASERSCAN,\n  MESSAGE_TYPE_MARKER,\n  MESSAGE_TYPE_MARKERARRAY,\n  MESSAGE_TYPE_OCCUPANCYGRID,\n  MESSAGE_TYPE_ODOMETRY,\n  MESSAGE_TYPE_PATH,\n  MESSAGE_TYPE_POINTCLOUD2,\n  MESSAGE_TYPE_POLYGONSTAMPED,\n  MESSAGE_TYPE_POSESTAMPED,\n  MESSAGE_TYPE_POSEARRAY,\n  MESSAGE_TYPE_POSESTAMPED,\n  MESSAGE_TYPE_ROBOT_MODEL,\n  MESSAGE_TYPE_TF,\n  MESSAGE_TYPE_TF2,\n];\n\nexport const UNSUPPORTED_MESSAGE_TYPES = [\n  MESSAGE_TYPE_ACCELSTAMPED,\n  MESSAGE_TYPE_BOUNDINGVOLUME,\n  MESSAGE_TYPE_COMPRESSEDIMAGE,\n  MESSAGE_TYPE_DISPLAYJOINTSTATE,\n  MESSAGE_TYPE_DISPLAYROBOTSTATE,\n  MESSAGE_TYPE_DISPLAYTRAJECTORY,\n  MESSAGE_TYPE_INTERACTIVEMARKER,\n  MESSAGE_TYPE_MAGNETICFIELD,\n  MESSAGE_TYPE_PLANNINGSCENE,\n  MESSAGE_TYPE_POINTCLOUD,\n  MESSAGE_TYPE_POSECOVARIANCE,\n  MESSAGE_TYPE_RANGE,\n  MESSAGE_TYPE_TWISTSTAMPED,\n  MESSAGE_TYPE_VECTOR3STAMPED,\n  MESSAGE_TYPE_WRENCHSTAMPED,\n];\n","export const setTransform = (\n  object,\n  {\n    translation: { x: posX, y: posY, z: posZ },\n    rotation: { x: orientX, y: orientY, z: orientZ, w: orientW },\n  },\n) => {\n  object.position.set(posX, posY, posZ);\n  object.quaternion.set(orientX, orientY, orientZ, orientW);\n};\n\nexport const setScale = (object, { x, y, z }) => {\n  object.scale.set(x, y, z);\n};\n\nexport const setColor = (object, { r, g, b }) => {\n  object.material.color.setRGB(r, g, b);\n};\n","import { Mesh as THREEMesh, Math } from 'three';\n\nimport * as TransformUtils from '../utils/transform';\n\nclass Mesh extends THREEMesh {\n  setTransform(transform) {\n    TransformUtils.setTransform(this, transform);\n  }\n\n  setScale(scale) {\n    TransformUtils.setScale(this, scale);\n  }\n\n  setColor(colors) {\n    TransformUtils.setColor(this, colors);\n  }\n\n  setAlpha(alpha) {\n    this.material.opacity = Math.clamp(alpha, 0, 1);\n  }\n}\n\nexport default Mesh;\n","import * as THREE from 'three';\n\nimport {\n  DEFAULT_CYLINDER_RADIUS,\n  DEFAULT_CYLINDER_HEIGHT,\n  DEFAULT_RADIAL_SEGMENTS,\n  DEFAULT_COLOR_ARROW,\n} from '../utils/constants';\nimport Mesh from './Mesh';\n\nclass Cylinder extends Mesh {\n  constructor(\n    color = DEFAULT_COLOR_ARROW,\n    radius = DEFAULT_CYLINDER_RADIUS,\n    height = DEFAULT_CYLINDER_HEIGHT,\n  ) {\n    super();\n    this.geometry = new THREE.CylinderGeometry(\n      radius,\n      radius,\n      height,\n      DEFAULT_RADIAL_SEGMENTS,\n    );\n    this.material = new THREE.MeshStandardMaterial({ color });\n    this.material.transparent = true;\n    this.rotateX(Math.PI / 2);\n  }\n}\n\nexport default Cylinder;\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\nimport {\n  DEFAULT_CONE_RADIUS,\n  DEFAULT_CONE_HEIGHT,\n  DEFAULT_RADIAL_SEGMENTS,\n} from '../utils/constants';\n\nclass Cone extends Mesh {\n  constructor(color) {\n    super();\n    this.geometry = new THREE.ConeGeometry(\n      DEFAULT_CONE_RADIUS,\n      DEFAULT_CONE_HEIGHT,\n      DEFAULT_RADIAL_SEGMENTS,\n    );\n    this.material = new THREE.MeshStandardMaterial({ color });\n    this.material.transparent = true;\n  }\n}\n\nexport default Cone;\n","import * as THREE from 'three';\n\nimport * as TransformUtils from '../utils/transform';\n\nclass Group extends THREE.Group {\n  setTransform(transform) {\n    TransformUtils.setTransform(this, transform);\n  }\n\n  setScale(scale) {\n    TransformUtils.setScale(this, scale);\n  }\n\n  setColor(colors) {\n    this.children.forEach(child => {\n      TransformUtils.setColor(child, colors);\n    });\n  }\n}\n\nexport default Group;\n","import {\n  DEFAULT_CONE_HEIGHT,\n  DEFAULT_CONE_RADIUS,\n  DEFAULT_CYLINDER_HEIGHT,\n  DEFAULT_CYLINDER_RADIUS,\n  DEFAULT_COLOR_X_AXIS,\n  OBJECT_TYPE_ARROW,\n} from '../utils/constants';\nimport Cylinder from './Cylinder';\nimport Cone from './Cone';\nimport Group from './Group';\nimport * as TransformUtils from '../utils/transform';\n\nclass Arrow extends Group {\n  constructor() {\n    super();\n\n    this.cone = new Cone(DEFAULT_COLOR_X_AXIS);\n    this.cone.rotateZ(-Math.PI / 2);\n\n    this.cylinder = new Cylinder(DEFAULT_COLOR_X_AXIS);\n    this.cylinder.rotateZ(-Math.PI / 2);\n\n    this.cone.setScale({\n      x: DEFAULT_CONE_RADIUS,\n      y: DEFAULT_CONE_HEIGHT,\n      z: DEFAULT_CONE_RADIUS,\n    });\n\n    this.cylinder.setScale({\n      x: DEFAULT_CYLINDER_RADIUS,\n      y: DEFAULT_CYLINDER_HEIGHT,\n      z: DEFAULT_CYLINDER_RADIUS,\n    });\n    this.cylinder.translateY(this.cylinder.scale.y / 2);\n    this.cone.translateY(this.cylinder.scale.y + this.cone.scale.y / 2);\n\n    this.type = OBJECT_TYPE_ARROW;\n    this.add(this.cone);\n    this.add(this.cylinder);\n  }\n\n  setColor({ cone, cylinder }) {\n    if (cone) {\n      this.cone.setColor(cone);\n    }\n\n    if (cylinder) {\n      this.cylinder.setColor(cylinder);\n    }\n  }\n\n  setHeadDimensions({ radius, length }) {\n    const parsedRadius = parseFloat(radius);\n    const parsedLength = parseFloat(length);\n\n    if (parsedRadius) {\n      const { y } = this.cone.scale;\n      this.cone.setScale({ x: radius, y, z: radius });\n    }\n\n    if (parsedLength) {\n      const { x, z } = this.cone.scale;\n      this.cone.setScale({ x, y: parsedLength, z });\n      this.cone.position.set(0, 0, 0);\n      this.cone.translateY(this.cylinder.scale.y + parsedLength / 2);\n    }\n  }\n\n  setShaftDimensions({ radius, length }) {\n    const parsedRadius = parseFloat(radius);\n    const parsedLength = parseFloat(length);\n\n    if (radius) {\n      const { y } = this.cylinder.scale;\n      this.cylinder.setScale({ x: parsedRadius, y, z: parsedRadius });\n    }\n\n    if (length) {\n      const { x, z } = this.cylinder.scale;\n      this.cylinder.setScale({ x, y: parsedLength, z });\n      this.cylinder.position.set(0, 0, 0);\n      this.cylinder.translateY(parsedLength / 2);\n      this.setHeadDimensions({ length: this.cone.scale.y });\n    }\n  }\n\n  setAlpha(alpha) {\n    this.cylinder.setAlpha(alpha);\n    this.cone.setAlpha(alpha);\n  }\n\n  setScale(scale) {\n    const { x } = scale;\n    const [y, z] = [x / 2, x / 2];\n    TransformUtils.setScale(this, { x, y, z });\n  }\n}\n\nexport default Arrow;\n","import Cylinder from './Cylinder';\nimport {\n  DEFAULT_COLOR_X_AXIS,\n  DEFAULT_CYLINDER_HEIGHT,\n  DEFAULT_COLOR_Y_AXIS,\n  DEFAULT_COLOR_Z_AXIS,\n  OBJECT_TYPE_AXES,\n} from '../utils/constants';\nimport Group from './Group';\n\nclass Axes extends Group {\n  constructor(radius, height) {\n    super();\n    this.x = new Cylinder(DEFAULT_COLOR_X_AXIS, radius, height);\n    this.y = new Cylinder(DEFAULT_COLOR_Y_AXIS, radius, height);\n    this.z = new Cylinder(DEFAULT_COLOR_Z_AXIS, radius, height);\n\n    this.x.translateX((height || DEFAULT_CYLINDER_HEIGHT) / 2);\n    this.y.translateZ(-(height || DEFAULT_CYLINDER_HEIGHT) / 2);\n    this.z.translateY((height || DEFAULT_CYLINDER_HEIGHT) / 2);\n\n    this.x.rotateZ(-Math.PI / 2);\n    this.y.rotateX(Math.PI / 2);\n\n    this.type = OBJECT_TYPE_AXES;\n    this.add(this.x);\n    this.add(this.y);\n    this.add(this.z);\n  }\n\n  setLength(length) {\n    length = parseFloat(length);\n    [this.x, this.y, this.z].forEach(axis => {\n      axis.position.set(0, 0, 0);\n      axis.scale.setY(length);\n    });\n\n    this.x.translateY(length / 2);\n    this.y.translateY(-length / 2);\n    this.z.translateY(length / 2);\n  }\n\n  setRadius(radius) {\n    this.children.forEach(child => {\n      child.scale.setX(parseFloat(radius));\n      child.scale.setZ(parseFloat(radius));\n    });\n  }\n}\n\nexport default Axes;\n","import * as THREE from 'three';\n\nimport * as TransformUtils from '../utils/transform';\nimport { DEFAULT_COLOR_LINE } from '../utils/constants';\n\nclass Line extends THREE.Line {\n  constructor(color = DEFAULT_COLOR_LINE, disableVertexColor) {\n    super();\n    this.geometry = new THREE.Geometry();\n    this.geometry.vertices.push(new THREE.Vector3(0, 0, 0));\n    const colorOptions = {};\n\n    if (!disableVertexColor) {\n      colorOptions.vertexColors = THREE.VertexColors;\n    }\n\n    this.material = new THREE.LineBasicMaterial({ ...colorOptions });\n    this.material.transparent = true;\n  }\n\n  setColor(colors) {\n    TransformUtils.setColor(this, colors);\n  }\n\n  updatePoints(points, colors = []) {\n    this.geometry.vertices = points.map(\n      ({ x, y, z }) => new THREE.Vector3(x, y, z),\n    );\n    this.geometry.verticesNeedUpdate = true;\n\n    const color = [];\n    colors.forEach(({ r, g, b }) => {\n      color.push(new THREE.Color(r, g, b));\n    });\n\n    this.geometry.colors = color;\n    this.geometry.colorsNeedUpdate = true;\n  }\n\n  setTransform(transform) {\n    TransformUtils.setTransform(this, transform);\n  }\n\n  setAlpha(alpha) {\n    this.material.opacity = alpha;\n  }\n}\n\nexport default Line;\n","import * as THREE from 'three';\n\nimport Group from './Group';\nimport Line from './Line';\nimport { OBJECT_TYPE_FLAT_ARROW } from '../utils/constants';\n\nclass LineArrow extends Group {\n  constructor() {\n    super();\n    this.type = OBJECT_TYPE_FLAT_ARROW;\n    this.arrowTop = new Line(0xff0000, true);\n    this.topPoints = [];\n    this.topPoints.push(new THREE.Vector3(2, 1, 0));\n    this.topPoints.push(new THREE.Vector3(3, 0, 0));\n    this.topPoints.push(new THREE.Vector3(2, -1, 0));\n    this.arrowTop.updatePoints(this.topPoints);\n    this.add(this.arrowTop);\n\n    this.arrowLength = new Line(0xff0000, true);\n    this.arrowLength.updatePoints([\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(3, 0, 0),\n    ]);\n    this.add(this.arrowLength);\n\n    this.scale.set(0.1, 0.1, 0.1);\n  }\n\n  setLength(length) {\n    this.scale.set(length, length, length);\n  }\n\n  setColor(color) {\n    const { r, g, b } = color;\n    this.arrowTop.material.color.setRGB(r, g, b);\n    this.arrowLength.material.color.setRGB(r, g, b);\n  }\n}\n\nexport default LineArrow;\n","import * as THREE from 'three';\n\nimport {\n  OBJECT_TYPE_ARROW,\n  OBJECT_TYPE_AXES,\n  OBJECT_TYPE_FLAT_ARROW,\n} from './constants';\n\nexport const checkToleranceThresholdExceed = (oldPose, newPose, options) => {\n  const { positionTolerance, angleTolerance } = options;\n  const { position, quaternion } = newPose;\n  const { position: oldPosition, quaternion: oldQuaternion } = oldPose;\n\n  const positionToleranceBool =\n    oldPosition.distanceTo(position) > positionTolerance;\n  const angleToleranceBool = oldQuaternion.angleTo(quaternion) > angleTolerance;\n\n  return positionToleranceBool || angleToleranceBool;\n};\n\nexport const setObjectDimension = (object, options) => {\n  switch (options.type) {\n    case OBJECT_TYPE_ARROW: {\n      const {\n        color,\n        alpha,\n        shaftLength,\n        shaftRadius,\n        headLength,\n        headRadius,\n      } = options;\n\n      object.setHeadDimensions({ radius: headRadius, length: headLength });\n      object.setShaftDimensions({ radius: shaftRadius, length: shaftLength });\n      object.setAlpha(alpha);\n      object.setColor({\n        cone: new THREE.Color(color),\n        cylinder: new THREE.Color(color),\n      });\n      break;\n    }\n    case OBJECT_TYPE_AXES: {\n      const { axesLength, axesRadius } = options;\n\n      object.setLength(axesLength);\n      object.setRadius(axesRadius);\n      break;\n    }\n    case OBJECT_TYPE_FLAT_ARROW: {\n      const { arrowLength, color } = options;\n\n      object.setLength(arrowLength);\n      object.setColor(new THREE.Color(color));\n      break;\n    }\n  }\n};\n\nexport const removeChildren = object => {\n  while (object.children.length > 0) {\n    object.remove(object.children[0]);\n  }\n};\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport {\n  DEFAULT_OPTIONS_POSE,\n  MESSAGE_TYPE_POSESTAMPED,\n  POSE_OBJECT_TYPES,\n} from '../utils/constants';\nimport Arrow from '../primitives/Arrow';\nimport Axes from '../primitives/Axes';\nimport LineArrow from '../primitives/LineArrow';\nimport { setObjectDimension } from '../utils/helpers';\n\nclass Pose extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_POSE) {\n    super(ros, topicName, MESSAGE_TYPE_POSESTAMPED, options);\n    this.object = new THREE.Group();\n    this.primitive = null;\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_POSE,\n      ...options,\n    });\n  }\n\n  static getNewPrimitive(options) {\n    const { type } = options;\n    let newObject = null;\n\n    switch (type) {\n      case POSE_OBJECT_TYPES.arrow:\n        newObject = new Arrow();\n        break;\n      case POSE_OBJECT_TYPES.axes:\n        newObject = new Axes();\n        break;\n      case POSE_OBJECT_TYPES.flatArrow:\n        newObject = new LineArrow();\n        break;\n    }\n\n    return newObject;\n  }\n\n  updateOptions(options) {\n    super.updateOptions(options);\n    const { type } = this.options;\n\n    if (this.primitive && this.primitive.type !== type) {\n      this.object.remove(this.primitive);\n      this.primitive = null;\n    }\n\n    if (!this.primitive) {\n      this.primitive = Pose.getNewPrimitive(this.options);\n      this.object.add(this.primitive);\n    }\n\n    setObjectDimension(this.primitive, this.options);\n  }\n\n  update(message) {\n    super.update(message);\n    const {\n      pose: { position, orientation },\n    } = message;\n    this.primitive.setTransform({\n      translation: position,\n      rotation: orientation,\n    });\n  }\n}\n\nexport default Pose;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport {\n  DEFAULT_OPTIONS_POLYGON,\n  MESSAGE_TYPE_POLYGONSTAMPED,\n} from '../utils/constants';\nimport Group from '../primitives/Group';\nimport Line from '../primitives/Line';\n\nclass Polygon extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_POLYGON) {\n    super(ros, topicName, MESSAGE_TYPE_POLYGONSTAMPED, options);\n    this.object = new Group();\n    this.line = new Line(null, true);\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_POLYGON,\n      ...options,\n    });\n  }\n\n  updateOptions(options) {\n    super.updateOptions(options);\n    const { color, alpha } = this.options;\n    this.line.setColor(new THREE.Color(color));\n    this.line.setAlpha(alpha);\n  }\n\n  update(message) {\n    super.update(message);\n    const {\n      polygon: { points },\n    } = message;\n    points.push(points[0]);\n    this.line.updatePoints(points);\n    this.object.add(this.line);\n  }\n}\n\nexport default Polygon;\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\n\nclass Text extends Mesh {\n  constructor(text) {\n    super();\n    const loader = new THREE.FontLoader();\n\n    loader.load(\n      'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/fonts/helvetiker_regular.typeface.json',\n      font => {\n        this.geometry = new THREE.TextGeometry(text, {\n          font,\n          size: 0.05,\n          height: 0.005,\n          curveSegments: 12,\n          bevelEnabled: false,\n          bevelThickness: 10,\n          bevelSize: 8,\n          bevelSegments: 5,\n        });\n        this.material = new THREE.MeshBasicMaterial({ color: 0xdddddd });\n      },\n    );\n\n    this.rotateX(Math.PI / 2);\n    this.rotateY(Math.PI);\n  }\n}\n\nexport default Text;\n","import * as THREE from 'three';\n\nimport Axes from './Axes';\nimport Group from './Group';\nimport Text from './Text';\nimport Arrow from './Arrow';\nimport {\n  DEFAULT_COLOR_ARROW,\n  DEFAULT_CONE_HEIGHT,\n  DEFAULT_CONE_RADIUS,\n  DEFAULT_CYLINDER_HEIGHT,\n  DEFAULT_CYLINDER_RADIUS,\n} from '../utils/constants';\n\nclass TfFrame extends Group {\n  constructor(frameId) {\n    super();\n    this.add(new Axes(0.015, 0.25));\n    const textObject = new Text(frameId);\n    textObject\n      .rotateY(Math.PI)\n      .translateX(0.03)\n      .translateY(0.03);\n    this.add(textObject);\n    this.arrow = new Arrow();\n    this.arrow.setHeadDimensions({\n      length: (DEFAULT_CONE_HEIGHT * 0.3) / 2,\n      radius: (DEFAULT_CONE_RADIUS * 0.1) / 2,\n    });\n    this.arrow.setShaftDimensions({\n      length: DEFAULT_CYLINDER_HEIGHT * 0.85,\n      radius: (DEFAULT_CYLINDER_RADIUS * 0.05) / 6,\n    });\n    this.arrow.setColor({\n      cone: new THREE.Color('#FF1493'),\n      cylinder: new THREE.Color(DEFAULT_COLOR_ARROW),\n    });\n    this.add(this.arrow);\n    this.name = TfFrame.getName(frameId);\n  }\n\n  static getName(frameId) {\n    return `tf-${frameId}`;\n  }\n}\n\nexport default TfFrame;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport TfFrame from '../primitives/TfFrame';\nimport { DEFAULT_OPTIONS_TF } from '../utils/constants';\n\nclass Tf extends Core {\n  constructor(ros, topics, options = DEFAULT_OPTIONS_TF) {\n    super(ros, topics, null, options);\n    this.object = new THREE.Group();\n    this.object.name = 'test';\n  }\n\n  update(message) {\n    const { transforms } = message;\n    transforms.forEach(\n      ({\n        header: { frame_id: parentFrameId },\n        child_frame_id: childFrameId,\n        transform,\n      }) => {\n        const [childFrame, parentFrame] = [\n          this.getFrameOrCreate(childFrameId),\n          this.getFrameOrCreate(parentFrameId),\n        ];\n\n        parentFrame.add(childFrame);\n        childFrame.setTransform(transform);\n\n        if (childFrame.position.length() < 0.1) {\n          childFrame.arrow.visible = false;\n        } else {\n          childFrame.arrow.lookAt(\n            parentFrame.getWorldPosition(new THREE.Vector3()),\n          );\n          childFrame.arrow.rotateY(-Math.PI / 2);\n          childFrame.arrow.visible = true;\n\n          const arrowConeLength = childFrame.arrow.cone.scale.y;\n          childFrame.arrow.setShaftDimensions({\n            length: childFrame.position.length() - arrowConeLength,\n          });\n        }\n      },\n    );\n\n    this.object.children.forEach(child => {\n      child.arrow.visible = false;\n    });\n  }\n\n  getFrameOrCreate(frameId) {\n    const existingFrame = this.object.getObjectByName(TfFrame.getName(frameId));\n    if (existingFrame) {\n      return existingFrame;\n    }\n\n    const newFrame = new TfFrame(frameId);\n    this.object.add(newFrame);\n    return newFrame;\n  }\n}\n\nexport default Tf;\n","import ROSLIB from 'roslib';\nimport * as THREE from 'three';\nimport URDFLoader from 'urdf-loader';\nimport Group from '../primitives/Group';\nimport { DEFAULT_OPTIONS_ROBOTMODEL } from '../utils/constants';\n\nconst excludedObjects = [\n  'PerspectiveCamera',\n  'OrthographicCamera',\n  'AmbientLight',\n  'DirectionalLight',\n  'HemisphereLight',\n  'Light',\n  'RectAreaLight',\n  'SpotLight',\n  'PointLight',\n];\n\nconst removeExcludedObjects = mesh => {\n  const objectArray = [mesh];\n  while (Object.keys(objectArray).length > 0) {\n    const currentItem = objectArray.shift();\n    currentItem.children.forEach(child => {\n      if (!child) {\n        return;\n      }\n      if (excludedObjects.indexOf(child.type) > -1) {\n        const { parent } = child;\n        parent.children = parent.children.filter(c => c !== child);\n      } else {\n        objectArray.push(child);\n      }\n    });\n  }\n};\n\nclass RobotModel extends URDFLoader {\n  constructor(ros, paramName, options = DEFAULT_OPTIONS_ROBOTMODEL) {\n    super(THREE.DefaultLoadingManager);\n    const { packages } = options;\n    this.param = new ROSLIB.Param({\n      ros,\n      name: paramName,\n    });\n    this.object = new Group();\n    this.packages = packages || {};\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_ROBOTMODEL,\n      ...options,\n    });\n\n    this.defaultLoadMeshCallback = this.defaultLoadMeshCallback.bind(this);\n  }\n\n  static onComplete(object) {\n    removeExcludedObjects(object);\n  }\n\n  updateOptions() {}\n\n  load(onComplete = RobotModel.onComplete, options = {}) {\n    this.param.get(robotString => {\n      const robotModel = super.parse(robotString, {\n        packages: this.packages,\n        loadMeshCb: options.loadMeshCb || this.defaultLoadMeshCallback,\n        fetchOptions: { mode: 'cors', credentials: 'same-origin' },\n        ...options,\n      });\n      this.object.add(robotModel);\n      this.object.name = robotModel.robotName;\n\n      onComplete(this.object);\n    });\n  }\n\n  defaultLoadMeshCallback(path, ext, done) {\n    super.defaultMeshLoader(path, ext, mesh => {\n      removeExcludedObjects(mesh);\n      done(mesh);\n    });\n  }\n\n  getPackages(onComplete) {\n    this.param.get(robotString => {\n      const parser = new DOMParser();\n      const urdf = parser.parseFromString(robotString, 'text/xml');\n      const packages = [...urdf.querySelectorAll('mesh')].map(mesh => {\n        const [targetPkg] = mesh\n          .getAttribute('filename')\n          .replace(/^package:\\/\\//, '')\n          .split(/\\/(.+)/);\n        return targetPkg;\n      });\n      onComplete([...new Set(packages)]);\n    });\n  }\n\n  destroy() {\n    if (this.object.parent) {\n      this.object.parent.remove(this.object);\n    }\n  }\n\n  hide() {\n    this.object.visible = false;\n  }\n\n  show() {\n    this.object.visible = true;\n  }\n}\n\nexport default RobotModel;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport {\n  MESSAGE_TYPE_POINTCLOUD2,\n  MAX_POINTCLOUD_POINTS,\n  DEFAULT_OPTIONS_POINTCLOUD,\n} from '../utils/constants';\n\nconst readPoint = (offsets, dataView, index, isBigendian, pointStep) => {\n  const baseOffset = index * pointStep;\n  const rgb = dataView.getUint32(baseOffset + offsets.rgb, !isBigendian);\n  const hex = rgb.toString(16).padStart(6, '0');\n  return {\n    x: dataView.getFloat32(baseOffset + offsets.x, !isBigendian),\n    y: dataView.getFloat32(baseOffset + offsets.y, !isBigendian),\n    z: dataView.getFloat32(baseOffset + offsets.z, !isBigendian),\n    hex,\n  };\n};\n\nconst BASE64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfunction decode64(x) {\n  const a = [];\n  let z = 0;\n  let bits = 0;\n\n  for (let i = 0, len = x.length; i < len; i++) {\n    z += BASE64.indexOf(x[i]);\n    bits += 6;\n    if (bits >= 8) {\n      bits -= 8;\n      a.push(z >> bits);\n      z &= 2 ** bits - 1;\n    }\n    z <<= 6;\n  }\n  return a;\n}\n\nconst editPointCloudPoints = function(message) {\n  const positions = [];\n  const colors = [];\n  if (message) {\n    const { fields } = message;\n    const offsets = {};\n\n    fields.forEach(f => {\n      offsets[f.name] = f.offset;\n    });\n\n    const n = message.height * message.width;\n    const uint8Buffer = Uint8Array.from(decode64(message.data)).buffer;\n    const dataView = new DataView(uint8Buffer);\n    for (let i = 0; i < n; i++) {\n      const pt = readPoint(\n        offsets,\n        dataView,\n        i,\n        message.is_bigendian,\n        message.point_step,\n      );\n      if (pt.x && pt.y && pt.z) {\n        positions.push(pt.x, pt.y, pt.z);\n        const color = new THREE.Color(`#${pt.hex}`);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n  }\n  return {\n    positions: Float32Array.from(positions),\n    colors: Float32Array.from(colors),\n  };\n};\n\nclass PointCloud extends Core {\n  constructor(\n    ros,\n    topicName,\n    messageType = MESSAGE_TYPE_POINTCLOUD2,\n    options = DEFAULT_OPTIONS_POINTCLOUD,\n  ) {\n    super(ros, topicName, messageType, options);\n    const cloudMaterial = new THREE.PointsMaterial({\n      size: 0.1,\n      vertexColors: THREE.VertexColors,\n    });\n    const geometry = new THREE.BufferGeometry();\n    geometry.addAttribute(\n      'position',\n      new THREE.BufferAttribute(\n        new Float32Array(MAX_POINTCLOUD_POINTS * 3),\n        3,\n      ).setDynamic(true),\n    );\n    geometry.addAttribute(\n      'color',\n      new THREE.BufferAttribute(\n        new Float32Array(MAX_POINTCLOUD_POINTS * 3),\n        3,\n      ).setDynamic(true),\n    );\n    geometry.setDrawRange(0, 0);\n    this.object = new THREE.Points(geometry, cloudMaterial);\n    this.object.frustumCulled = false;\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_POINTCLOUD,\n      ...options,\n    });\n  }\n\n  updatePointCloudGeometry(positions, colors) {\n    const { geometry } = this.object;\n    const l = Math.min(MAX_POINTCLOUD_POINTS, positions.length);\n    geometry.setDrawRange(0, l);\n    const geoPositions = geometry.attributes.position.array;\n    const geoColors = geometry.attributes.color.array;\n\n    for (let i = 0, arrayLength = l * 3; i < arrayLength; i++) {\n      geoPositions[i] = positions[i] || 0;\n      geoColors[i] = colors[i] || 0;\n    }\n    for (let i = l * 3; i < MAX_POINTCLOUD_POINTS; i++) {\n      geoPositions[i] = 0;\n    }\n\n    geometry.attributes.position.needsUpdate = true;\n    geometry.attributes.color.needsUpdate = true;\n  }\n\n  update(message) {\n    super.update(message);\n    const { positions, colors } = editPointCloudPoints(message);\n    this.updatePointCloudGeometry(positions, colors);\n  }\n}\n\nexport default PointCloud;\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\n\nclass Cube extends Mesh {\n  constructor() {\n    super();\n    this.geometry = new THREE.BoxGeometry();\n    this.material = new THREE.MeshStandardMaterial();\n  }\n\n  setScale({ x }) {\n    super.setScale({ x, y: x, z: x });\n  }\n}\n\nexport default Cube;\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\nimport { DEFAULT_RADIAL_SEGMENTS } from '../utils/constants';\n\nclass Sphere extends Mesh {\n  constructor(color, size = 1) {\n    super();\n    this.geometry = new THREE.SphereGeometry(\n      size,\n      DEFAULT_RADIAL_SEGMENTS,\n      DEFAULT_RADIAL_SEGMENTS,\n    );\n    this.material = new THREE.MeshStandardMaterial();\n  }\n}\n\nexport default Sphere;\n","import * as THREE from 'three';\nimport * as TransformUtils from '../utils/transform';\nimport { DEFAULT_COLOR_LINE } from '../utils/constants';\n\nclass LineSegments extends THREE.LineSegments {\n  constructor(color = DEFAULT_COLOR_LINE, linewidth = 5) {\n    super();\n    this.geometry = new THREE.Geometry();\n    this.material = new THREE.LineBasicMaterial({ linewidth });\n    this.material.vertexColors = THREE.VertexColors;\n  }\n\n  setColor(colors) {\n    TransformUtils.setColor(this, colors);\n  }\n\n  updatePoints(points, colors) {\n    this.geometry.vertices = points.map(\n      ({ x, y, z }) => new THREE.Vector3(x, y, z),\n    );\n    this.geometry.verticesNeedUpdate = true;\n\n    if (colors.length > 0) {\n      this.geometry.colors = colors.map(\n        ({ r, g, b }) => new THREE.Color(r, g, b),\n      );\n      this.geometry.colorsNeedUpdate = true;\n    }\n  }\n\n  setTransform(transform) {\n    TransformUtils.setTransform(this, transform);\n  }\n}\n\nexport default LineSegments;\n","class ObjectCacher {\n  constructor(objectPool, Primitive) {\n    this.objectPool = objectPool;\n    this.Primitive = Primitive;\n  }\n\n  setObjectDimension(object, { x, y, z }, color, scale) {\n    object.setColor(color);\n    object.setScale(scale);\n    object.position.set(x, y, z);\n  }\n\n  reusePool(points, colors, options) {\n    const { scale } = options;\n    const currentCount = points.length;\n\n    for (let i = 0; i < currentCount; i++) {\n      const currentChild = this.objectPool.children[i];\n      this.setObjectDimension(currentChild, points[i], colors[i], scale);\n    }\n\n    for (let i = currentCount; i < this.objectPool.children.length; i++) {\n      this.objectPool.children[i].visible = false;\n    }\n  }\n\n  increasePool(points, colors, options) {\n    const currentCount = this.objectPool.children.length;\n    const { scale, subtype } = options;\n    const newOptions = { type: subtype };\n\n    for (let i = 0; i < currentCount; i++) {\n      const currentChild = this.objectPool.children[i];\n      this.setObjectDimension(currentChild, points[i], colors[i], scale);\n    }\n\n    for (let i = currentCount; i < points.length; i++) {\n      const sphere = new this.Primitive();\n      const { x, y, z } = points[i];\n\n      sphere.setColor(colors[i]);\n      sphere.setScale(scale);\n      sphere.position.set(x, y, z);\n      this.objectPool.add(sphere);\n    }\n  }\n}\n\nexport default ObjectCacher;\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\nimport ObjectCacher from '../utils/objectCacher';\nimport { MARKER_OBJECT_TYPES } from '../utils/constants';\nimport Sphere from './Sphere';\n\nclass SphereList extends Mesh {\n  constructor() {\n    super();\n    this.geometry = new THREE.Geometry();\n    this.material = new THREE.MeshBasicMaterial();\n    this.objectCacher = new ObjectCacher(this, Sphere);\n  }\n\n  updatePoints(points, colors, options = {}) {\n    options.subtype = MARKER_OBJECT_TYPES.SPHERE;\n\n    if (points.length < this.children.length) {\n      this.objectCacher.reusePool(points, colors, options);\n    } else {\n      this.objectCacher.increasePool(points, colors, options);\n    }\n  }\n}\n\nexport default SphereList;\n","import * as THREE from 'three';\n\nimport * as TransformUtils from '../utils/transform';\n\nclass Points extends THREE.Points {\n  constructor() {\n    super();\n    this.geometry = new THREE.Geometry();\n    this.material = new THREE.PointsMaterial({\n      vertexColors: THREE.VertexColors,\n    });\n  }\n\n  setTransform(transform) {\n    TransformUtils.setTransform(this, transform);\n  }\n\n  updatePoints(points, colors, options = {}) {\n    const {\n      scale: { x },\n    } = options;\n\n    this.material.size = x;\n    this.geometry.vertices = points.map(\n      vertex => new THREE.Vector3(vertex.x, vertex.y, vertex.z),\n    );\n    this.geometry.verticesNeedUpdate = true;\n\n    if (colors.length > 0) {\n      this.geometry.colors = colors.map(\n        color => new THREE.Color(color.r, color.g, color.b),\n      );\n      this.geometry.colorsNeedUpdate = true;\n    }\n  }\n\n  setScale({ x: size }) {\n    this.material.size = size;\n  }\n}\n\nexport default Points;\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\n\nclass TriangleList extends Mesh {\n  constructor() {\n    super();\n    this.geometry = new THREE.Geometry();\n\n    this.material = new THREE.MeshBasicMaterial({\n      vertexColors: THREE.FaceColors,\n    });\n    this.material.side = THREE.DoubleSide;\n  }\n\n  updatePoints(points, colors = [], options) {\n    const vertices = [];\n    const faces = [];\n    const {\n      scale: { x, y, z },\n    } = options;\n\n    this.scale.set(x, y, z);\n    for (let index = 0, l = points.length / 3; index < l; index++) {\n      const verticesArray = [\n        points[3 * index],\n        points[3 * index + 1],\n        points[3 * index + 2],\n      ];\n      verticesArray.map(side => {\n        vertices.push(new THREE.Vector3(side.x, side.y, side.z));\n      });\n\n      const color =\n        colors.length === 0 ? { r: 1, g: 0, b: 0 } : colors[3 * index];\n      faces.push(\n        new THREE.Face3(\n          3 * index,\n          3 * index + 2,\n          3 * index + 1,\n          new THREE.Vector3(),\n          new THREE.Color(color.r, color.g, color.b),\n        ),\n      );\n    }\n\n    this.geometry.vertices = vertices;\n    this.geometry.faces = faces;\n\n    this.geometry.computeFaceNormals();\n    this.geometry.computeVertexNormals();\n    this.geometry.elementsNeedUpdate = true;\n    this.geometry.verticesNeedUpdate = true;\n  }\n}\n\nexport default TriangleList;\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\nimport ObjectCacher from '../utils/objectCacher';\nimport { MARKER_OBJECT_TYPES } from '../utils/constants';\nimport Cube from './Cube';\n\nclass CubeList extends Mesh {\n  constructor() {\n    super();\n    this.geometry = new THREE.Geometry();\n    this.material = new THREE.MeshBasicMaterial();\n    this.objectCacher = new ObjectCacher(this, Cube);\n  }\n\n  updatePoints(points, colors, options = {}) {\n    options.subtype = MARKER_OBJECT_TYPES.CUBE;\n\n    if (points.length < this.children.length) {\n      this.objectCacher.reusePool(points, colors, options);\n    } else {\n      this.objectCacher.increasePool(points, colors, options);\n    }\n  }\n}\n\nexport default CubeList;\n","import {\n  DEFAULT_CONE_HEIGHT,\n  DEFAULT_CONE_RADIUS,\n  DEFAULT_CYLINDER_HEIGHT,\n  DEFAULT_CYLINDER_RADIUS,\n  MARKER_OBJECT_TYPES,\n} from './constants';\nimport Cube from '../primitives/Cube';\nimport Sphere from '../primitives/Sphere';\nimport Group from '../primitives/Group';\nimport Cylinder from '../primitives/Cylinder';\nimport LineSegments from '../primitives/LineSegment';\nimport Line from '../primitives/Line';\nimport SphereList from '../primitives/SphereList';\nimport Points from '../primitives/Points';\nimport TriangleList from '../primitives/TriangleList';\nimport CubeList from '../primitives/CubeList';\nimport Arrow from '../primitives/Arrow';\n\nconst getNewPrimitive = marker => {\n  switch (marker.type) {\n    case MARKER_OBJECT_TYPES.CUBE:\n      return new Cube();\n    case MARKER_OBJECT_TYPES.SPHERE:\n      return new Sphere();\n    case MARKER_OBJECT_TYPES.CYLINDER: {\n      const group = new Group();\n      group.add(new Cylinder());\n      return group;\n    }\n    case MARKER_OBJECT_TYPES.LINE_LIST:\n      return new LineSegments();\n    case MARKER_OBJECT_TYPES.LINE_STRIP:\n      return new Line();\n    case MARKER_OBJECT_TYPES.SPHERE_LIST:\n      return new SphereList();\n    case MARKER_OBJECT_TYPES.POINTS:\n      return new Points();\n    case MARKER_OBJECT_TYPES.TRIANGLE_LIST:\n      return new TriangleList();\n    case MARKER_OBJECT_TYPES.CUBE_LIST:\n      return new CubeList();\n    case MARKER_OBJECT_TYPES.ARROW:\n    default: {\n      const arrow = new Arrow();\n      arrow.setHeadDimensions({\n        radius: DEFAULT_CONE_RADIUS * 0.1,\n        length: DEFAULT_CONE_HEIGHT * 0.3,\n      });\n      arrow.setShaftDimensions({\n        radius: DEFAULT_CYLINDER_RADIUS * 0.05,\n        length: DEFAULT_CYLINDER_HEIGHT * 0.7,\n      });\n      return arrow;\n    }\n  }\n};\n\nexport default getNewPrimitive;\n","import ROSLIB from 'roslib';\nimport getNewPrimitive from './primitives';\n\nexport default class MarkerManager {\n  constructor(rootObject, onChangeCb) {\n    this.objectMap = {};\n    this.object = rootObject;\n    this.namespaces = {};\n    this.onChangeCb = onChangeCb;\n  }\n\n  getMarkerOrCreate(marker) {\n    const id = MarkerManager.getId(marker);\n    if (!this.objectMap[id]) {\n      const object = getNewPrimitive(marker);\n      this.objectMap[id] = object;\n      this.object.add(object);\n    }\n\n    this.objectMap[id].visible = this.namespaces[marker.ns];\n    return this.objectMap[id];\n  }\n\n  extractNameSpace(str) {\n    const tokens = str.split('-');\n    return tokens[0];\n  }\n\n  setQueueSize(queueSize, context) {\n    context.unsubscribe();\n\n    context.queueSize = queueSize;\n\n    context.topic = new ROSLIB.Topic({\n      ros: context.ros,\n      name: context.topicName,\n      messageType: context.messageType,\n      queue_size: queueSize,\n    });\n\n    context.subscribe();\n  }\n\n  updateOptions(options, context) {\n    const { queueSize, namespaces } = options;\n    const { queueSize: currentQueueSize } = context;\n\n    if (currentQueueSize !== queueSize) {\n      this.setQueueSize(queueSize, context);\n    }\n\n    this.namespaces = namespaces;\n\n    for (const key of this.objectMap) {\n      const namespace = this.extractNameSpace(key);\n      this.objectMap[key].visible = this.namespaces[namespace];\n    }\n  }\n\n  onChange() {\n    this.onChangeCb();\n  }\n\n  updateMarker(marker) {\n    const {\n      pose: { position, orientation },\n      scale,\n      color,\n      colors,\n      points,\n    } = marker;\n    const markerObject = this.getMarkerOrCreate(marker);\n\n    if (markerObject.updatePoints) {\n      markerObject.updatePoints(points, colors, marker);\n    }\n\n    markerObject.setTransform({ translation: position, rotation: orientation });\n\n    // To avoid settings these properties for list types: LINE, TRIANGLE, CUBELIST etc\n    if (markerObject.setScale && !markerObject.updatePoints) {\n      markerObject.setScale({ x: scale.x, y: scale.y, z: scale.z });\n    }\n    if (markerObject.setColor && colors.length <= 0) {\n      markerObject.setColor(color);\n    }\n\n    const { ns } = marker;\n    if (!(ns in this.namespaces)) {\n      this.namespaces[ns] = true;\n      this.onChange();\n    }\n  }\n\n  removeObject(id) {\n    const obj = this.objectMap[id];\n    obj.parent.remove(obj);\n    delete this.objectMap[id];\n  }\n\n  reset() {\n    this.namespaces = {};\n    this.onChange();\n\n    Object.keys(this.objectMap).forEach(id => {\n      this.removeObject(id);\n    });\n  }\n\n  static getId({ ns, id }) {\n    return `${ns}-${id}`;\n  }\n}\n","import Core from '../core';\nimport {\n  DEFAULT_OPTIONS_MARKERARRAY,\n  MESSAGE_TYPE_MARKERARRAY,\n} from '../utils/constants';\nimport Group from '../primitives/Group';\nimport MarkerManager from '../utils/markerManager';\n\nclass MarkerArray extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_MARKERARRAY) {\n    super(ros, topicName, MESSAGE_TYPE_MARKERARRAY, options);\n\n    this.object = new Group();\n    this.onChange = this.onChange.bind(this);\n\n    const { queueSize } = options;\n    this.markerManager = new MarkerManager(this.object, this.onChange);\n    this.queueSize = queueSize;\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_MARKERARRAY,\n      ...options,\n    });\n  }\n\n  updateOptions(options) {\n    super.updateOptions(options);\n    this.markerManager.updateOptions(this.options, this);\n  }\n\n  onChange() {\n    if (this.callback) {\n      this.callback();\n    }\n  }\n\n  onNamespaceChange(callback) {\n    this.callback = callback;\n  }\n\n  update(message) {\n    super.update(message);\n    if (message.markers.length > 0) {\n      message.markers.forEach(marker => {\n        this.markerManager.updateMarker(marker);\n      });\n    }\n  }\n\n  reset() {\n    this.markerManager.reset();\n  }\n}\n\nexport default MarkerArray;\n","import * as THREE from 'three';\nimport { LASERSCAN_STYLES } from './constants';\n\nclass Points {\n  constructor(options = {}) {\n    this.max_pts = options.max_pts || 10000;\n    this.rootObject = options.rootObject || new THREE.Object3D();\n  }\n\n  setup(type, size, alpha) {\n    this.rootObject.children.forEach(child => {\n      this.rootObject.remove(child);\n    });\n\n    this.positions = new THREE.BufferAttribute(\n      new Float32Array(this.max_pts * 3),\n      3,\n      false,\n    );\n    this.colors = new THREE.BufferAttribute(\n      new Float32Array(this.max_pts * 3),\n      3,\n      false,\n    );\n\n    let options = {};\n\n    if (type === LASERSCAN_STYLES.POINTS) {\n      const sprite = new THREE.TextureLoader().load(\n        'https://raw.githubusercontent.com/mrdoob/three.js/master/examples/textures/sprites/circle.png',\n      );\n\n      options = {\n        map: sprite,\n        alphaTest: 0.5,\n      };\n    }\n\n    this.geomtry = new THREE.BufferGeometry();\n    this.geomtry.addAttribute('position', this.positions.setDynamic(true));\n    this.geomtry.addAttribute('color', this.colors.setDynamic(true));\n\n    this.material = new THREE.PointsMaterial({\n      color: 0x888888,\n      size,\n      ...options,\n    });\n    this.material.vertexColors = THREE.VertexColors;\n    this.material.transparent = true;\n    this.material.opacity = alpha;\n\n    this.object = new THREE.Points(this.geomtry, this.material);\n    this.rootObject.add(this.object);\n  }\n\n  update(data) {\n    this.geomtry.setDrawRange(0, data);\n    this.positions.needsUpdate = true;\n    this.colors.needsUpdate = true;\n    this.positions.updateRange.count = data * this.positions.itemSize;\n    this.colors.updateRange.count = data * this.colors.itemSize;\n  }\n\n  setAlpha(alpha) {\n    this.material.opacity = alpha;\n  }\n\n  setSize(size) {\n    this.material.size = size;\n  }\n}\n\nexport default Points;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport {\n  DEFAULT_OPTIONS_LASERSCAN,\n  LASERSCAN_STYLES,\n  MESSAGE_TYPE_LASERSCAN,\n  COLOR_TRANSFORMERS,\n  INTENSITY_CHANNEL_OPTIONS,\n  AXES,\n} from '../utils/constants';\nimport Points from '../utils/points';\nimport Group from '../primitives/Group';\nimport SphereList from '../primitives/SphereList';\nimport CubeList from '../primitives/CubeList';\n\nclass LaserScan extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_LASERSCAN) {\n    super(ros, topicName, MESSAGE_TYPE_LASERSCAN, options);\n\n    this.points = new Points(LASERSCAN_STYLES.POINTS);\n    this.sphereList = new SphereList();\n    this.cubeList = new CubeList();\n\n    this.object = new Group();\n    this.object.add(this.points.rootObject);\n    this.object.add(this.sphereList);\n    this.object.add(this.cubeList);\n    this.prevMessage = null;\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_LASERSCAN,\n      ...options,\n    });\n  }\n\n  getNormalizedIntensity(data) {\n    const { minIntensity, maxIntensity } = this.options;\n\n    return (data - minIntensity) / (maxIntensity - minIntensity);\n  }\n\n  applyIntensityTransform(intensity, position) {\n    const { channelName, minColor, maxColor } = this.options;\n    const { x, y, z } = position;\n\n    let normI;\n\n    switch (channelName) {\n      case INTENSITY_CHANNEL_OPTIONS.INTENSITY:\n        normI = this.getNormalizedIntensity(intensity);\n        break;\n      case INTENSITY_CHANNEL_OPTIONS.X:\n        normI = this.getNormalizedIntensity(x);\n        break;\n      case INTENSITY_CHANNEL_OPTIONS.Y:\n        normI = this.getNormalizedIntensity(y);\n        break;\n      case INTENSITY_CHANNEL_OPTIONS.Z:\n        normI = this.getNormalizedIntensity(z);\n        break;\n      default:\n        break;\n    }\n\n    const minColorHex = new THREE.Color(minColor);\n    const maxColorHex = new THREE.Color(maxColor);\n\n    const finalColor =\n      normI * maxColorHex.getHex() + (1 - normI) * minColorHex.getHex();\n    return new THREE.Color(finalColor);\n  }\n\n  getNormalizedAxisValue(data) {\n    const { minAxisValue, maxAxisValue } = this.options;\n\n    return (data - minAxisValue) / (maxAxisValue - minAxisValue);\n  }\n\n  applyAxisColorTransform(intensity, position) {\n    const { axis, minAxisValue, maxAxisValue } = this.options;\n    const { x, y, z } = position;\n\n    let normI;\n\n    switch (axis) {\n      case AXES.X:\n        normI = this.getNormalizedAxisValue(x);\n        break;\n      case AXES.Y:\n        normI = this.getNormalizedAxisValue(y);\n        break;\n      case AXES.Z:\n        normI = this.getNormalizedAxisValue(z);\n        break;\n      default:\n        break;\n    }\n\n    const finalColor = normI * maxAxisValue + (1 - normI) * minAxisValue;\n    return new THREE.Color(finalColor);\n  }\n\n  colorTransformer(intensity, position) {\n    const { colorTransformer, flatColor } = this.options;\n\n    switch (colorTransformer) {\n      case COLOR_TRANSFORMERS.INTENSITY:\n        return this.applyIntensityTransform(intensity, position);\n      case COLOR_TRANSFORMERS.AXIS_COLOR:\n        return this.applyAxisColorTransform(intensity, position);\n      case COLOR_TRANSFORMERS.FLAT_COLOR:\n        return new THREE.Color(flatColor);\n      default:\n        return null;\n    }\n  }\n\n  setupPoints({ j, position, color }) {\n    this.points.colors.array[j] = color.r;\n    this.points.positions.array[j++] = position.x;\n    this.points.colors.array[j] = color.g;\n    this.points.positions.array[j++] = position.y;\n    this.points.colors.array[j] = color.b;\n    this.points.positions.array[j++] = position.z;\n  }\n\n  hideAllObjects() {\n    this.points.rootObject.visible = false;\n    this.sphereList.visible = false;\n    this.cubeList.visible = false;\n  }\n\n  setStyleDimensions(message) {\n    if (!message) {\n      return;\n    }\n    const { style, alpha } = this.options;\n    const { size } = this.options;\n    const { ranges, intensities } = message;\n    const n = ranges.length;\n    const positions = [];\n    const colors = [];\n\n    if (size < 0.001 || !size) {\n      return;\n    }\n\n    this.hideAllObjects();\n    this.points.setup(style, size, alpha);\n\n    let j = 0;\n    for (let i = 0; i < n; i++) {\n      const range = message.ranges[i];\n\n      if (range >= message.range_min && range <= message.range_max) {\n        const angle = message.angle_min + i * message.angle_increment;\n        const position = {\n          x: range * Math.cos(angle),\n          y: range * Math.sin(angle),\n          z: 0,\n        };\n        const color = this.colorTransformer(intensities[i], position);\n\n        switch (style) {\n          case LASERSCAN_STYLES.POINTS:\n          case LASERSCAN_STYLES.SQUARES:\n          case LASERSCAN_STYLES.FLAT_SQUARES: {\n            this.setupPoints({ j, position, color });\n            j += 3;\n            break;\n          }\n          default:\n            positions.push(position);\n            colors.push(color);\n            break;\n        }\n      }\n    }\n\n    const options = { scale: { x: size, y: size, z: size } };\n\n    switch (style) {\n      case LASERSCAN_STYLES.SPHERES: {\n        this.sphereList.visible = true;\n        this.sphereList.updatePoints(positions, colors, options);\n        break;\n      }\n      case LASERSCAN_STYLES.BOXES: {\n        this.cubeList.visible = true;\n        this.cubeList.updatePoints(positions, colors, options);\n        break;\n      }\n      default:\n        this.points.rootObject.visible = true;\n        this.points.update(j / 3);\n        break;\n    }\n  }\n\n  updateOptions(options) {\n    super.updateOptions(options);\n    this.setStyleDimensions(this.prevMessage);\n  }\n\n  update(message) {\n    super.update(message);\n    this.setStyleDimensions(message);\n    this.prevMessage = message;\n  }\n}\n\nexport default LaserScan;\n","export const COLOR_TYPES = {\n  OCCUPIED: 100,\n  UNOCCUPIED: 0,\n  UNKNOWN: -1,\n  OTHER: 127,\n};\n\nexport const populateImageDataFromNavMsg = (\n  imageData,\n  width,\n  height,\n  dataSource,\n) => {\n  for (let row = 0; row < height; row++) {\n    for (let col = 0; col < width; col++) {\n      const mapI = col + (height - row - 1) * width;\n      const data = dataSource[mapI];\n      const val = new DataView(Uint8Array.from([data]).buffer).getUint8(0);\n      let i = (col + row * width) * 4;\n\n      if (val >= 0 && val <= 100) {\n        const v = 255 - (255 * val) / 100;\n        imageData.data[i] = v; // red\n        imageData.data[++i] = v; // green\n        imageData.data[++i] = v; // blue\n        imageData.data[++i] = 255; // alpha\n      } else if (val >= 101 && val <= 127) {\n        // illegal positive values in green\n        imageData.data[i] = 0; // red\n        imageData.data[++i] = 255; // green\n        imageData.data[++i] = 0; // blue\n        imageData.data[++i] = 255; // alpha\n      } else if (val >= 128 && val <= 254) {\n        // illegal negative (char) values in shades of red/yellow\n        imageData.data[i] = 255; // red\n        imageData.data[++i] = (255 * (val - 128)) / (254 - 128); // green\n        imageData.data[++i] = 0; // blue\n        imageData.data[++i] = 255; // alpha\n      } else {\n        // legal -1 value is tasteful blueish greenish grayish color\n        imageData.data[i] = 0x70; // red\n        imageData.data[++i] = 0x89; // green\n        imageData.data[++i] = 0x86; // blue\n        imageData.data[++i] = 255; // alpha\n      }\n    }\n  }\n};\n\nexport const populateRawImageDataFromNavMsg = (\n  imageData,\n  width,\n  height,\n  dataSource,\n) => {\n  for (let row = 0; row < height; row++) {\n    for (let col = 0; col < width; col++) {\n      const mapI = col + (height - row - 1) * width;\n      const data = dataSource[mapI];\n\n      let i = (col + row * width) * 4;\n\n      const Uint8DV = new DataView(Uint8Array.from([data]).buffer);\n      const val = Uint8DV.getUint8(0);\n\n      imageData.data[i] = val;\n      imageData.data[++i] = val;\n      imageData.data[++i] = val;\n      imageData.data[++i] = 255;\n    }\n  }\n};\n\nexport const populateConstImageDataFromNavMsg = (\n  imageData,\n  width,\n  height,\n  dataSource,\n) => {\n  for (let row = 0; row < height; row++) {\n    for (let col = 0; col < width; col++) {\n      const mapI = col + (height - row - 1) * width;\n      const data = dataSource[mapI];\n      const val = new DataView(Uint8Array.from([data]).buffer).getUint8(0);\n\n      let i = (col + row * width) * 4;\n\n      if (val === 0) {\n        imageData.data[i] = 0;\n        imageData.data[++i] = 0;\n        imageData.data[++i] = 0;\n        imageData.data[++i] = 0; // alpha\n      } else if (val >= 1 && val <= 98) {\n        // Blue to red spectrum for most normal cost values\n        const v = (255 * val) / 100;\n        imageData.data[i] = v; // red\n        imageData.data[++i] = 0; // green\n        imageData.data[++i] = 255 - v; // blue\n        imageData.data[++i] = 255; // alpha\n      } else if (val === 99) {\n        // inscribed obstacle values (99) in cyan\n        imageData.data[i] = 0; // red\n        imageData.data[++i] = 255; // green\n        imageData.data[++i] = 255; // blue\n        imageData.data[++i] = 255; // alpha\n      } else if (val === 100) {\n        // lethal obstacle values (100) in purple\n        imageData.data[i] = 255; // red\n        imageData.data[++i] = 0; // green\n        imageData.data[++i] = 255; // blue\n        imageData.data[++i] = 255; // alpha\n      } else if (val > 100 && val <= 127) {\n        // illegal positive values in green\n        imageData.data[i] = 0; // red\n        imageData.data[++i] = 255; // green\n        imageData.data[++i] = 0; // blue\n        imageData.data[++i] = 255; // alpha\n      } else if (val >= 128 && val <= 254) {\n        // illegal negative (char) values in shades of red/yellow\n        imageData.data[i] = 255; // red\n        imageData.data[++i] = (255 * (val - 128)) / (254 - 128); // green\n        imageData.data[++i] = 0; // blue\n        imageData.data[++i] = 255; // alpha\n      } else {\n        // legal -1 value is tasteful blueish greenish grayish color\n        imageData.data[i] = 0x70; // red\n        imageData.data[++i] = 0x89; // green\n        imageData.data[++i] = 0x86; // blue\n        imageData.data[++i] = 255; // alpha\n      }\n    }\n  }\n};\n\nexport const imageDataToCanvas = imageData => {\n  const canvas = document.createElement('canvas');\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n  const context = canvas.getContext('2d');\n  context.putImageData(imageData, 0, 0);\n  return canvas;\n};\n","import * as THREE from 'three';\n\nimport Mesh from './Mesh';\n\nclass Plane extends Mesh {\n  constructor() {\n    super();\n    this.geometry = new THREE.PlaneGeometry();\n    this.material = new THREE.MeshBasicMaterial();\n  }\n}\n\nexport default Plane;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport {\n  DEFAULT_OPTIONS_MAP,\n  MAP_COLOR_SCHEMES,\n  MESSAGE_TYPE_OCCUPANCYGRID,\n} from '../utils/constants';\nimport {\n  imageDataToCanvas,\n  populateImageDataFromNavMsg,\n  populateRawImageDataFromNavMsg,\n  populateConstImageDataFromNavMsg,\n} from '../utils/processing';\nimport Plane from '../primitives/Plane';\n\nclass Map extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_MAP) {\n    super(ros, topicName, MESSAGE_TYPE_OCCUPANCYGRID, options);\n    this.object = new Plane();\n    this.object.material.transparent = true;\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_MAP,\n      ...options,\n    });\n  }\n\n  onMessage(callback) {\n    this.callback = callback;\n  }\n\n  updateOptions(options) {\n    super.updateOptions(options);\n    const { alpha, drawBehind } = this.options;\n\n    this.object.material.opacity = alpha;\n\n    if (drawBehind) {\n      this.object.material.side = THREE.DoubleSide;\n    } else {\n      this.object.material.side = THREE.FrontSide;\n    }\n    this.object.material.needsUpdate = true;\n    if (this.prevMessage) {\n      this.setCanvasData(this.prevMessage);\n    }\n  }\n\n  updateCanvasDimensions(message) {\n    const {\n      info: { height, width, resolution, origin },\n    } = message;\n\n    this.object.scale.set(width * resolution, -1 * height * resolution, 1);\n    const translatedX = (width * resolution) / 2 + origin.position.x;\n    const translatedY = (height * resolution) / 2 + origin.position.y;\n    this.object.position.set(translatedX, translatedY, 0);\n  }\n\n  setCanvasData(message) {\n    const { colorScheme } = this.options;\n    const {\n      data,\n      info: { height, width },\n    } = message;\n\n    const imageData = new ImageData(width, height);\n    let bitmapCanvas = null;\n\n    switch (colorScheme) {\n      case MAP_COLOR_SCHEMES.MAP:\n        populateImageDataFromNavMsg(imageData, width, height, data);\n        bitmapCanvas = imageDataToCanvas(imageData);\n        break;\n      case MAP_COLOR_SCHEMES.CONST_MAP:\n        populateConstImageDataFromNavMsg(imageData, width, height, data);\n        bitmapCanvas = imageDataToCanvas(imageData);\n        break;\n      case MAP_COLOR_SCHEMES.RAW:\n        populateRawImageDataFromNavMsg(imageData, width, height, data);\n        bitmapCanvas = imageDataToCanvas(imageData);\n        break;\n      default:\n        break;\n    }\n\n    this.object.material.map = new THREE.CanvasTexture(bitmapCanvas);\n    this.object.material.map.minFilter = THREE.NearestFilter;\n    this.object.material.map.magFilter = THREE.NearestFilter;\n    this.object.material.needsUpdate = true;\n\n    this.updateCanvasDimensions(message);\n  }\n\n  update(message) {\n    super.update(message);\n    if (this.callback) {\n      this.callback(message);\n    }\n\n    this.setCanvasData(message);\n    this.prevMessage = message;\n  }\n}\n\nexport default Map;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport {\n  DEFAULT_OPTIONS_ODOMETRY,\n  MESSAGE_TYPE_ODOMETRY,\n  ODOMETRY_OBJECT_TYPES,\n} from '../utils/constants';\nimport Arrow from '../primitives/Arrow';\nimport Group from '../primitives/Group';\nimport * as TransformUtils from '../utils/transform';\nimport Axes from '../primitives/Axes';\nimport {\n  checkToleranceThresholdExceed,\n  setObjectDimension,\n} from '../utils/helpers';\n\nclass Odometry extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_ODOMETRY) {\n    super(ros, topicName, MESSAGE_TYPE_ODOMETRY);\n\n    this.object = null;\n    this.objectPool = [];\n    this.keepSize = 100;\n    this.currentObject = -1;\n    this.setVizType(options.controlledObject);\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_ODOMETRY,\n      ...options,\n    });\n  }\n\n  setVizType(controlledObject) {\n    if (controlledObject) {\n      this.object = controlledObject;\n    } else {\n      this.object = new Group();\n    }\n  }\n\n  setKeepSize(size) {\n    let newKeepList = [];\n\n    if (size === 0) {\n      this.keepSize = 0;\n      return;\n    }\n\n    if (size < this.keepSize && size < this.objectPool.length) {\n      const removeCount = this.objectPool.length - size;\n      for (let i = 0; i < removeCount; i++) {\n        this.object.remove(this.objectPool[i]);\n      }\n\n      const slicedList = this.objectPool.slice(\n        this.objectPool.length - size,\n        this.objectPool.length,\n      );\n      newKeepList = [...slicedList];\n    } else {\n      newKeepList = [...this.objectPool];\n    }\n\n    this.objectPool = newKeepList;\n    this.keepSize = size;\n    this.currentObject = this.objectPool.length - 1;\n  }\n\n  removeAllObjects() {\n    this.objectPool.forEach((obj, index) => {\n      obj.parent.remove(obj);\n      delete this.objectPool[index];\n    });\n    this.objectPool = [];\n  }\n\n  checkToleranceThresholdExceed(newPose) {\n    if (this.objectPool.length === 0) {\n      return true;\n    }\n\n    const oldPose = {\n      position: this.objectPool[this.currentObject].position,\n      quaternion: this.objectPool[this.currentObject].quaternion,\n    };\n\n    return checkToleranceThresholdExceed(oldPose, newPose, this.options);\n  }\n\n  getObject() {\n    const { type } = this.options;\n    switch (type) {\n      case ODOMETRY_OBJECT_TYPES.arrow:\n        return new Arrow();\n      case ODOMETRY_OBJECT_TYPES.axes:\n        return new Axes();\n    }\n\n    return new THREE.Object3D();\n  }\n\n  changeObjectPoolType() {\n    const tempObjectPool = [];\n\n    // remove prev type objects and push the new ones in place of them.\n    this.objectPool.forEach((object, index) => {\n      const { position, quaternion } = object;\n      object.parent.remove(object);\n      delete this.objectPool[index];\n\n      const newObj = this.getObject();\n      newObj.position.set(position.x, position.y, position.z);\n      newObj.quaternion.set(\n        quaternion.x,\n        quaternion.y,\n        quaternion.z,\n        quaternion.w,\n      );\n      tempObjectPool.push(newObj);\n      this.object.add(newObj);\n      setObjectDimension(newObj, this.options);\n    });\n\n    this.objectPool = tempObjectPool;\n  }\n\n  updateOptions(options) {\n    const { type: currentType } = this.options;\n    super.updateOptions(options);\n    const { type, keep } = this.options;\n\n    if (type !== currentType) {\n      this.changeObjectPoolType();\n    }\n\n    this.objectPool.forEach(object => {\n      setObjectDimension(object, this.options);\n    });\n\n    this.setKeepSize(keep);\n  }\n\n  update(message) {\n    super.update(message);\n    if (!this.keepSize) {\n      this.removeAllObjects();\n      return;\n    }\n\n    const {\n      pose: {\n        pose: { position, orientation },\n      },\n    } = message;\n    const transform = {\n      translation: position,\n      rotation: orientation,\n    };\n\n    const newPose = {\n      position: new THREE.Vector3(position.x, position.y, position.z),\n      quaternion: new THREE.Quaternion(\n        orientation.x,\n        orientation.y,\n        orientation.z,\n        orientation.w,\n      ),\n    };\n    const toleranceThresholdExceed = this.checkToleranceThresholdExceed(\n      newPose,\n    );\n\n    if (toleranceThresholdExceed) {\n      const newObject = this.getObject();\n      setObjectDimension(newObject, this.options);\n\n      this.objectPool.push(newObject);\n      this.currentObject += 1;\n      this.currentObject = THREE.Math.clamp(\n        this.currentObject,\n        0,\n        this.keepSize - 1,\n      );\n      this.object.add(newObject);\n      TransformUtils.setTransform(newObject, transform);\n\n      // remove excess object from object pool wrt to keepsize\n      if (this.objectPool.length > this.keepSize) {\n        const objToRemove = this.objectPool[0];\n        this.object.remove(objToRemove);\n        delete this.objectPool[0];\n\n        const newObjectPool = this.objectPool.slice(1);\n        this.objectPool = [...newObjectPool];\n      }\n    }\n  }\n}\n\nexport default Odometry;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport {\n  DEFAULT_OPTIONS_POSEARRAY,\n  MESSAGE_TYPE_POSEARRAY,\n} from '../utils/constants';\nimport Pose from './Pose';\nimport * as TransformUtils from '../utils/transform';\nimport { setObjectDimension } from '../utils/helpers';\n\nclass PoseArray extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_POSEARRAY) {\n    super(ros, topicName, MESSAGE_TYPE_POSEARRAY, options);\n    this.object = new THREE.Group();\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_POSEARRAY,\n      ...options,\n    });\n  }\n\n  update(message) {\n    super.update(message);\n    this.object.children.forEach((obj, index) => {\n      obj.parent.remove(obj);\n    });\n    this.object.children = [];\n\n    for (let i = 0; i < message.poses.length; i++) {\n      this.object.add(Pose.getNewPrimitive(this.options));\n    }\n\n    for (let i = 0; i < message.poses.length; i++) {\n      TransformUtils.setTransform(this.object.children[i], {\n        translation: message.poses[i].position,\n        rotation: message.poses[i].orientation,\n      });\n      setObjectDimension(this.object.children[i], this.options);\n    }\n  }\n}\n\nexport default PoseArray;\n","import * as THREE from 'three';\n\nimport Core from '../core';\nimport { DEFAULT_OPTIONS_PATH, MESSAGE_TYPE_PATH } from '../utils/constants';\nimport Group from '../primitives/Group';\nimport Line from '../primitives/Line';\n\nclass Path extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_PATH) {\n    super(ros, topicName, MESSAGE_TYPE_PATH, options);\n    this.object = new Group();\n    this.line = new Line(null, true);\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_PATH,\n      ...options,\n    });\n  }\n\n  updateOptions(options) {\n    super.updateOptions(options);\n    const { color, alpha } = this.options;\n    this.line.setColor(new THREE.Color(color));\n    this.line.setAlpha(alpha);\n  }\n\n  update(message) {\n    super.update(message);\n    const { poses } = message;\n    const points = (poses || []).map(poseData => poseData.pose.position);\n\n    this.line.updatePoints(points);\n    this.object.add(this.line);\n  }\n}\n\nexport default Path;\n","import Core from '../core';\nimport { DEFAULT_OPTIONS_IMAGE, MESSAGE_TYPE_IMAGE } from '../utils/constants';\n\nclass Image extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_IMAGE) {\n    super(ros, topicName, MESSAGE_TYPE_IMAGE, options);\n    this.object = document.createElement('canvas');\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_IMAGE,\n      ...options,\n    });\n  }\n\n  applyImageData(message) {\n    const {\n      data,\n      step,\n      width,\n      height,\n      is_bigendian: isBigEndian,\n      encoding,\n    } = message;\n\n    const ctx = this.object.getContext('2d');\n    const imgData = ctx.createImageData(width, height);\n\n    const decodedData = atob(data);\n    const newData = [];\n    decodedData.split('').forEach((_, index) => {\n      newData.push(decodedData.charCodeAt(index));\n    });\n\n    const encodeToUInt8 = Uint8Array.from(newData);\n    const encodedDataView = new DataView(encodeToUInt8.buffer);\n\n    switch (encoding) {\n      case 'mono8': {\n        let j = 0;\n        for (let i = 0; i < step * height; i++) {\n          imgData.data[j++] = encodedDataView.getUint8(i, !isBigEndian);\n          imgData.data[j++] = encodedDataView.getUint8(i, !isBigEndian);\n          imgData.data[j++] = encodedDataView.getUint8(i, !isBigEndian);\n          imgData.data[j++] = 255;\n        }\n        break;\n      }\n      case 'bgr8': {\n        const offset = 3;\n\n        let j = 0;\n        for (let i = 0; i < step * height; i += offset) {\n          imgData.data[j++] = encodedDataView.getUint8(i + 2, !isBigEndian);\n          imgData.data[j++] = encodedDataView.getUint8(i + 0, !isBigEndian);\n          imgData.data[j++] = encodedDataView.getUint8(i + 1, !isBigEndian);\n          imgData.data[j++] = 255;\n        }\n        break;\n      }\n      case 'rgb8': {\n        const offset = 3;\n\n        let j = 0;\n        for (let i = 0; i < step * height; i += offset) {\n          imgData.data[j++] = encodedDataView.getUint8(i + 0, !isBigEndian);\n          imgData.data[j++] = encodedDataView.getUint8(i + 1, !isBigEndian);\n          imgData.data[j++] = encodedDataView.getUint8(i + 2, !isBigEndian);\n          imgData.data[j++] = 255;\n        }\n        break;\n      }\n      default:\n        break;\n    }\n\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  update(message) {\n    const { width, height } = message;\n\n    this.object.width = width;\n    this.object.height = height;\n\n    this.applyImageData(message);\n  }\n}\n\nexport default Image;\n","import Core from '../core';\nimport {\n  DEFAULT_OPTIONS_MARKER,\n  MESSAGE_TYPE_MARKER,\n} from '../utils/constants';\nimport Group from '../primitives/Group';\nimport MarkerManager from '../utils/markerManager';\n\nclass Marker extends Core {\n  constructor(ros, topicName, options = DEFAULT_OPTIONS_MARKER) {\n    super(ros, topicName, MESSAGE_TYPE_MARKER, options);\n\n    this.object = new Group();\n    this.onChange = this.onChange.bind(this);\n\n    const { queueSize } = options;\n    this.markerManager = new MarkerManager(this.object, this.onChange);\n    this.queueSize = queueSize;\n    this.updateOptions({\n      ...DEFAULT_OPTIONS_MARKER,\n      ...options,\n    });\n  }\n\n  updateOptions(options) {\n    super.updateOptions(options);\n    this.markerManager.updateOptions(this.options, this);\n  }\n\n  update(message) {\n    super.update(message);\n    this.markerManager.updateMarker(message);\n  }\n\n  onChange() {\n    if (this.callback) {\n      this.callback();\n    }\n  }\n\n  onNamespaceChange(callback) {\n    this.callback = callback;\n  }\n\n  reset() {\n    this.markerManager.reset();\n  }\n}\n\nexport default Marker;\n","import * as THREE from 'three';\nimport Stats from 'stats-js';\n\nimport { DEFAULT_OPTIONS_SCENE } from '../utils/constants';\n\nclass Scene extends THREE.Scene {\n  constructor(options = {}) {\n    super();\n    this.vizWrapper = new THREE.Group();\n    this.add(this.vizWrapper);\n\n    this.stats = new Stats();\n    this.stats.showPanel(0);\n\n    this.initLights();\n    this.initGrid();\n    this.updateOptions(options);\n  }\n\n  initLights() {\n    [[-1, 0], [1, 0], [0, -1], [0, 1]].forEach(positions => {\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.4);\n      [directionalLight.position.x, directionalLight.position.z] = positions;\n      directionalLight.position.y = 1;\n      this.add(directionalLight);\n    });\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.2);\n    this.add(ambientLight);\n  }\n\n  initGrid() {\n    this.grid = new THREE.GridHelper(0, 0);\n    this.add(this.grid);\n  }\n\n  addObject(object) {\n    this.vizWrapper.add(object);\n  }\n\n  addVisualization({ object }) {\n    if (!this.vizWrapper.getObjectById(object.id)) {\n      this.addObject(object);\n    }\n  }\n\n  getObjectByName(name) {\n    return this.vizWrapper.getObjectByName(name);\n  }\n\n  updateOptions(options) {\n    this.options = {\n      ...DEFAULT_OPTIONS_SCENE,\n      ...options,\n    };\n\n    const {\n      backgroundColor,\n      gridSize,\n      gridDivisions,\n      gridColor,\n      gridCenterlineColor,\n    } = this.options;\n\n    this.grid.copy(\n      new THREE.GridHelper(\n        gridSize,\n        gridDivisions,\n        gridCenterlineColor,\n        gridColor,\n      ),\n    );\n\n    this.background = new THREE.Color(backgroundColor);\n  }\n}\n\nexport default Scene;\n","import {\n  Box3,\n  EventDispatcher,\n  Matrix3,\n  Sphere,\n  Spherical,\n  Vector2,\n  Vector3,\n} from 'three';\n\n/** *\nEdited from THREE.EditorControls\nChange in this.zoom to adjust camera zoom rather than position\nChange in this.pan to consider camera zoom rather than position\nChange in this.rotate to disable spherical.phi\nChange to this.panSpeed and this.zoomSpeed\n** */\n\nconst MapControls2D = function(object, domElement) {\n  domElement = domElement !== undefined ? domElement : document;\n\n  // API\n\n  this.enabled = true;\n  this.center = new Vector3();\n  this.panSpeed = 0.01;\n  this.zoomSpeed = 0.05;\n  this.rotationSpeed = 0.005;\n\n  // internals\n\n  const scope = this;\n  const vector = new Vector3();\n  const delta = new Vector3();\n  const box = new Box3();\n\n  const STATE = { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2 };\n  let state = STATE.NONE;\n\n  const { center } = this;\n  const normalMatrix = new Matrix3();\n  const pointer = new Vector2();\n  const pointerOld = new Vector2();\n  const spherical = new Spherical();\n  const sphere = new Sphere();\n\n  // events\n\n  const changeEvent = { type: 'change' };\n\n  this.focus = function(target) {\n    let distance;\n\n    box.setFromObject(target);\n\n    if (box.isEmpty() === false) {\n      box.getCenter(center);\n      distance = box.getBoundingSphere(sphere).radius;\n    } else {\n      // Focusing on an Group, AmbientLight, etc\n\n      center.setFromMatrixPosition(target.matrixWorld);\n      distance = 0.1;\n    }\n\n    delta.set(0, 0, 1);\n    delta.applyQuaternion(object.quaternion);\n    delta.multiplyScalar(distance * 4);\n\n    object.position.copy(center).add(delta);\n\n    scope.dispatchEvent(changeEvent);\n  };\n\n  this.pan = function(positionDelta) {\n    // var distance = object.position.distanceTo( center );\n\n    const { zoom } = object;\n\n    positionDelta.multiplyScalar(scope.panSpeed / zoom);\n    positionDelta.applyMatrix3(normalMatrix.getNormalMatrix(object.matrix));\n\n    object.position.add(positionDelta);\n    center.add(positionDelta);\n\n    scope.dispatchEvent(changeEvent);\n  };\n\n  this.zoom = function(zoomDelta) {\n    object.zoom -= (zoomDelta.z || 0) * object.zoom * 0.1;\n    object.updateProjectionMatrix();\n\n    scope.dispatchEvent(changeEvent);\n  };\n\n  this.rotate = function(rotationDelta) {\n    vector.copy(object.position).sub(center);\n\n    spherical.setFromVector3(vector);\n\n    spherical.theta += rotationDelta.x * scope.rotationSpeed;\n    // spherical.phi += rotationDelta.y * scope.rotationSpeed;\n\n    spherical.makeSafe();\n\n    vector.setFromSpherical(spherical);\n\n    object.position.copy(center).add(vector);\n\n    object.lookAt(center);\n\n    scope.dispatchEvent(changeEvent);\n  };\n\n  // mouse\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n\n    pointer.set(event.clientX, event.clientY);\n\n    const movementX = pointer.x - pointerOld.x;\n    const movementY = pointer.y - pointerOld.y;\n\n    if (state === STATE.ROTATE) {\n      scope.rotate(delta.set(-movementX, -movementY, 0));\n    } else if (state === STATE.ZOOM) {\n      scope.zoom(delta.set(0, 0, movementY));\n    } else if (state === STATE.PAN) {\n      scope.pan(delta.set(-movementX, movementY, 0));\n    }\n\n    pointerOld.set(event.clientX, event.clientY);\n  }\n\n  function onMouseUp(event) {\n    domElement.removeEventListener('mousemove', onMouseMove, false);\n    domElement.removeEventListener('mouseup', onMouseUp, false);\n    domElement.removeEventListener('mouseout', onMouseUp, false);\n    domElement.removeEventListener('dblclick', onMouseUp, false);\n\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    event.preventDefault();\n\n    // Normalize deltaY due to https://bugzilla.mozilla.org/show_bug.cgi?id=1392460\n    scope.zoom(delta.set(0, 0, event.deltaY > 0 ? 1 : -1));\n  }\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return;\n\n    if (event.button === 0) {\n      state = STATE.ROTATE;\n    } else if (event.button === 1) {\n      state = STATE.ZOOM;\n    } else if (event.button === 2) {\n      state = STATE.PAN;\n    }\n\n    pointerOld.set(event.clientX, event.clientY);\n\n    domElement.addEventListener('mousemove', onMouseMove, false);\n    domElement.addEventListener('mouseup', onMouseUp, false);\n    domElement.addEventListener('mouseout', onMouseUp, false);\n    domElement.addEventListener('dblclick', onMouseUp, false);\n  }\n\n  function contextmenu(event) {\n    event.preventDefault();\n  }\n\n  domElement.addEventListener('contextmenu', contextmenu, false);\n  domElement.addEventListener('mousedown', onMouseDown, false);\n  domElement.addEventListener('wheel', onMouseWheel, false);\n\n  // touch\n\n  const touches = [new Vector3(), new Vector3(), new Vector3()];\n  const prevTouches = [new Vector3(), new Vector3(), new Vector3()];\n\n  let prevDistance = null;\n\n  function touchStart(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.touches.length) {\n      case 1:\n        touches[0]\n          .set(event.touches[0].pageX, event.touches[0].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        touches[1]\n          .set(event.touches[0].pageX, event.touches[0].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        break;\n\n      case 2:\n        touches[0]\n          .set(event.touches[0].pageX, event.touches[0].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        touches[1]\n          .set(event.touches[1].pageX, event.touches[1].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        prevDistance = touches[0].distanceTo(touches[1]);\n        break;\n    }\n\n    prevTouches[0].copy(touches[0]);\n    prevTouches[1].copy(touches[1]);\n  }\n\n  function touchMove(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    function getClosest(touch, allTouches) {\n      let closest = allTouches[0];\n\n      for (const i in allTouches) {\n        if (closest.distanceTo(touch) > allTouches[i].distanceTo(touch))\n          closest = allTouches[i];\n      }\n\n      return closest;\n    }\n\n    switch (event.touches.length) {\n      case 1:\n        touches[0]\n          .set(event.touches[0].pageX, event.touches[0].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        touches[1]\n          .set(event.touches[0].pageX, event.touches[0].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        scope.rotate(\n          touches[0]\n            .sub(getClosest(touches[0], prevTouches))\n            .multiplyScalar(-1),\n        );\n        break;\n\n      case 2:\n        touches[0]\n          .set(event.touches[0].pageX, event.touches[0].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        touches[1]\n          .set(event.touches[1].pageX, event.touches[1].pageY, 0)\n          .divideScalar(window.devicePixelRatio);\n        const distance = touches[0].distanceTo(touches[1]);\n        scope.zoom(delta.set(0, 0, prevDistance - distance));\n        prevDistance = distance;\n\n        const offset0 = touches[0]\n          .clone()\n          .sub(getClosest(touches[0], prevTouches));\n        const offset1 = touches[1]\n          .clone()\n          .sub(getClosest(touches[1], prevTouches));\n        offset0.x = -offset0.x;\n        offset1.x = -offset1.x;\n\n        scope.pan(offset0.add(offset1));\n\n        break;\n    }\n\n    prevTouches[0].copy(touches[0]);\n    prevTouches[1].copy(touches[1]);\n  }\n\n  domElement.addEventListener('touchstart', touchStart, false);\n  domElement.addEventListener('touchmove', touchMove, false);\n\n  this.dispose = function() {\n    domElement.removeEventListener('contextmenu', contextmenu, false);\n    domElement.removeEventListener('mousedown', onMouseDown, false);\n    domElement.removeEventListener('wheel', onMouseWheel, false);\n\n    domElement.removeEventListener('mousemove', onMouseMove, false);\n    domElement.removeEventListener('mouseup', onMouseUp, false);\n    domElement.removeEventListener('mouseout', onMouseUp, false);\n    domElement.removeEventListener('dblclick', onMouseUp, false);\n\n    domElement.removeEventListener('touchstart', touchStart, false);\n    domElement.removeEventListener('touchmove', touchMove, false);\n  };\n};\n\nMapControls2D.prototype = Object.create(EventDispatcher.prototype);\nMapControls2D.prototype.constructor = MapControls2D;\n\nexport { MapControls2D };\n","import * as THREE from 'three';\nimport { MapControls2D } from '../utils/2dControls';\n\nimport Scene from '../core/scene';\nimport { DEFAULT_OPTIONS_SCENE } from '../utils/constants';\n\nclass Viewer2d {\n  constructor(scene, options = {}) {\n    this.options = {\n      ...DEFAULT_OPTIONS_SCENE,\n      ...options,\n    };\n    this.scene = scene || new Scene();\n    this.previousWidth = 0;\n    this.previousHeight = 0;\n\n    this.initCamera();\n    this.animate = this.animate.bind(this);\n    this.onWindowResize = this.onWindowResize.bind(this);\n  }\n\n  animate() {\n    this.scene.stats.begin();\n    this.scene.updateMatrixWorld();\n\n    this.renderer.render(this.scene, this.camera);\n    this.scene.stats.end();\n    requestAnimationFrame(this.animate);\n  }\n\n  initCamera() {\n    this.camera = new THREE.OrthographicCamera(-100, 100, 100, -100, 0.1, 1000);\n    this.camera.zoom = 0.5;\n    this.camera.position.set(0, 10, 0);\n    this.camera.lookAt(new THREE.Vector3());\n\n    this.scene.add(this.camera);\n  }\n\n  setContainer(domNode) {\n    this.container = domNode;\n    this.initRenderer(domNode);\n    this.controls = new MapControls2D(this.camera, this.container);\n    this.controls.enableDamping = true;\n    window.addEventListener('resize', this.onWindowResize);\n    requestAnimationFrame(this.animate);\n    this.onWindowResize();\n  }\n\n  initRenderer() {\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.autoClear = false;\n    renderer.autoUpdateScene = false;\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    this.renderer = renderer;\n    this.container.appendChild(renderer.domElement);\n  }\n\n  updateOptions(options) {\n    this.options = {\n      ...this.options,\n      ...options,\n    };\n    this.scene.updateOptions(this.options);\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize);\n  }\n\n  onWindowResize() {\n    const { camera } = this;\n    const { offsetWidth, offsetHeight } = this.container;\n    if (\n      Math.abs(offsetWidth - this.previousWidth) > 10 ||\n      Math.abs(offsetHeight - this.previousHeight) > 10\n    ) {\n      const [cameraWidth, cameraHeight] = [\n        offsetWidth / 100,\n        offsetHeight / 100,\n      ];\n      camera.left = -cameraWidth / 2;\n      camera.right = cameraWidth / 2;\n      camera.top = cameraHeight / 2;\n      camera.bottom = -cameraHeight / 2;\n      camera.updateProjectionMatrix();\n      this.renderer.setSize(offsetWidth, offsetHeight);\n      this.previousWidth = offsetWidth;\n      this.previousHeight = offsetHeight;\n    }\n  }\n\n  addVisualization(vizObject) {\n    this.scene.addVisualization(vizObject);\n  }\n}\n\nexport default Viewer2d;\n","import * as THREE from 'three';\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer';\nimport { EditorControls } from 'three/examples/jsm/controls/EditorControls';\n\nimport Scene from '../core/scene';\nimport { DEFAULT_OPTIONS_SCENE } from '../utils/constants';\n\nconst ResizeObserver = window.ResizeObserver || Polyfill;\n\nclass Viewer3d {\n  constructor(scene, options = {}) {\n    this.options = {\n      ...DEFAULT_OPTIONS_SCENE,\n      ...options,\n    };\n    this.scene = scene || new Scene(this.options);\n    this.previousWidth = 0;\n    this.previousHeight = 0;\n\n    this.ro = new ResizeObserver(entries => {\n      if (entries.length > 0) {\n        this.onWindowResize();\n      }\n    });\n\n    this.initCamera();\n    this.animate = this.animate.bind(this);\n    this.onWindowResize = this.onWindowResize.bind(this);\n  }\n\n  animate() {\n    this.scene.stats.begin();\n    this.scene.updateMatrixWorld();\n\n    this.renderer.render(this.scene, this.camera);\n    this.scene.stats.end();\n    requestAnimationFrame(this.animate);\n  }\n\n  initCamera() {\n    this.camera = new THREE.PerspectiveCamera(50, 1, 0.01, 1000);\n    this.camera.position.set(0, 5, 10);\n    this.camera.lookAt(new THREE.Vector3());\n\n    this.scene.add(this.camera);\n  }\n\n  setContainer(domNode) {\n    this.container = domNode;\n    this.initRenderer(domNode);\n    this.controls = new EditorControls(this.camera, this.container);\n    this.controls.enableDamping = true;\n    this.ro.observe(this.container);\n    requestAnimationFrame(this.animate);\n    this.onWindowResize();\n  }\n\n  initRenderer() {\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.autoClear = false;\n    renderer.autoUpdateScene = false;\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    this.renderer = renderer;\n    this.container.appendChild(renderer.domElement);\n  }\n\n  updateOptions(options) {\n    this.options = {\n      ...this.options,\n      ...options,\n    };\n    this.scene.updateOptions(this.options);\n  }\n\n  destroy() {\n    // this.container.removeEventListener('resize', this.onWindowResize);\n  }\n\n  onWindowResize() {\n    const { camera } = this;\n    const { offsetWidth, offsetHeight } = this.container;\n    if (\n      Math.abs(offsetWidth - this.previousWidth) > 10 ||\n      Math.abs(offsetHeight - this.previousHeight) > 10\n    ) {\n      camera.aspect = offsetWidth / offsetHeight;\n      camera.updateProjectionMatrix();\n      this.renderer.setSize(offsetWidth, offsetHeight);\n      this.previousWidth = offsetWidth;\n      this.previousHeight = offsetHeight;\n    }\n  }\n\n  addVisualization(vizObject) {\n    this.scene.addVisualization(vizObject);\n  }\n}\n\nexport default Viewer3d;\n","import * as THREE from 'three';\nimport ROSLIB from 'roslib';\n\nimport Viewer3d from './3d';\nimport RobotModel from '../viz/RobotModel';\n\nclass TfViewer extends Viewer3d {\n  constructor(rosInstance, options) {\n    super(null, options);\n    const { onFramesListUpdate } = this.options;\n    this.ros = rosInstance;\n    this.framesList = [];\n    this.selectedFrame = '';\n    this.onFramesListUpdate = onFramesListUpdate || (() => {});\n\n    this.initRosEvents();\n    this.getTFMessages = this.getTFMessages.bind(this);\n    this.setFrameTransform = this.setFrameTransform.bind(this);\n    this.addRobot = this.addRobot.bind(this);\n  }\n\n  initRosEvents() {\n    this.ros.on('connection', () => {\n      this.ros.getTopics(rosTopics => {\n        ['/tf', '/tf_static'].forEach(name => {\n          const topic = new ROSLIB.Topic({\n            ros: this.ros,\n            name,\n            messageType: rosTopics.types[rosTopics.topics.indexOf(name)],\n          });\n          topic.subscribe(this.getTFMessages);\n        });\n      });\n    });\n  }\n\n  getTFMessages({ transforms }) {\n    transforms.forEach(\n      ({\n        header: { frame_id: parentFrameId },\n        child_frame_id: childFrameId,\n        transform: {\n          translation: { x, y, z },\n          rotation: { x: rx, y: ry, z: rz, w: rw },\n        },\n      }) => {\n        const [childObject, parentObject] = [\n          this.getObjectOrCreate(childFrameId),\n          this.getObjectOrCreate(parentFrameId),\n        ];\n\n        parentObject.add(childObject);\n        childObject.position.set(x, y, z);\n        childObject.quaternion.set(rx, ry, rz, rw);\n\n        [parentFrameId, childFrameId].forEach(frame => {\n          if (this.framesList.indexOf(frame) === -1) {\n            this.framesList.push(frame);\n          }\n        });\n      },\n    );\n    this.setFrameTransform();\n  }\n\n  getObjectOrCreate(frameId) {\n    if (this.framesList.indexOf(frameId) === -1) {\n      this.framesList.push(frameId);\n      this.onFramesListUpdate(this.framesList);\n    }\n    const existingFrame = this.scene.getObjectByName(frameId);\n    if (existingFrame) {\n      return existingFrame;\n    }\n\n    const newFrame = new THREE.Group();\n    newFrame.name = frameId;\n    this.scene.addObject(newFrame);\n    return newFrame;\n  }\n\n  updateSelectedFrame(selectedFrame) {\n    this.selectedFrame = selectedFrame;\n    this.setFrameTransform();\n  }\n\n  setFrameTransform() {\n    const {\n      selectedFrame,\n      scene: { vizWrapper },\n    } = this;\n    if (!selectedFrame) {\n      return;\n    }\n    const currentFrameObject = vizWrapper.getObjectByName(selectedFrame);\n\n    if (currentFrameObject) {\n      const tempObject = new THREE.Object3D();\n      tempObject.position.copy(vizWrapper.position);\n      tempObject.rotation.copy(vizWrapper.rotation);\n\n      const objectWorldPosition = currentFrameObject.getWorldPosition(\n        new THREE.Vector3(),\n      );\n      const objectWorldQuaternion = currentFrameObject.getWorldQuaternion(\n        new THREE.Quaternion(),\n      );\n      const wrapperWorldPosition = tempObject.getWorldPosition(\n        new THREE.Vector3(),\n      );\n      const wrapperWorldQuaternion = tempObject.getWorldQuaternion(\n        new THREE.Quaternion(),\n      );\n\n      const relPosition = wrapperWorldPosition.sub(objectWorldPosition);\n      tempObject.position.set(relPosition.x, relPosition.z, -relPosition.y);\n      tempObject.rotation.setFromQuaternion(\n        wrapperWorldQuaternion.premultiply(objectWorldQuaternion.conjugate()),\n      );\n      tempObject.updateMatrixWorld();\n      tempObject.setRotationFromMatrix(\n        new THREE.Matrix4()\n          .makeRotationAxis(new THREE.Vector3(1, 0, 0), -Math.PI / 2)\n          .multiply(tempObject.matrix),\n      );\n\n      vizWrapper.rotation.copy(tempObject.rotation);\n      vizWrapper.position.copy(relPosition);\n    }\n  }\n\n  addVisualization(vizObject) {\n    super.addVisualization(vizObject);\n\n    vizObject.onHeaderChange = newFrameId => {\n      const frameObject = this.getObjectOrCreate(newFrameId);\n      frameObject.add(vizObject.object);\n    };\n  }\n\n  addRobot(robotModel, options) {\n    robotModel.load(object => {\n      RobotModel.onComplete(object);\n      super.addVisualization(robotModel);\n      for (const linkName of object.children[0].links) {\n        const o = object.children[0].links[linkName];\n        const existingObject = this.scene.getObjectByName(o.name);\n        if (existingObject) {\n          o.children.forEach(child => {\n            existingObject.add(child);\n          });\n        }\n      }\n    });\n  }\n\n  setFixedFrame() {}\n}\n\nexport default TfViewer;\n","import Pose from './viz/Pose';\nimport Polygon from './viz/Polygon';\nimport Tf from './viz/Tf';\nimport RobotModel from './viz/RobotModel';\nimport PointCloud from './viz/PointCloud';\nimport MarkerArray from './viz/MarkerArray';\nimport LaserScan from './viz/LaserScan';\nimport Map from './viz/Map';\nimport Odometry from './viz/Odometry';\nimport PoseArray from './viz/PoseArray';\nimport Path from './viz/Path';\nimport Image from './viz/Image';\nimport Marker from './viz/Marker';\n\nimport Scene from './core/scene';\n\nimport Viewer2d from './viewers/2d';\nimport Viewer3d from './viewers/3d';\nimport TfViewer from './viewers/Tf';\n\nexport default {\n  PointCloud,\n  Polygon,\n  Pose,\n  PoseArray,\n  Tf,\n  RobotModel,\n  MarkerArray,\n  LaserScan,\n  Map,\n  Odometry,\n  Path,\n  Image,\n  Marker,\n\n  Scene,\n\n  Viewer2d,\n  Viewer3d,\n  TfViewer,\n};\n"],"names":["THREEMesh","TransformUtils.setTransform","TransformUtils.setScale","TransformUtils.setColor","Math","THREE.CylinderGeometry","THREE.MeshStandardMaterial","THREE.ConeGeometry","THREE.Group","THREE.Line","THREE.Geometry","THREE.Vector3","THREE.VertexColors","THREE.LineBasicMaterial","THREE.Color","THREE.FontLoader","THREE.TextGeometry","THREE.MeshBasicMaterial","THREE.DefaultLoadingManager","THREE.PointsMaterial","THREE.BufferGeometry","THREE.BufferAttribute","THREE.Points","THREE.BoxGeometry","THREE.SphereGeometry","THREE.LineSegments","THREE.FaceColors","THREE.DoubleSide","THREE.Face3","Points","THREE.Object3D","THREE.TextureLoader","THREE.PlaneGeometry","THREE.FrontSide","THREE.CanvasTexture","THREE.NearestFilter","THREE.Quaternion","THREE.Math","THREE.Scene","THREE.DirectionalLight","THREE.AmbientLight","THREE.GridHelper","Vector3","Box3","Matrix3","Vector2","Spherical","Sphere","EventDispatcher","THREE.OrthographicCamera","THREE.WebGLRenderer","Polyfill","THREE.PerspectiveCamera","EditorControls","THREE.Matrix4"],"mappings":";;;;;;;;;;EAEA,MAAM,IAAI,CAAC;EACX,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,GAAG,EAAE,EAAE;EACzD,IAAI,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC;EACvC,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EAC3B,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;EACnB,IAAI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;EAC5B,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACpD,IAAI,IAAI,CAAC,cAAc,GAAG,cAAc,KAAK,MAAM,EAAE,CAAC,CAAC;EACvD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACzC,GAAG;;EAEH,EAAE,IAAI,GAAG;EACT,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;EAChC,GAAG;;EAEH,EAAE,IAAI,GAAG;EACT,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;EAC/B,GAAG;;EAEH,EAAE,OAAO,GAAG;EACZ,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;EACvB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC3C,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EACvB,GAAG;;EAEH,EAAE,KAAK,GAAG,EAAE;;EAEZ,EAAE,SAAS,GAAG;EACd,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;EAC9B,MAAM,OAAO;EACb,KAAK;EACL,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI;EACrC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC/B,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,WAAW,GAAG;EAChB,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;EAC9B,MAAM,OAAO;EACb,KAAK;EACL,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI;EACrC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;EACtB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;EACjE,IAAI,IAAI,MAAM,KAAK,IAAI,CAAC,aAAa,EAAE;EACvC,MAAM,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;EAClC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC9C,KAAK;EACL,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,IAAI,CAAC,OAAO,GAAG;EACnB,MAAM,GAAG,IAAI,CAAC,OAAO;EACrB,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC;EACN,GAAG;;EAEH,EAAE,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,aAAa,GAAG,IAAI,EAAE;EACrD,IAAI,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;;EAErD,IAAI,IAAI,aAAa,EAAE;EACvB,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;EACzB,KAAK;;EAEL,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC/B,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;EAChD,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;EACnD,QAAQ,SAAS;EACjB,QAAQ,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;EACnC,MAAM,GAAG;EACT,MAAM,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;EAC5B,QAAQ,IAAI,MAAM,CAAC,KAAK,CAAC;EACzB,UAAU,GAAG,EAAE,IAAI,CAAC,GAAG;EACvB,UAAU,IAAI;EACd,UAAU,WAAW;EACrB,UAAU,aAAa,EAAE,YAAY,IAAI,CAAC;EAC1C,UAAU,UAAU,EAAE,SAAS,IAAI,EAAE;EACrC,SAAS,CAAC;EACV,KAAK,CAAC;;EAEN,IAAI,IAAI,aAAa,EAAE;EACvB,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;EACnB,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;EACvB,KAAK;EACL,GAAG;EACH,CAAC;;EC1FM,MAAM,iBAAiB,GAAG,OAAO,CAAC;AACzC,EAAO,MAAM,gBAAgB,GAAG,MAAM,CAAC;AACvC,EAAO,MAAM,sBAAsB,GAAG,WAAW,CAAC;;AAElD,EAAO,MAAM,qBAAqB,GAAG,MAAM,CAAC;;AAE5C,EAAO,MAAM,wBAAwB,GAAG,SAAS,CAAC;AAClD,EAAO,MAAM,iBAAiB,GAAG,EAAE,CAAC;AACpC,EAAO,MAAM,sBAAsB,GAAG,EAAE,CAAC;AACzC,EAAO,MAAM,kBAAkB,GAAG,SAAS,CAAC;AAC5C,EAAO,MAAM,6BAA6B,GAAG,SAAS,CAAC;AACvD,EAMO,MAAM,2BAA2B,GAAG,8BAA8B,CAAC;AAC1E,EAAO,MAAM,sBAAsB,GAAG,yBAAyB,CAAC;AAChE,EACO,MAAM,wBAAwB,GAAG,2BAA2B,CAAC;AACpE,AAQA;AACA,EAAO,MAAM,0BAA0B,GAAG,wBAAwB,CAAC;AACnE,EAAO,MAAM,qBAAqB,GAAG,mBAAmB,CAAC;AACzD,EAAO,MAAM,iBAAiB,GAAG,eAAe,CAAC;AACjD,EAGO,MAAM,kBAAkB,GAAG,mBAAmB,CAAC;AACtD,EAAO,MAAM,sBAAsB,GAAG,uBAAuB,CAAC;AAC9D,EAEO,MAAM,wBAAwB,GAAG,yBAAyB,CAAC;AAClE,AAIA;AACA,EAAO,MAAM,mBAAmB,GAAG,2BAA2B,CAAC;AAC/D,EAAO,MAAM,wBAAwB,GAAG,gCAAgC,CAAC;AACzE,AAoBA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG;EACnC,EAAE,KAAK,EAAE,CAAC;EACV,EAAE,IAAI,EAAE,CAAC;EACT,EAAE,MAAM,EAAE,CAAC;EACX,EAAE,QAAQ,EAAE,CAAC;EACb,EAAE,UAAU,EAAE,CAAC;EACf,EAAE,SAAS,EAAE,CAAC;EACd,EAAE,SAAS,EAAE,CAAC;EACd,EAAE,WAAW,EAAE,CAAC;EAChB,EAAE,MAAM,EAAE,CAAC;EACX,EAAE,gBAAgB,EAAE,CAAC;EACrB,EAAE,aAAa,EAAE,EAAE;EACnB,EAAE,aAAa,EAAE,EAAE;EACnB,CAAC,CAAC;AACF,AAKA;AACA,EAAO,MAAM,iBAAiB,GAAG;EACjC,EAAE,GAAG,EAAE,KAAK;EACZ,EAAE,SAAS,EAAE,UAAU;EACvB,EAAE,GAAG,EAAE,KAAK;EACZ,CAAC,CAAC;;AAEF,EAAO,MAAM,gBAAgB,GAAG;EAChC,EAAE,OAAO,EAAE,SAAS;EACpB,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,YAAY,EAAE,cAAc;EAC9B,EAAE,OAAO,EAAE,SAAS;EACpB,EAAE,KAAK,EAAE,OAAO;EAChB,CAAC,CAAC;;AAEF,EAAO,MAAM,kBAAkB,GAAG;EAClC,EAAE,SAAS,EAAE,WAAW;EACxB,EAAE,UAAU,EAAE,WAAW;EACzB,EAAE,UAAU,EAAE,WAAW;EACzB,CAAC,CAAC;;AAEF,EAAO,MAAM,IAAI,GAAG;EACpB,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,EAAE,CAAC,EAAE,GAAG;EACR,CAAC,CAAC;;AAEF,EAAO,MAAM,yBAAyB,GAAG;EACzC,EAAE,SAAS,EAAE,WAAW;EACxB,EAAE,GAAG,IAAI;EACT,CAAC,CAAC;;AAEF,EAAO,MAAM,qBAAqB,GAAG;EACrC,EAAE,KAAK,EAAE,iBAAiB;EAC1B,EAAE,IAAI,EAAE,gBAAgB;EACxB,CAAC,CAAC;;AAEF,EAAO,MAAM,iBAAiB,GAAG;EACjC,EAAE,KAAK,EAAE,iBAAiB;EAC1B,EAAE,IAAI,EAAE,gBAAgB;EACxB,EAAE,SAAS,EAAE,sBAAsB;EACnC,CAAC,CAAC;;EAEF;EACA;EACA;AACA,EAAO,MAAM,uBAAuB,GAAG,CAAC,CAAC;AACzC,EAAO,MAAM,uBAAuB,GAAG,CAAC,CAAC;AACzC,EAAO,MAAM,uBAAuB,GAAG,EAAE,CAAC;;AAE1C,EAAO,MAAM,mBAAmB,GAAG,CAAC,CAAC;AACrC,EAAO,MAAM,mBAAmB,GAAG,CAAC,CAAC;;AAErC,EAAO,MAAM,oBAAoB,GAAG,SAAS,CAAC;AAC9C,EAAO,MAAM,oBAAoB,GAAG,SAAS,CAAC;AAC9C,EAAO,MAAM,oBAAoB,GAAG,SAAS,CAAC;AAC9C,EAAO,MAAM,mBAAmB,GAAG,SAAS,CAAC;AAC7C,EAAO,MAAM,kBAAkB,GAAG,SAAS,CAAC;;AAE5C,EAAO,MAAM,qBAAqB,GAAG;EACrC,EAAE,eAAe,EAAE,wBAAwB;EAC3C,EAAE,QAAQ,EAAE,iBAAiB;EAC7B,EAAE,aAAa,EAAE,sBAAsB;EACvC,EAAE,SAAS,EAAE,kBAAkB;EAC/B,EAAE,mBAAmB,EAAE,6BAA6B;EACpD,CAAC,CAAC;;AAEF,EAAO,MAAM,qBAAqB,GAAG;EACrC,EAAE,WAAW,EAAE,CAAC;EAChB,EAAE,WAAW,EAAE,IAAI;EACnB,EAAE,UAAU,EAAE,GAAG;EACjB,EAAE,UAAU,EAAE,GAAG;EACjB,CAAC,CAAC;;AAEF,EAAO,MAAM,oBAAoB,GAAG;EACpC,EAAE,UAAU,EAAE,CAAC;EACf,EAAE,UAAU,EAAE,GAAG;EACjB,CAAC,CAAC;;AAEF,EAAO,MAAM,yBAAyB,GAAG;EACzC,EAAE,WAAW,EAAE,GAAG;EAClB,CAAC,CAAC;;EAEF,MAAM,yBAAyB,GAAG;EAClC,EAAE,WAAW,EAAE,yBAAyB,CAAC,SAAS;EAClD,EAAE,UAAU,EAAE,KAAK;EACnB,EAAE,aAAa,EAAE,KAAK;EACtB,EAAE,QAAQ,EAAE,SAAS;EACrB,EAAE,QAAQ,EAAE,SAAS;EACrB,EAAE,0BAA0B,EAAE,KAAK;EACnC,EAAE,YAAY,EAAE,IAAI;EACpB,EAAE,YAAY,EAAE,GAAG;EACnB,CAAC,CAAC;;EAEF,MAAM,0BAA0B,GAAG;EACnC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACd,EAAE,sBAAsB,EAAE,KAAK;EAC/B,EAAE,aAAa,EAAE,KAAK;EACtB,EAAE,YAAY,EAAE,CAAC;EACjB,EAAE,YAAY,EAAE,CAAC;EACjB,CAAC,CAAC;;AAEF,EAAO,MAAM,qBAAqB,GAAG;EACrC,EAAE,SAAS,EAAE,CAAC;EACd,CAAC,CAAC;;AAEF,EAAO,MAAM,yBAAyB,GAAG;EACzC,EAAE,UAAU,EAAE,KAAK;EACnB,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY;EACtC,EAAE,IAAI,EAAE,IAAI;EACZ,EAAE,KAAK,EAAE,CAAC;EACV,EAAE,SAAS,EAAE,CAAC;EACd,EAAE,SAAS,EAAE,EAAE;EACf,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,SAAS;EAChD,EAAE,SAAS,EAAE,SAAS;EACtB,EAAE,GAAG,yBAAyB;EAC9B,EAAE,GAAG,0BAA0B;EAC/B,CAAC,CAAC;;AAEF,EAAO,MAAM,mBAAmB,GAAG;EACnC,EAAE,KAAK,EAAE,CAAC;EACV,EAAE,WAAW,EAAE,iBAAiB,CAAC,GAAG;EACpC,EAAE,UAAU,EAAE,KAAK;EACnB,CAAC,CAAC;;AAEF,EAAO,MAAM,sBAAsB,GAAG;EACtC,EAAE,SAAS,EAAE,CAAC;EACd,EAAE,UAAU,EAAE,EAAE;EAChB,CAAC,CAAC;;AAEF,EAAO,MAAM,2BAA2B,GAAG;EAC3C,EAAE,SAAS,EAAE,CAAC;EACd,EAAE,UAAU,EAAE,EAAE;EAChB,EAAE,YAAY,EAAE,CAAC;EACjB,CAAC,CAAC;;AAEF,EAAO,MAAM,wBAAwB,GAAG;EACxC,EAAE,IAAI,EAAE,iBAAiB;EACzB,EAAE,KAAK,EAAE,oBAAoB;EAC7B,EAAE,KAAK,EAAE,CAAC;EACV,EAAE,GAAG,qBAAqB;EAC1B,EAAE,GAAG,oBAAoB;EACzB,EAAE,GAAG,yBAAyB;EAC9B,EAAE,iBAAiB,EAAE,GAAG;EACxB,EAAE,cAAc,EAAE,GAAG;EACrB,EAAE,IAAI,EAAE,GAAG;EACX,CAAC,CAAC;;AAEF,EAAO,MAAM,oBAAoB,GAAG;EACpC,EAAE,KAAK,EAAE,SAAS;EAClB,EAAE,KAAK,EAAE,CAAC;EACV,CAAC,CAAC;;AAEF,EAAO,MAAM,0BAA0B,GAAG,EAAE,CAAC;;AAE7C,EAAO,MAAM,uBAAuB,GAAG;EACvC,EAAE,KAAK,EAAE,SAAS;EAClB,EAAE,KAAK,EAAE,CAAC;EACV,CAAC,CAAC;;AAEF,EAAO,MAAM,oBAAoB,GAAG;EACpC,EAAE,KAAK,EAAE,oBAAoB;EAC7B,EAAE,KAAK,EAAE,CAAC;EACV,EAAE,GAAG,qBAAqB;EAC1B,EAAE,GAAG,oBAAoB;EACzB,EAAE,IAAI,EAAE,iBAAiB,CAAC,KAAK;EAC/B,CAAC,CAAC;;AAEF,EAAO,MAAM,yBAAyB,GAAG;EACzC,EAAE,KAAK,EAAE,oBAAoB;EAC7B,EAAE,KAAK,EAAE,CAAC;EACV,EAAE,GAAG,qBAAqB;EAC1B,EAAE,GAAG,oBAAoB;EACzB,EAAE,GAAG,yBAAyB;EAC9B,EAAE,IAAI,EAAE,iBAAiB,CAAC,KAAK;EAC/B,CAAC,CAAC;;AAEF,EAAO,MAAM,0BAA0B,GAAG,EAAE,CAAC;;AAE7C,EAAO,MAAM,kBAAkB,GAAG,EAAE,CAAC;;EC9Q9B,MAAM,YAAY,GAAG;EAC5B,EAAE,MAAM;EACR,EAAE;EACF,IAAI,WAAW,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE;EAC9C,IAAI,QAAQ,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE;EAChE,GAAG;EACH,KAAK;EACL,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACxC,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;EAC5D,CAAC,CAAC;;AAEF,EAAO,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;EACjD,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC;;AAEF,EAAO,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;EACjD,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC;;ECbF,MAAM,IAAI,SAASA,UAAS,CAAC;EAC7B,EAAE,YAAY,CAAC,SAAS,EAAE;EAC1B,IAAIC,YAA2B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACjD,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAIC,QAAuB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EACzC,GAAG;;EAEH,EAAE,QAAQ,CAAC,MAAM,EAAE;EACnB,IAAIC,QAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EAC1C,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAGC,UAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,GAAG;EACH,CAAC;;ECVD,MAAM,QAAQ,SAAS,IAAI,CAAC;EAC5B,EAAE,WAAW;EACb,IAAI,KAAK,GAAG,mBAAmB;EAC/B,IAAI,MAAM,GAAG,uBAAuB;EACpC,IAAI,MAAM,GAAG,uBAAuB;EACpC,IAAI;EACJ,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIC,sBAAsB;EAC9C,MAAM,MAAM;EACZ,MAAM,MAAM;EACZ,MAAM,MAAM;EACZ,MAAM,uBAAuB;EAC7B,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIC,0BAA0B,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;EAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACrC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC9B,GAAG;EACH,CAAC;;EClBD,MAAM,IAAI,SAAS,IAAI,CAAC;EACxB,EAAE,WAAW,CAAC,KAAK,EAAE;EACrB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIC,kBAAkB;EAC1C,MAAM,mBAAmB;EACzB,MAAM,mBAAmB;EACzB,MAAM,uBAAuB;EAC7B,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAID,0BAA0B,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;EAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACrC,GAAG;EACH,CAAC;;EChBD,MAAM,KAAK,SAASE,WAAW,CAAC;EAChC,EAAE,YAAY,CAAC,SAAS,EAAE;EAC1B,IAAIP,YAA2B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACjD,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAIC,QAAuB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EACzC,GAAG;;EAEH,EAAE,QAAQ,CAAC,MAAM,EAAE;EACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;EACnC,MAAMC,QAAuB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;EAC7C,KAAK,CAAC,CAAC;EACP,GAAG;EACH,CAAC;;ECLD,MAAM,KAAK,SAAS,KAAK,CAAC;EAC1B,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;;EAEZ,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC;EAC/C,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;EAEpC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,oBAAoB,CAAC,CAAC;EACvD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;EAExC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;EACvB,MAAM,CAAC,EAAE,mBAAmB;EAC5B,MAAM,CAAC,EAAE,mBAAmB;EAC5B,MAAM,CAAC,EAAE,mBAAmB;EAC5B,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;EAC3B,MAAM,CAAC,EAAE,uBAAuB;EAChC,MAAM,CAAC,EAAE,uBAAuB;EAChC,MAAM,CAAC,EAAE,uBAAuB;EAChC,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACxD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;EAExE,IAAI,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;EAClC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5B,GAAG;;EAEH,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;EAC/B,IAAI,IAAI,IAAI,EAAE;EACd,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAC/B,KAAK;;EAEL,IAAI,IAAI,QAAQ,EAAE;EAClB,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;EACvC,KAAK;EACL,GAAG;;EAEH,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;EACxC,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;EAC5C,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;;EAE5C,IAAI,IAAI,YAAY,EAAE;EACtB,MAAM,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;EACpC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;EACtD,KAAK;;EAEL,IAAI,IAAI,YAAY,EAAE;EACtB,MAAM,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;EACvC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;EACpD,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;EACrE,KAAK;EACL,GAAG;;EAEH,EAAE,kBAAkB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;EACzC,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;EAC5C,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;;EAE5C,IAAI,IAAI,MAAM,EAAE;EAChB,MAAM,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;EACxC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;EACtE,KAAK;;EAEL,IAAI,IAAI,MAAM,EAAE;EAChB,MAAM,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;EACjD,MAAM,IAAI,CAAC,iBAAiB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,KAAK;EACL,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAClC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC9B,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAI,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;EACxB,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EAClC,IAAID,QAAuB,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/C,GAAG;EACH,CAAC;;ECvFD,MAAM,IAAI,SAAS,KAAK,CAAC;EACzB,EAAE,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE;EAC9B,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,oBAAoB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EAChE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,oBAAoB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EAChE,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,oBAAoB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;EAEhE,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,uBAAuB,IAAI,CAAC,CAAC,CAAC;EAC/D,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,MAAM,IAAI,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC;EAChE,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,uBAAuB,IAAI,CAAC,CAAC,CAAC;;EAE/D,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACjC,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;EAEhC,IAAI,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;EACjC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,GAAG;;EAEH,EAAE,SAAS,CAAC,MAAM,EAAE;EACpB,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;EAChC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI;EAC7C,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC9B,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAClC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACnC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAClC,GAAG;;EAEH,EAAE,SAAS,CAAC,MAAM,EAAE;EACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;EACnC,MAAM,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EAC3C,MAAM,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EAC3C,KAAK,CAAC,CAAC;EACP,GAAG;EACH,CAAC;;EC3CD,MAAM,IAAI,SAASO,UAAU,CAAC;EAC9B,EAAE,WAAW,CAAC,KAAK,GAAG,kBAAkB,EAAE,kBAAkB,EAAE;EAC9D,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIC,cAAc,EAAE,CAAC;EACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAIC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5D,IAAI,MAAM,YAAY,GAAG,EAAE,CAAC;;EAE5B,IAAI,IAAI,CAAC,kBAAkB,EAAE;EAC7B,MAAM,YAAY,CAAC,YAAY,GAAGC,kBAAkB,CAAC;EACrD,KAAK;;EAEL,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIC,uBAAuB,CAAC,EAAE,GAAG,YAAY,EAAE,CAAC,CAAC;EACrE,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACrC,GAAG;;EAEH,EAAE,QAAQ,CAAC,MAAM,EAAE;EACnB,IAAIV,QAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EAC1C,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,GAAG,EAAE,EAAE;EACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG;EACvC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAIQ,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjD,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;;EAE5C,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;EACrB,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;EACpC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAIG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;EACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC;EAC1C,GAAG;;EAEH,EAAE,YAAY,CAAC,SAAS,EAAE;EAC1B,IAAIb,YAA2B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACjD,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;EAClC,GAAG;EACH,CAAC;;ECxCD,MAAM,SAAS,SAAS,KAAK,CAAC;EAC9B,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;EACvC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;EAC7C,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;EACxB,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAIU,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACpD,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAIA,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACpD,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAIA,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EAC/C,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;EAE5B,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;EAChD,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;EAClC,MAAM,IAAIA,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,MAAM,IAAIA,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;EAE/B,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAClC,GAAG;;EAEH,EAAE,SAAS,CAAC,MAAM,EAAE;EACpB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EAC3C,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAI,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;EAC9B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjD,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,GAAG;EACH,CAAC;;EC7BM,MAAM,6BAA6B,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,KAAK;EAC5E,EAAE,MAAM,EAAE,iBAAiB,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC;EACxD,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;EAC3C,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC;;EAEvE,EAAE,MAAM,qBAAqB;EAC7B,IAAI,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,iBAAiB,CAAC;EACzD,EAAE,MAAM,kBAAkB,GAAG,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,cAAc,CAAC;;EAEhF,EAAE,OAAO,qBAAqB,IAAI,kBAAkB,CAAC;EACrD,CAAC,CAAC;;AAEF,EAAO,MAAM,kBAAkB,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK;EACvD,EAAE,QAAQ,OAAO,CAAC,IAAI;EACtB,IAAI,KAAK,iBAAiB,EAAE;EAC5B,MAAM,MAAM;EACZ,QAAQ,KAAK;EACb,QAAQ,KAAK;EACb,QAAQ,WAAW;EACnB,QAAQ,WAAW;EACnB,QAAQ,UAAU;EAClB,QAAQ,UAAU;EAClB,OAAO,GAAG,OAAO,CAAC;;EAElB,MAAM,MAAM,CAAC,iBAAiB,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;EAC3E,MAAM,MAAM,CAAC,kBAAkB,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;EAC9E,MAAM,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC7B,MAAM,MAAM,CAAC,QAAQ,CAAC;EACtB,QAAQ,IAAI,EAAE,IAAIG,WAAW,CAAC,KAAK,CAAC;EACpC,QAAQ,QAAQ,EAAE,IAAIA,WAAW,CAAC,KAAK,CAAC;EACxC,OAAO,CAAC,CAAC;EACT,MAAM,MAAM;EACZ,KAAK;EACL,IAAI,KAAK,gBAAgB,EAAE;EAC3B,MAAM,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;;EAEjD,MAAM,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;EACnC,MAAM,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;EACnC,MAAM,MAAM;EACZ,KAAK;EACL,IAAI,KAAK,sBAAsB,EAAE;EACjC,MAAM,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;;EAE7C,MAAM,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;EACpC,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAIA,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM;EACZ,KAAK;EACL,GAAG;EACH,CAAC,CAAC;;EC3CF,MAAM,IAAI,SAAS,IAAI,CAAC;EACxB,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,oBAAoB,EAAE;EAC9D,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,wBAAwB,EAAE,OAAO,CAAC,CAAC;EAC7D,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIN,WAAW,EAAE,CAAC;EACpC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;EAC1B,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,oBAAoB;EAC7B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,OAAO,eAAe,CAAC,OAAO,EAAE;EAClC,IAAI,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;EAC7B,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC;;EAEzB,IAAI,QAAQ,IAAI;EAChB,MAAM,KAAK,iBAAiB,CAAC,KAAK;EAClC,QAAQ,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;EAChC,QAAQ,MAAM;EACd,MAAM,KAAK,iBAAiB,CAAC,IAAI;EACjC,QAAQ,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;EAC/B,QAAQ,MAAM;EACd,MAAM,KAAK,iBAAiB,CAAC,SAAS;EACtC,QAAQ,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;EACpC,QAAQ,MAAM;EACd,KAAK;;EAEL,IAAI,OAAO,SAAS,CAAC;EACrB,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;;EAElC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,EAAE;EACxD,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACzC,MAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;EAC5B,KAAK;;EAEL,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;EACzB,MAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC1D,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACtC,KAAK;;EAEL,IAAI,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;EACrD,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,MAAM;EACV,MAAM,IAAI,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE;EACrC,KAAK,GAAG,OAAO,CAAC;EAChB,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;EAChC,MAAM,WAAW,EAAE,QAAQ;EAC3B,MAAM,QAAQ,EAAE,WAAW;EAC3B,KAAK,CAAC,CAAC;EACP,GAAG;EACH,CAAC;;EC5DD,MAAM,OAAO,SAAS,IAAI,CAAC;EAC3B,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,uBAAuB,EAAE;EACjE,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,2BAA2B,EAAE,OAAO,CAAC,CAAC;EAChE,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACrC,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,uBAAuB;EAChC,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAC1C,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAIM,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC9B,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,MAAM;EACV,MAAM,OAAO,EAAE,EAAE,MAAM,EAAE;EACzB,KAAK,GAAG,OAAO,CAAC;EAChB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EACnC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B,GAAG;EACH,CAAC;;ECjCD,MAAM,IAAI,SAAS,IAAI,CAAC;EACxB,EAAE,WAAW,CAAC,IAAI,EAAE;EACpB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,MAAM,MAAM,GAAG,IAAIC,gBAAgB,EAAE,CAAC;;EAE1C,IAAI,MAAM,CAAC,IAAI;EACf,MAAM,uGAAuG;EAC7G,MAAM,IAAI,IAAI;EACd,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAIC,kBAAkB,CAAC,IAAI,EAAE;EACrD,UAAU,IAAI;EACd,UAAU,IAAI,EAAE,IAAI;EACpB,UAAU,MAAM,EAAE,KAAK;EACvB,UAAU,aAAa,EAAE,EAAE;EAC3B,UAAU,YAAY,EAAE,KAAK;EAC7B,UAAU,cAAc,EAAE,EAAE;EAC5B,UAAU,SAAS,EAAE,CAAC;EACtB,UAAU,aAAa,EAAE,CAAC;EAC1B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAIC,uBAAuB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;EACzE,OAAO;EACP,KAAK,CAAC;;EAEN,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC1B,GAAG;EACH,CAAC;;ECfD,MAAM,OAAO,SAAS,KAAK,CAAC;EAC5B,EAAE,WAAW,CAAC,OAAO,EAAE;EACvB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;EACpC,IAAI,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EACzC,IAAI,UAAU;EACd,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;EACvB,OAAO,UAAU,CAAC,IAAI,CAAC;EACvB,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;EACxB,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;EACzB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;EAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;EACjC,MAAM,MAAM,EAAE,CAAC,mBAAmB,GAAG,GAAG,IAAI,CAAC;EAC7C,MAAM,MAAM,EAAE,CAAC,mBAAmB,GAAG,GAAG,IAAI,CAAC;EAC7C,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;EAClC,MAAM,MAAM,EAAE,uBAAuB,GAAG,IAAI;EAC5C,MAAM,MAAM,EAAE,CAAC,uBAAuB,GAAG,IAAI,IAAI,CAAC;EAClD,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;EACxB,MAAM,IAAI,EAAE,IAAIH,WAAW,CAAC,SAAS,CAAC;EACtC,MAAM,QAAQ,EAAE,IAAIA,WAAW,CAAC,mBAAmB,CAAC;EACpD,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACzB,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;EACzC,GAAG;;EAEH,EAAE,OAAO,OAAO,CAAC,OAAO,EAAE;EAC1B,IAAI,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;EAC3B,GAAG;EACH,CAAC;;ECtCD,MAAM,EAAE,SAAS,IAAI,CAAC;EACtB,EAAE,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,GAAG,kBAAkB,EAAE;EACzD,IAAI,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACtC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIN,WAAW,EAAE,CAAC;EACpC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC;EAC9B,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;EACnC,IAAI,UAAU,CAAC,OAAO;EACtB,MAAM,CAAC;EACP,QAAQ,MAAM,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE;EAC3C,QAAQ,cAAc,EAAE,YAAY;EACpC,QAAQ,SAAS;EACjB,OAAO,KAAK;EACZ,QAAQ,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG;EAC1C,UAAU,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;EAC7C,UAAU,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;EAC9C,SAAS,CAAC;;EAEV,QAAQ,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;EACpC,QAAQ,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;;EAE3C,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE;EAChD,UAAU,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;EAC3C,SAAS,MAAM;EACf,UAAU,UAAU,CAAC,KAAK,CAAC,MAAM;EACjC,YAAY,WAAW,CAAC,gBAAgB,CAAC,IAAIG,aAAa,EAAE,CAAC;EAC7D,WAAW,CAAC;EACZ,UAAU,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACjD,UAAU,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;;EAE1C,UAAU,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EAChE,UAAU,UAAU,CAAC,KAAK,CAAC,kBAAkB,CAAC;EAC9C,YAAY,MAAM,EAAE,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,eAAe;EAClE,WAAW,CAAC,CAAC;EACb,SAAS;EACT,OAAO;EACP,KAAK,CAAC;;EAEN,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;EAC1C,MAAM,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;EAClC,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,gBAAgB,CAAC,OAAO,EAAE;EAC5B,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAChF,IAAI,IAAI,aAAa,EAAE;EACvB,MAAM,OAAO,aAAa,CAAC;EAC3B,KAAK;;EAEL,IAAI,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;EAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EAC9B,IAAI,OAAO,QAAQ,CAAC;EACpB,GAAG;EACH,CAAC;;ECvDD,MAAM,eAAe,GAAG;EACxB,EAAE,mBAAmB;EACrB,EAAE,oBAAoB;EACtB,EAAE,cAAc;EAChB,EAAE,kBAAkB;EACpB,EAAE,iBAAiB;EACnB,EAAE,OAAO;EACT,EAAE,eAAe;EACjB,EAAE,WAAW;EACb,EAAE,YAAY;EACd,CAAC,CAAC;;EAEF,MAAM,qBAAqB,GAAG,IAAI,IAAI;EACtC,EAAE,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC;EAC7B,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;EAC9C,IAAI,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;EAC5C,IAAI,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;EAC1C,MAAM,IAAI,CAAC,KAAK,EAAE;EAClB,QAAQ,OAAO;EACf,OAAO;EACP,MAAM,IAAI,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;EACpD,QAAQ,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;EACjC,QAAQ,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;EACnE,OAAO,MAAM;EACb,QAAQ,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAChC,OAAO;EACP,KAAK,CAAC,CAAC;EACP,GAAG;EACH,CAAC,CAAC;;EAEF,MAAM,UAAU,SAAS,UAAU,CAAC;EACpC,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,0BAA0B,EAAE;EACpE,IAAI,KAAK,CAACO,2BAA2B,CAAC,CAAC;EACvC,IAAI,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;EACjC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC;EAClC,MAAM,GAAG;EACT,MAAM,IAAI,EAAE,SAAS;EACrB,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;EACnC,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,0BAA0B;EACnC,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3E,GAAG;;EAEH,EAAE,OAAO,UAAU,CAAC,MAAM,EAAE;EAC5B,IAAI,qBAAqB,CAAC,MAAM,CAAC,CAAC;EAClC,GAAG;;EAEH,EAAE,aAAa,GAAG,EAAE;;EAEpB,EAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,EAAE,OAAO,GAAG,EAAE,EAAE;EACzD,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,IAAI;EAClC,MAAM,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE;EAClD,QAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ;EAC/B,QAAQ,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,uBAAuB;EACtE,QAAQ,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE;EAClE,QAAQ,GAAG,OAAO;EAClB,OAAO,CAAC,CAAC;EACT,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;EAClC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC;;EAE9C,MAAM,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC9B,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,uBAAuB,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;EAC3C,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,IAAI;EAC/C,MAAM,qBAAqB,CAAC,IAAI,CAAC,CAAC;EAClC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC;EACjB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,WAAW,CAAC,UAAU,EAAE;EAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,IAAI;EAClC,MAAM,MAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;EACrC,MAAM,MAAM,IAAI,GAAG,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;EACnE,MAAM,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI;EACtE,QAAQ,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI;EAChC,WAAW,YAAY,CAAC,UAAU,CAAC;EACnC,WAAW,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;EACvC,WAAW,KAAK,CAAC,QAAQ,CAAC,CAAC;EAC3B,QAAQ,OAAO,SAAS,CAAC;EACzB,OAAO,CAAC,CAAC;EACT,MAAM,UAAU,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzC,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,OAAO,GAAG;EACZ,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAC5B,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC7C,KAAK;EACL,GAAG;;EAEH,EAAE,IAAI,GAAG;EACT,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;EAChC,GAAG;;EAEH,EAAE,IAAI,GAAG;EACT,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;EAC/B,GAAG;EACH,CAAC;;ECrGD,MAAM,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,KAAK;EACxE,EAAE,MAAM,UAAU,GAAG,KAAK,GAAG,SAAS,CAAC;EACvC,EAAE,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;EACzE,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;EAChD,EAAE,OAAO;EACT,IAAI,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC;EAChE,IAAI,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC;EAChE,IAAI,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC;EAChE,IAAI,GAAG;EACP,GAAG,CAAC;EACJ,CAAC,CAAC;;EAEF,MAAM,MAAM;EACZ,EAAE,mEAAmE,CAAC;EACtE,SAAS,QAAQ,CAAC,CAAC,EAAE;EACrB,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;EACf,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EACZ,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;;EAEf,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAChD,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,IAAI,IAAI,IAAI,CAAC,CAAC;EACd,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE;EACnB,MAAM,IAAI,IAAI,CAAC,CAAC;EAChB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;EACxB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC;EACzB,KAAK;EACL,IAAI,CAAC,KAAK,CAAC,CAAC;EACZ,GAAG;EACH,EAAE,OAAO,CAAC,CAAC;EACX,CAAC;;EAED,MAAM,oBAAoB,GAAG,SAAS,OAAO,EAAE;EAC/C,EAAE,MAAM,SAAS,GAAG,EAAE,CAAC;EACvB,EAAE,MAAM,MAAM,GAAG,EAAE,CAAC;EACpB,EAAE,IAAI,OAAO,EAAE;EACf,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;EAC/B,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;;EAEvB,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACxB,MAAM,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;EACjC,KAAK,CAAC,CAAC;;EAEP,IAAI,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;EAC7C,IAAI,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;EACvE,IAAI,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC;EAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EAChC,MAAM,MAAM,EAAE,GAAG,SAAS;EAC1B,QAAQ,OAAO;EACf,QAAQ,QAAQ;EAChB,QAAQ,CAAC;EACT,QAAQ,OAAO,CAAC,YAAY;EAC5B,QAAQ,OAAO,CAAC,UAAU;EAC1B,OAAO,CAAC;EACR,MAAM,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,MAAM,KAAK,GAAG,IAAIJ,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/C,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAE,OAAO;EACT,IAAI,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC;EAC3C,IAAI,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;EACrC,GAAG,CAAC;EACJ,CAAC,CAAC;;EAEF,MAAM,UAAU,SAAS,IAAI,CAAC;EAC9B,EAAE,WAAW;EACb,IAAI,GAAG;EACP,IAAI,SAAS;EACb,IAAI,WAAW,GAAG,wBAAwB;EAC1C,IAAI,OAAO,GAAG,0BAA0B;EACxC,IAAI;EACJ,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;EAChD,IAAI,MAAM,aAAa,GAAG,IAAIK,oBAAoB,CAAC;EACnD,MAAM,IAAI,EAAE,GAAG;EACf,MAAM,YAAY,EAAEP,kBAAkB;EACtC,KAAK,CAAC,CAAC;EACP,IAAI,MAAM,QAAQ,GAAG,IAAIQ,oBAAoB,EAAE,CAAC;EAChD,IAAI,QAAQ,CAAC,YAAY;EACzB,MAAM,UAAU;EAChB,MAAM,IAAIC,qBAAqB;EAC/B,QAAQ,IAAI,YAAY,CAAC,qBAAqB,GAAG,CAAC,CAAC;EACnD,QAAQ,CAAC;EACT,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;EACxB,KAAK,CAAC;EACN,IAAI,QAAQ,CAAC,YAAY;EACzB,MAAM,OAAO;EACb,MAAM,IAAIA,qBAAqB;EAC/B,QAAQ,IAAI,YAAY,CAAC,qBAAqB,GAAG,CAAC,CAAC;EACnD,QAAQ,CAAC;EACT,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;EACxB,KAAK,CAAC;EACN,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIC,YAAY,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;EAC5D,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;EACtC,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,0BAA0B;EACnC,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,wBAAwB,CAAC,SAAS,EAAE,MAAM,EAAE;EAC9C,IAAI,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;EACrC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;EAChE,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,IAAI,MAAM,YAAY,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;EAC5D,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;;EAEtD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;EAC/D,MAAM,YAAY,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EAC1C,MAAM,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EACpC,KAAK;EACL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,EAAE,CAAC,EAAE,EAAE;EACxD,MAAM,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1B,KAAK;;EAEL,IAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACpD,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;EACjD,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;EAChE,IAAI,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;EACrD,GAAG;EACH,CAAC;;ECpID,MAAM,IAAI,SAAS,IAAI,CAAC;EACxB,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIC,iBAAiB,EAAE,CAAC;EAC5C,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIjB,0BAA0B,EAAE,CAAC;EACrD,GAAG;;EAEH,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE;EAClB,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACtC,GAAG;EACH,CAAC;;ECTD,MAAM,MAAM,SAAS,IAAI,CAAC;EAC1B,EAAE,WAAW,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,EAAE;EAC/B,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIkB,oBAAoB;EAC5C,MAAM,IAAI;EACV,MAAM,uBAAuB;EAC7B,MAAM,uBAAuB;EAC7B,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIlB,0BAA0B,EAAE,CAAC;EACrD,GAAG;EACH,CAAC;;ECXD,MAAM,YAAY,SAASmB,kBAAkB,CAAC;EAC9C,EAAE,WAAW,CAAC,KAAK,GAAG,kBAAkB,EAAE,SAAS,GAAG,CAAC,EAAE;EACzD,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIf,cAAc,EAAE,CAAC;EACzC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIG,uBAAuB,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;EAC/D,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAGD,kBAAkB,CAAC;EACpD,GAAG;;EAEH,EAAE,QAAQ,CAAC,MAAM,EAAE;EACnB,IAAIT,QAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EAC1C,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE;EAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG;EACvC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAIQ,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjD,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;;EAE5C,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;EAC3B,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG;EACvC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAIG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjD,OAAO,CAAC;EACR,MAAM,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC;EAC5C,KAAK;EACL,GAAG;;EAEH,EAAE,YAAY,CAAC,SAAS,EAAE;EAC1B,IAAIb,YAA2B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACjD,GAAG;EACH,CAAC;;ECjCD,MAAM,YAAY,CAAC;EACnB,EAAE,WAAW,CAAC,UAAU,EAAE,SAAS,EAAE;EACrC,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;EACjC,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC/B,GAAG;;EAEH,EAAE,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;EACxD,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC3B,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC3B,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC,GAAG;;EAEH,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;EACrC,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;EAC9B,IAAI,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;;EAEvC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;EAC3C,MAAM,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;EACzE,KAAK;;EAEL,IAAI,KAAK,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzE,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;EAClD,KAAK;EACL,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;EACxC,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;EACzD,IAAI,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;AACvC,AACA;EACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;EAC3C,MAAM,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;EACzE,KAAK;;EAEL,IAAI,KAAK,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACvD,MAAM,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;EAC1C,MAAM,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEpC,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,MAAM,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC7B,MAAM,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACnC,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EAClC,KAAK;EACL,GAAG;EACH,CAAC;;ECvCD,MAAM,UAAU,SAAS,IAAI,CAAC;EAC9B,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIS,cAAc,EAAE,CAAC;EACzC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIO,uBAAuB,EAAE,CAAC;EAClD,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EACvD,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;EAC7C,IAAI,OAAO,CAAC,OAAO,GAAG,mBAAmB,CAAC,MAAM,CAAC;;EAEjD,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;EAC9C,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAC3D,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAC9D,KAAK;EACL,GAAG;EACH,CAAC;;ECpBD,MAAM,MAAM,SAASK,YAAY,CAAC;EAClC,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIZ,cAAc,EAAE,CAAC;EACzC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIS,oBAAoB,CAAC;EAC7C,MAAM,YAAY,EAAEP,kBAAkB;EACtC,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,YAAY,CAAC,SAAS,EAAE;EAC1B,IAAIX,YAA2B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACjD,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;EAC7C,IAAI,MAAM;EACV,MAAM,KAAK,EAAE,EAAE,CAAC,EAAE;EAClB,KAAK,GAAG,OAAO,CAAC;;EAEhB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;EAC3B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG;EACvC,MAAM,MAAM,IAAI,IAAIU,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EAC/D,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;;EAE5C,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;EAC3B,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG;EACvC,QAAQ,KAAK,IAAI,IAAIG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EAC3D,OAAO,CAAC;EACR,MAAM,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC;EAC5C,KAAK;EACL,GAAG;;EAEH,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE;EACxB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;EAC9B,GAAG;EACH,CAAC;;ECnCD,MAAM,YAAY,SAAS,IAAI,CAAC;EAChC,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIJ,cAAc,EAAE,CAAC;;EAEzC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIO,uBAAuB,CAAC;EAChD,MAAM,YAAY,EAAES,gBAAgB;EACpC,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAGC,gBAAgB,CAAC;EAC1C,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,GAAG,EAAE,EAAE,OAAO,EAAE;EAC7C,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC;EACxB,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;EACrB,IAAI,MAAM;EACV,MAAM,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACxB,KAAK,GAAG,OAAO,CAAC;;EAEhB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5B,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;EACnE,MAAM,MAAM,aAAa,GAAG;EAC5B,QAAQ,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;EACzB,QAAQ,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;EAC7B,QAAQ,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;EAC7B,OAAO,CAAC;EACR,MAAM,aAAa,CAAC,GAAG,CAAC,IAAI,IAAI;EAChC,QAAQ,QAAQ,CAAC,IAAI,CAAC,IAAIhB,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,OAAO,CAAC,CAAC;;EAET,MAAM,MAAM,KAAK;EACjB,QAAQ,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;EACvE,MAAM,KAAK,CAAC,IAAI;EAChB,QAAQ,IAAIiB,WAAW;EACvB,UAAU,CAAC,GAAG,KAAK;EACnB,UAAU,CAAC,GAAG,KAAK,GAAG,CAAC;EACvB,UAAU,CAAC,GAAG,KAAK,GAAG,CAAC;EACvB,UAAU,IAAIjB,aAAa,EAAE;EAC7B,UAAU,IAAIG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACpD,SAAS;EACT,OAAO,CAAC;EACR,KAAK;;EAEL,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;EACtC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;;EAEhC,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;EACvC,IAAI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;EACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;EAC5C,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;EAC5C,GAAG;EACH,CAAC;;EC/CD,MAAM,QAAQ,SAAS,IAAI,CAAC;EAC5B,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIJ,cAAc,EAAE,CAAC;EACzC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIO,uBAAuB,EAAE,CAAC;EAClD,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACrD,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;EAC7C,IAAI,OAAO,CAAC,OAAO,GAAG,mBAAmB,CAAC,IAAI,CAAC;;EAE/C,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;EAC9C,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAC3D,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAC9D,KAAK;EACL,GAAG;EACH,CAAC;;ECLD,MAAM,eAAe,GAAG,MAAM,IAAI;EAClC,EAAE,QAAQ,MAAM,CAAC,IAAI;EACrB,IAAI,KAAK,mBAAmB,CAAC,IAAI;EACjC,MAAM,OAAO,IAAI,IAAI,EAAE,CAAC;EACxB,IAAI,KAAK,mBAAmB,CAAC,MAAM;EACnC,MAAM,OAAO,IAAI,MAAM,EAAE,CAAC;EAC1B,IAAI,KAAK,mBAAmB,CAAC,QAAQ,EAAE;EACvC,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;EAChC,MAAM,KAAK,CAAC,GAAG,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;EAChC,MAAM,OAAO,KAAK,CAAC;EACnB,KAAK;EACL,IAAI,KAAK,mBAAmB,CAAC,SAAS;EACtC,MAAM,OAAO,IAAI,YAAY,EAAE,CAAC;EAChC,IAAI,KAAK,mBAAmB,CAAC,UAAU;EACvC,MAAM,OAAO,IAAI,IAAI,EAAE,CAAC;EACxB,IAAI,KAAK,mBAAmB,CAAC,WAAW;EACxC,MAAM,OAAO,IAAI,UAAU,EAAE,CAAC;EAC9B,IAAI,KAAK,mBAAmB,CAAC,MAAM;EACnC,MAAM,OAAO,IAAI,MAAM,EAAE,CAAC;EAC1B,IAAI,KAAK,mBAAmB,CAAC,aAAa;EAC1C,MAAM,OAAO,IAAI,YAAY,EAAE,CAAC;EAChC,IAAI,KAAK,mBAAmB,CAAC,SAAS;EACtC,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;EAC5B,IAAI,KAAK,mBAAmB,CAAC,KAAK,CAAC;EACnC,IAAI,SAAS;EACb,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;EAChC,MAAM,KAAK,CAAC,iBAAiB,CAAC;EAC9B,QAAQ,MAAM,EAAE,mBAAmB,GAAG,GAAG;EACzC,QAAQ,MAAM,EAAE,mBAAmB,GAAG,GAAG;EACzC,OAAO,CAAC,CAAC;EACT,MAAM,KAAK,CAAC,kBAAkB,CAAC;EAC/B,QAAQ,MAAM,EAAE,uBAAuB,GAAG,IAAI;EAC9C,QAAQ,MAAM,EAAE,uBAAuB,GAAG,GAAG;EAC7C,OAAO,CAAC,CAAC;EACT,MAAM,OAAO,KAAK,CAAC;EACnB,KAAK;EACL,GAAG;EACH,CAAC,CAAC;;ECrDa,MAAM,aAAa,CAAC;EACnC,EAAE,WAAW,CAAC,UAAU,EAAE,UAAU,EAAE;EACtC,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;EACxB,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;EAC7B,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;EACzB,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;EACjC,GAAG;;EAEH,EAAE,iBAAiB,CAAC,MAAM,EAAE;EAC5B,IAAI,MAAM,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EAC3C,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;EAC7B,MAAM,MAAM,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;EAC7C,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;EAClC,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EAC9B,KAAK;;EAEL,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;EAC5D,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EAC9B,GAAG;;EAEH,EAAE,gBAAgB,CAAC,GAAG,EAAE;EACxB,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAClC,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;EACrB,GAAG;;EAEH,EAAE,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE;EACnC,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC;;EAE1B,IAAI,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;;EAElC,IAAI,OAAO,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC;EACrC,MAAM,GAAG,EAAE,OAAO,CAAC,GAAG;EACtB,MAAM,IAAI,EAAE,OAAO,CAAC,SAAS;EAC7B,MAAM,WAAW,EAAE,OAAO,CAAC,WAAW;EACtC,MAAM,UAAU,EAAE,SAAS;EAC3B,KAAK,CAAC,CAAC;;EAEP,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;EACxB,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE;EAClC,IAAI,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;EAC9C,IAAI,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC;;EAEpD,IAAI,IAAI,gBAAgB,KAAK,SAAS,EAAE;EACxC,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;EAC5C,KAAK;;EAEL,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;EAEjC,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;EACtC,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;EACnD,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;EAC/D,KAAK;EACL,GAAG;;EAEH,EAAE,QAAQ,GAAG;EACb,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;EACtB,GAAG;;EAEH,EAAE,YAAY,CAAC,MAAM,EAAE;EACvB,IAAI,MAAM;EACV,MAAM,IAAI,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE;EACrC,MAAM,KAAK;EACX,MAAM,KAAK;EACX,MAAM,MAAM;EACZ,MAAM,MAAM;EACZ,KAAK,GAAG,MAAM,CAAC;EACf,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;;EAExD,IAAI,IAAI,YAAY,CAAC,YAAY,EAAE;EACnC,MAAM,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACxD,KAAK;;EAEL,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;;EAEhF;EACA,IAAI,IAAI,YAAY,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;EAC7D,MAAM,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,KAAK;EACL,IAAI,IAAI,YAAY,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;EACrD,MAAM,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EACnC,KAAK;;EAEL,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC;EAC1B,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE;EAClC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;EACjC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;EACtB,KAAK;EACL,GAAG;;EAEH,EAAE,YAAY,CAAC,EAAE,EAAE;EACnB,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EACnC,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;EAC3B,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EAC9B,GAAG;;EAEH,EAAE,KAAK,GAAG;EACV,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;EACzB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;;EAEpB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI;EAC9C,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;EAC5B,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,OAAO,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC3B,IAAI,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACzB,GAAG;EACH,CAAC;;ECxGD,MAAM,WAAW,SAAS,IAAI,CAAC;EAC/B,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,2BAA2B,EAAE;EACrE,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,wBAAwB,EAAE,OAAO,CAAC,CAAC;;EAE7D,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;EAE7C,IAAI,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;EAClC,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACvE,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC/B,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,2BAA2B;EACpC,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACzD,GAAG;;EAEH,EAAE,QAAQ,GAAG;EACb,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACvB,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;EACtB,KAAK;EACL,GAAG;;EAEH,EAAE,iBAAiB,CAAC,QAAQ,EAAE;EAC9B,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EAC7B,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;EACpC,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI;EACxC,QAAQ,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EAChD,OAAO,CAAC,CAAC;EACT,KAAK;EACL,GAAG;;EAEH,EAAE,KAAK,GAAG;EACV,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;EAC/B,GAAG;EACH,CAAC;;EChDD,MAAMY,QAAM,CAAC;EACb,EAAE,WAAW,CAAC,OAAO,GAAG,EAAE,EAAE;EAC5B,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC;EAC5C,IAAI,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAIC,cAAc,EAAE,CAAC;EACjE,GAAG;;EAEH,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;EAC3B,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;EAC9C,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;EACpC,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,SAAS,GAAG,IAAIT,qBAAqB;EAC9C,MAAM,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;EACxC,MAAM,CAAC;EACP,MAAM,KAAK;EACX,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIA,qBAAqB;EAC3C,MAAM,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;EACxC,MAAM,CAAC;EACP,MAAM,KAAK;EACX,KAAK,CAAC;;EAEN,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;;EAErB,IAAI,IAAI,IAAI,KAAK,gBAAgB,CAAC,MAAM,EAAE;EAC1C,MAAM,MAAM,MAAM,GAAG,IAAIU,mBAAmB,EAAE,CAAC,IAAI;EACnD,QAAQ,+FAA+F;EACvG,OAAO,CAAC;;EAER,MAAM,OAAO,GAAG;EAChB,QAAQ,GAAG,EAAE,MAAM;EACnB,QAAQ,SAAS,EAAE,GAAG;EACtB,OAAO,CAAC;EACR,KAAK;;EAEL,IAAI,IAAI,CAAC,OAAO,GAAG,IAAIX,oBAAoB,EAAE,CAAC;EAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3E,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;EAErE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAID,oBAAoB,CAAC;EAC7C,MAAM,KAAK,EAAE,QAAQ;EACrB,MAAM,IAAI;EACV,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAGP,kBAAkB,CAAC;EACpD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACrC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;;EAElC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIU,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EAChE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACrC,GAAG;;EAEH,EAAE,MAAM,CAAC,IAAI,EAAE;EACf,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EACvC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;EACtC,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;EACnC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;EACtE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;EAChE,GAAG;;EAEH,EAAE,QAAQ,CAAC,KAAK,EAAE;EAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;EAClC,GAAG;;EAEH,EAAE,OAAO,CAAC,IAAI,EAAE;EAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;EAC9B,GAAG;EACH,CAAC;;ECtDD,MAAM,SAAS,SAAS,IAAI,CAAC;EAC7B,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,yBAAyB,EAAE;EACnE,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,sBAAsB,EAAE,OAAO,CAAC,CAAC;;EAE3D,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIO,QAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;EACtD,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;EACvC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;;EAEnC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;EAC5C,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACrC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EACnC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;EAC5B,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,yBAAyB;EAClC,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,sBAAsB,CAAC,IAAI,EAAE;EAC/B,IAAI,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;;EAExD,IAAI,OAAO,CAAC,IAAI,GAAG,YAAY,KAAK,YAAY,GAAG,YAAY,CAAC,CAAC;EACjE,GAAG;;EAEH,EAAE,uBAAuB,CAAC,SAAS,EAAE,QAAQ,EAAE;EAC/C,IAAI,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAC7D,IAAI,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;;EAEjC,IAAI,IAAI,KAAK,CAAC;;EAEd,IAAI,QAAQ,WAAW;EACvB,MAAM,KAAK,yBAAyB,CAAC,SAAS;EAC9C,QAAQ,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;EACvD,QAAQ,MAAM;EACd,MAAM,KAAK,yBAAyB,CAAC,CAAC;EACtC,QAAQ,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,MAAM;EACd,MAAM,KAAK,yBAAyB,CAAC,CAAC;EACtC,QAAQ,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,MAAM;EACd,MAAM,KAAK,yBAAyB,CAAC,CAAC;EACtC,QAAQ,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,MAAM;EACd,MAAM;EACN,QAAQ,MAAM;EACd,KAAK;;EAEL,IAAI,MAAM,WAAW,GAAG,IAAIf,WAAW,CAAC,QAAQ,CAAC,CAAC;EAClD,IAAI,MAAM,WAAW,GAAG,IAAIA,WAAW,CAAC,QAAQ,CAAC,CAAC;;EAElD,IAAI,MAAM,UAAU;EACpB,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC;EACxE,IAAI,OAAO,IAAIA,WAAW,CAAC,UAAU,CAAC,CAAC;EACvC,GAAG;;EAEH,EAAE,sBAAsB,CAAC,IAAI,EAAE;EAC/B,IAAI,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;;EAExD,IAAI,OAAO,CAAC,IAAI,GAAG,YAAY,KAAK,YAAY,GAAG,YAAY,CAAC,CAAC;EACjE,GAAG;;EAEH,EAAE,uBAAuB,CAAC,SAAS,EAAE,QAAQ,EAAE;EAC/C,IAAI,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAC9D,IAAI,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;;EAEjC,IAAI,IAAI,KAAK,CAAC;;EAEd,IAAI,QAAQ,IAAI;EAChB,MAAM,KAAK,IAAI,CAAC,CAAC;EACjB,QAAQ,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,MAAM;EACd,MAAM,KAAK,IAAI,CAAC,CAAC;EACjB,QAAQ,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,MAAM;EACd,MAAM,KAAK,IAAI,CAAC,CAAC;EACjB,QAAQ,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,MAAM;EACd,MAAM;EACN,QAAQ,MAAM;EACd,KAAK;;EAEL,IAAI,MAAM,UAAU,GAAG,KAAK,GAAG,YAAY,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,YAAY,CAAC;EACzE,IAAI,OAAO,IAAIA,WAAW,CAAC,UAAU,CAAC,CAAC;EACvC,GAAG;;EAEH,EAAE,gBAAgB,CAAC,SAAS,EAAE,QAAQ,EAAE;EACxC,IAAI,MAAM,EAAE,gBAAgB,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;;EAEzD,IAAI,QAAQ,gBAAgB;EAC5B,MAAM,KAAK,kBAAkB,CAAC,SAAS;EACvC,QAAQ,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;EACjE,MAAM,KAAK,kBAAkB,CAAC,UAAU;EACxC,QAAQ,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;EACjE,MAAM,KAAK,kBAAkB,CAAC,UAAU;EACxC,QAAQ,OAAO,IAAIA,WAAW,CAAC,SAAS,CAAC,CAAC;EAC1C,MAAM;EACN,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,GAAG;;EAEH,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE;EACtC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;EAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;EAClD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;EAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;EAClD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;EAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;EAClD,GAAG;;EAEH,EAAE,cAAc,GAAG;EACnB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;EAC3C,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;EACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;EAClC,GAAG;;EAEH,EAAE,kBAAkB,CAAC,OAAO,EAAE;EAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;EAClB,MAAM,OAAO;EACb,KAAK;EACL,IAAI,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAC1C,IAAI,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAClC,IAAI,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;EAC5C,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;EAC5B,IAAI,MAAM,SAAS,GAAG,EAAE,CAAC;EACzB,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC;;EAEtB,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE;EAC/B,MAAM,OAAO;EACb,KAAK;;EAEL,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;EAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;EAE1C,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;EACd,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EAChC,MAAM,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEtC,MAAM,IAAI,KAAK,IAAI,OAAO,CAAC,SAAS,IAAI,KAAK,IAAI,OAAO,CAAC,SAAS,EAAE;EACpE,QAAQ,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,OAAO,CAAC,eAAe,CAAC;EACtE,QAAQ,MAAM,QAAQ,GAAG;EACzB,UAAU,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;EACpC,UAAU,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;EACpC,UAAU,CAAC,EAAE,CAAC;EACd,SAAS,CAAC;EACV,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;;EAEtE,QAAQ,QAAQ,KAAK;EACrB,UAAU,KAAK,gBAAgB,CAAC,MAAM,CAAC;EACvC,UAAU,KAAK,gBAAgB,CAAC,OAAO,CAAC;EACxC,UAAU,KAAK,gBAAgB,CAAC,YAAY,EAAE;EAC9C,YAAY,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;EACrD,YAAY,CAAC,IAAI,CAAC,CAAC;EACnB,YAAY,MAAM;EAClB,WAAW;EACX,UAAU;EACV,YAAY,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC/B,YAAY,MAAM;EAClB,SAAS;EACT,OAAO;EACP,KAAK;;EAEL,IAAI,MAAM,OAAO,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC;;EAE7D,IAAI,QAAQ,KAAK;EACjB,MAAM,KAAK,gBAAgB,CAAC,OAAO,EAAE;EACrC,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;EACvC,QAAQ,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EACjE,QAAQ,MAAM;EACd,OAAO;EACP,MAAM,KAAK,gBAAgB,CAAC,KAAK,EAAE;EACnC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;EACrC,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAC/D,QAAQ,MAAM;EACd,OAAO;EACP,MAAM;EACN,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;EAC9C,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAClC,QAAQ,MAAM;EACd,KAAK;EACL,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EAC9C,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;EACrC,IAAI,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;EAC/B,GAAG;EACH,CAAC;;EC1MM,MAAM,2BAA2B,GAAG;EAC3C,EAAE,SAAS;EACX,EAAE,KAAK;EACP,EAAE,MAAM;EACR,EAAE,UAAU;EACZ,KAAK;EACL,EAAE,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;EACzC,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;EAC1C,MAAM,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC;EACpD,MAAM,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;EACpC,MAAM,MAAM,GAAG,GAAG,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3E,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC;;EAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE;EAClC,QAAQ,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EAC1C,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;EAC3C;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;EAC3C;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;EAChE,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM;EACb;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;EACjC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;EACnC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;EACnC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO;EACP,KAAK;EACL,GAAG;EACH,CAAC,CAAC;;AAEF,EAAO,MAAM,8BAA8B,GAAG;EAC9C,EAAE,SAAS;EACX,EAAE,KAAK;EACP,EAAE,MAAM;EACR,EAAE,UAAU;EACZ,KAAK;EACL,EAAE,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;EACzC,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;EAC1C,MAAM,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC;EACpD,MAAM,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;;EAEpC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC;;EAEtC,MAAM,MAAM,OAAO,GAAG,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EACnE,MAAM,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtC,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAC9B,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAChC,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAChC,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAChC,KAAK;EACL,GAAG;EACH,CAAC,CAAC;;AAEF,EAAO,MAAM,gCAAgC,GAAG;EAChD,EAAE,SAAS;EACX,EAAE,KAAK;EACP,EAAE,MAAM;EACR,EAAE,UAAU;EACZ,KAAK;EACL,EAAE,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;EACzC,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;EAC1C,MAAM,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC;EACpD,MAAM,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;EACpC,MAAM,MAAM,GAAG,GAAG,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE3E,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC;;EAEtC,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE;EACrB,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,OAAO,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,EAAE;EACxC;EACA,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACpC,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;EACtC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM,IAAI,GAAG,KAAK,EAAE,EAAE;EAC7B;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM,IAAI,GAAG,KAAK,GAAG,EAAE;EAC9B;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;EAC1C;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;EAC3C;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;EAChE,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO,MAAM;EACb;EACA,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;EACjC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;EACnC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;EACnC,QAAQ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;EAClC,OAAO;EACP,KAAK;EACL,GAAG;EACH,CAAC,CAAC;;AAEF,EAAO,MAAM,iBAAiB,GAAG,SAAS,IAAI;EAC9C,EAAE,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;EAClD,EAAE,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;EACjC,EAAE,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;EACnC,EAAE,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EAC1C,EAAE,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,EAAE,OAAO,MAAM,CAAC;EAChB,CAAC,CAAC;;ECzIF,MAAM,KAAK,SAAS,IAAI,CAAC;EACzB,EAAE,WAAW,GAAG;EAChB,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIkB,mBAAmB,EAAE,CAAC;EAC9C,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAIf,uBAAuB,EAAE,CAAC;EAClD,GAAG;EACH,CAAC;;ECMD,MAAM,GAAG,SAAS,IAAI,CAAC;EACvB,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,mBAAmB,EAAE;EAC7D,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,0BAA0B,EAAE,OAAO,CAAC,CAAC;EAC/D,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EAC5C,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,mBAAmB;EAC5B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,SAAS,CAAC,QAAQ,EAAE;EACtB,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EAC7B,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;;EAE/C,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;;EAEzC,IAAI,IAAI,UAAU,EAAE;EACpB,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAGU,gBAAgB,CAAC;EACnD,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAGM,eAAe,CAAC;EAClD,KAAK;EACL,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EAC5C,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;EAC1B,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EAC3C,KAAK;EACL,GAAG;;EAEH,EAAE,sBAAsB,CAAC,OAAO,EAAE;EAClC,IAAI,MAAM;EACV,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE;EACjD,KAAK,GAAG,OAAO,CAAC;;EAEhB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,UAAU,EAAE,CAAC,CAAC,GAAG,MAAM,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC;EAC3E,IAAI,MAAM,WAAW,GAAG,CAAC,KAAK,GAAG,UAAU,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;EACrE,IAAI,MAAM,WAAW,GAAG,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtE,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;EAC1D,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EACzC,IAAI,MAAM;EACV,MAAM,IAAI;EACV,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;EAC7B,KAAK,GAAG,OAAO,CAAC;;EAEhB,IAAI,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;EACnD,IAAI,IAAI,YAAY,GAAG,IAAI,CAAC;;EAE5B,IAAI,QAAQ,WAAW;EACvB,MAAM,KAAK,iBAAiB,CAAC,GAAG;EAChC,QAAQ,2BAA2B,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;EACpE,QAAQ,YAAY,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;EACpD,QAAQ,MAAM;EACd,MAAM,KAAK,iBAAiB,CAAC,SAAS;EACtC,QAAQ,gCAAgC,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;EACzE,QAAQ,YAAY,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;EACpD,QAAQ,MAAM;EACd,MAAM,KAAK,iBAAiB,CAAC,GAAG;EAChC,QAAQ,8BAA8B,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;EACvE,QAAQ,YAAY,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;EACpD,QAAQ,MAAM;EACd,MAAM;EACN,QAAQ,MAAM;EACd,KAAK;;EAEL,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAIC,mBAAmB,CAAC,YAAY,CAAC,CAAC;EACrE,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAAGC,mBAAmB,CAAC;EAC7D,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAAGA,mBAAmB,CAAC;EAC7D,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;;EAE5C,IAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;EACzC,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACvB,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;EAC7B,KAAK;;EAEL,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAChC,IAAI,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;EAC/B,GAAG;EACH,CAAC;;ECtFD,MAAM,QAAQ,SAAS,IAAI,CAAC;EAC5B,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,wBAAwB,EAAE;EAClE,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,qBAAqB,CAAC,CAAC;;EAEjD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EACvB,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;EACzB,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;EACxB,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;EAC5B,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;EAC9C,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,wBAAwB;EACjC,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,UAAU,CAAC,gBAAgB,EAAE;EAC/B,IAAI,IAAI,gBAAgB,EAAE;EAC1B,MAAM,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC;EACrC,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAChC,KAAK;EACL,GAAG;;EAEH,EAAE,WAAW,CAAC,IAAI,EAAE;EACpB,IAAI,IAAI,WAAW,GAAG,EAAE,CAAC;;EAEzB,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;EACpB,MAAM,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EACxB,MAAM,OAAO;EACb,KAAK;;EAEL,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;EAC/D,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;EACxD,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;EAC5C,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,OAAO;;EAEP,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;EAC9C,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI;EACrC,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM;EAC9B,OAAO,CAAC;EACR,MAAM,WAAW,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;EACpC,KAAK,MAAM;EACX,MAAM,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;EACzC,KAAK;;EAEL,IAAI,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;EAClC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;EACzB,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;EACpD,GAAG;;EAEH,EAAE,gBAAgB,GAAG;EACrB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,KAAK;EAC5C,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;EAC7B,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;EACpC,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;EACzB,GAAG;;EAEH,EAAE,6BAA6B,CAAC,OAAO,EAAE;EACzC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;EACtC,MAAM,OAAO,IAAI,CAAC;EAClB,KAAK;;EAEL,IAAI,MAAM,OAAO,GAAG;EACpB,MAAM,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,QAAQ;EAC5D,MAAM,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,UAAU;EAChE,KAAK,CAAC;;EAEN,IAAI,OAAO,6BAA6B,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;EACzE,GAAG;;EAEH,EAAE,SAAS,GAAG;EACd,IAAI,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAClC,IAAI,QAAQ,IAAI;EAChB,MAAM,KAAK,qBAAqB,CAAC,KAAK;EACtC,QAAQ,OAAO,IAAI,KAAK,EAAE,CAAC;EAC3B,MAAM,KAAK,qBAAqB,CAAC,IAAI;EACrC,QAAQ,OAAO,IAAI,IAAI,EAAE,CAAC;EAC1B,KAAK;;EAEL,IAAI,OAAO,IAAIL,cAAc,EAAE,CAAC;EAChC,GAAG;;EAEH,EAAE,oBAAoB,GAAG;EACzB,IAAI,MAAM,cAAc,GAAG,EAAE,CAAC;;EAE9B;EACA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,KAAK;EAC/C,MAAM,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;EAC9C,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EACnC,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;EAEpC,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;EACtC,MAAM,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,MAAM,CAAC,UAAU,CAAC,GAAG;EAC3B,QAAQ,UAAU,CAAC,CAAC;EACpB,QAAQ,UAAU,CAAC,CAAC;EACpB,QAAQ,UAAU,CAAC,CAAC;EACpB,QAAQ,UAAU,CAAC,CAAC;EACpB,OAAO,CAAC;EACR,MAAM,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAClC,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EAC9B,MAAM,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;EAC/C,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;EACrC,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAC/C,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;;EAExC,IAAI,IAAI,IAAI,KAAK,WAAW,EAAE;EAC9B,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;EAClC,KAAK;;EAEL,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,IAAI;EACtC,MAAM,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;EAC/C,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;EAC3B,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;EACxB,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAC9B,MAAM,OAAO;EACb,KAAK;;EAEL,IAAI,MAAM;EACV,MAAM,IAAI,EAAE;EACZ,QAAQ,IAAI,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE;EACvC,OAAO;EACP,KAAK,GAAG,OAAO,CAAC;EAChB,IAAI,MAAM,SAAS,GAAG;EACtB,MAAM,WAAW,EAAE,QAAQ;EAC3B,MAAM,QAAQ,EAAE,WAAW;EAC3B,KAAK,CAAC;;EAEN,IAAI,MAAM,OAAO,GAAG;EACpB,MAAM,QAAQ,EAAE,IAAInB,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;EACrE,MAAM,UAAU,EAAE,IAAIyB,gBAAgB;EACtC,QAAQ,WAAW,CAAC,CAAC;EACrB,QAAQ,WAAW,CAAC,CAAC;EACrB,QAAQ,WAAW,CAAC,CAAC;EACrB,QAAQ,WAAW,CAAC,CAAC;EACrB,OAAO;EACP,KAAK,CAAC;EACN,IAAI,MAAM,wBAAwB,GAAG,IAAI,CAAC,6BAA6B;EACvE,MAAM,OAAO;EACb,KAAK,CAAC;;EAEN,IAAI,IAAI,wBAAwB,EAAE;EAClC,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;EACzC,MAAM,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;EAElD,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACtC,MAAM,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC;EAC9B,MAAM,IAAI,CAAC,aAAa,GAAGC,UAAU,CAAC,KAAK;EAC3C,QAAQ,IAAI,CAAC,aAAa;EAC1B,QAAQ,CAAC;EACT,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC;EACzB,OAAO,CAAC;EACR,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;EACjC,MAAMpC,YAA2B,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;EAExD;EACA,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;EAClD,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;EACxC,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElC,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACvD,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC;EAC7C,OAAO;EACP,KAAK;EACL,GAAG;EACH,CAAC;;EC1LD,MAAM,SAAS,SAAS,IAAI,CAAC;EAC7B,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,yBAAyB,EAAE;EACnE,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,sBAAsB,EAAE,OAAO,CAAC,CAAC;EAC3D,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIO,WAAW,EAAE,CAAC;EACpC,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,yBAAyB;EAClC,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,KAAK;EACjD,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;EAC7B,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;;EAE9B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACnD,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1D,KAAK;;EAEL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACnD,MAAMP,YAA2B,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;EAC3D,QAAQ,WAAW,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ;EAC9C,QAAQ,QAAQ,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW;EAC9C,OAAO,CAAC,CAAC;EACT,MAAM,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;EAChE,KAAK;EACL,GAAG;EACH,CAAC;;ECjCD,MAAM,IAAI,SAAS,IAAI,CAAC;EACxB,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,oBAAoB,EAAE;EAC9D,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;EACtD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACrC,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,oBAAoB;EAC7B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAC1C,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAIa,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC9B,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;EAC9B,IAAI,MAAM,MAAM,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;EAEzE,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EACnC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B,GAAG;EACH,CAAC;;EC9BD,MAAM,KAAK,SAAS,IAAI,CAAC;EACzB,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,qBAAqB,EAAE;EAC/D,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC;EACvD,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;EACnD,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,qBAAqB;EAC9B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,cAAc,CAAC,OAAO,EAAE;EAC1B,IAAI,MAAM;EACV,MAAM,IAAI;EACV,MAAM,IAAI;EACV,MAAM,KAAK;EACX,MAAM,MAAM;EACZ,MAAM,YAAY,EAAE,WAAW;EAC/B,MAAM,QAAQ;EACd,KAAK,GAAG,OAAO,CAAC;;EAEhB,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EAC7C,IAAI,MAAM,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;EAEvD,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;EACnC,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;EACvB,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK;EAChD,MAAM,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EAClD,KAAK,CAAC,CAAC;;EAEP,IAAI,MAAM,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACnD,IAAI,MAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;;EAE/D,IAAI,QAAQ,QAAQ;EACpB,MAAM,KAAK,OAAO,EAAE;EACpB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EAChD,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EACxE,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EACxE,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EACxE,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;EAClC,SAAS;EACT,QAAQ,MAAM;EACd,OAAO;EACP,MAAM,KAAK,MAAM,EAAE;EACnB,QAAQ,MAAM,MAAM,GAAG,CAAC,CAAC;;EAEzB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,MAAM,EAAE,CAAC,IAAI,MAAM,EAAE;EACxD,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5E,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5E,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5E,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;EAClC,SAAS;EACT,QAAQ,MAAM;EACd,OAAO;EACP,MAAM,KAAK,MAAM,EAAE;EACnB,QAAQ,MAAM,MAAM,GAAG,CAAC,CAAC;;EAEzB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,MAAM,EAAE,CAAC,IAAI,MAAM,EAAE;EACxD,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5E,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5E,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5E,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;EAClC,SAAS;EACT,QAAQ,MAAM;EACd,OAAO;EACP,MAAM;EACN,QAAQ,MAAM;EACd,KAAK;;EAEL,IAAI,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;;EAEtC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;EAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;;EAEhC,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;EACjC,GAAG;EACH,CAAC;;EC7ED,MAAM,MAAM,SAAS,IAAI,CAAC;EAC1B,EAAE,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,GAAG,sBAAsB,EAAE;EAChE,IAAI,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC;;EAExD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;EAE7C,IAAI,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;EAClC,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACvE,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC/B,IAAI,IAAI,CAAC,aAAa,CAAC;EACvB,MAAM,GAAG,sBAAsB;EAC/B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACjC,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACzD,GAAG;;EAEH,EAAE,MAAM,CAAC,OAAO,EAAE;EAClB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1B,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;EAC7C,GAAG;;EAEH,EAAE,QAAQ,GAAG;EACb,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACvB,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;EACtB,KAAK;EACL,GAAG;;EAEH,EAAE,iBAAiB,CAAC,QAAQ,EAAE;EAC9B,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EAC7B,GAAG;;EAEH,EAAE,KAAK,GAAG;EACV,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;EAC/B,GAAG;EACH,CAAC;;EC1CD,MAAM,KAAK,SAASwB,WAAW,CAAC;EAChC,EAAE,WAAW,CAAC,OAAO,GAAG,EAAE,EAAE;EAC5B,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI9B,WAAW,EAAE,CAAC;EACxC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;EAE9B,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;EAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;EACtB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;EACpB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAChC,GAAG;;EAEH,EAAE,UAAU,GAAG;EACf,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI;EAC5D,MAAM,MAAM,gBAAgB,GAAG,IAAI+B,sBAAsB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;EACzE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,EAAE,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;EAC7E,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;EACjC,KAAK,CAAC,CAAC;EACP,IAAI,MAAM,YAAY,GAAG,IAAIC,kBAAkB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;EAC/D,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;EAC3B,GAAG;;EAEH,EAAE,QAAQ,GAAG;EACb,IAAI,IAAI,CAAC,IAAI,GAAG,IAAIC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3C,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxB,GAAG;;EAEH,EAAE,SAAS,CAAC,MAAM,EAAE;EACpB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EAChC,GAAG;;EAEH,EAAE,gBAAgB,CAAC,EAAE,MAAM,EAAE,EAAE;EAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;EACnD,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EAC7B,KAAK;EACL,GAAG;;EAEH,EAAE,eAAe,CAAC,IAAI,EAAE;EACxB,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;EACjD,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,IAAI,CAAC,OAAO,GAAG;EACnB,MAAM,GAAG,qBAAqB;EAC9B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC;;EAEN,IAAI,MAAM;EACV,MAAM,eAAe;EACrB,MAAM,QAAQ;EACd,MAAM,aAAa;EACnB,MAAM,SAAS;EACf,MAAM,mBAAmB;EACzB,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;;EAErB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI;EAClB,MAAM,IAAIA,gBAAgB;EAC1B,QAAQ,QAAQ;EAChB,QAAQ,aAAa;EACrB,QAAQ,mBAAmB;EAC3B,QAAQ,SAAS;EACjB,OAAO;EACP,KAAK,CAAC;;EAEN,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI3B,WAAW,CAAC,eAAe,CAAC,CAAC;EACvD,GAAG;EACH,CAAC;;EChED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,aAAa,GAAG,SAAS,MAAM,EAAE,UAAU,EAAE;EACnD,EAAE,UAAU,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC;;EAEhE;;EAEA,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;EACtB,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI4B,aAAO,EAAE,CAAC;EAC9B,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;EACvB,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;EACxB,EAAE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;EAE7B;;EAEA,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC;EACrB,EAAE,MAAM,MAAM,GAAG,IAAIA,aAAO,EAAE,CAAC;EAC/B,EAAE,MAAM,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAC;EAC9B,EAAE,MAAM,GAAG,GAAG,IAAIC,UAAI,EAAE,CAAC;;EAEzB,EAAE,MAAM,KAAK,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;EACzD,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;;EAEzB,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;EAC1B,EAAE,MAAM,YAAY,GAAG,IAAIC,aAAO,EAAE,CAAC;EACrC,EAAE,MAAM,OAAO,GAAG,IAAIC,aAAO,EAAE,CAAC;EAChC,EAAE,MAAM,UAAU,GAAG,IAAIA,aAAO,EAAE,CAAC;EACnC,EAAE,MAAM,SAAS,GAAG,IAAIC,eAAS,EAAE,CAAC;EACpC,EAAE,MAAM,MAAM,GAAG,IAAIC,YAAM,EAAE,CAAC;;EAE9B;;EAEA,EAAE,MAAM,WAAW,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;;EAEzC,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,MAAM,EAAE;EAChC,IAAI,IAAI,QAAQ,CAAC;;EAEjB,IAAI,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;;EAE9B,IAAI,IAAI,GAAG,CAAC,OAAO,EAAE,KAAK,KAAK,EAAE;EACjC,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EAC5B,MAAM,QAAQ,GAAG,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;EACtD,KAAK,MAAM;EACX;;EAEA,MAAM,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;EACvD,MAAM,QAAQ,GAAG,GAAG,CAAC;EACrB,KAAK;;EAEL,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACvB,IAAI,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;EAC7C,IAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;;EAEvC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;EAE5C,IAAI,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;EACrC,GAAG,CAAC;;EAEJ,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS,aAAa,EAAE;EACrC;;EAEA,IAAI,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;;EAE5B,IAAI,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;EACxD,IAAI,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE5E,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;EACvC,IAAI,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;;EAE9B,IAAI,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;EACrC,GAAG,CAAC;;EAEJ,EAAE,IAAI,CAAC,IAAI,GAAG,SAAS,SAAS,EAAE;EAClC,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;EAC1D,IAAI,MAAM,CAAC,sBAAsB,EAAE,CAAC;;EAEpC,IAAI,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;EACrC,GAAG,CAAC;;EAEJ,EAAE,IAAI,CAAC,MAAM,GAAG,SAAS,aAAa,EAAE;EACxC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;EAE7C,IAAI,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;EAErC,IAAI,SAAS,CAAC,KAAK,IAAI,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC;EAC7D;;EAEA,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC;;EAEzB,IAAI,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;;EAEvC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;EAE7C,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;EAE1B,IAAI,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;EACrC,GAAG,CAAC;;EAEJ;;EAEA,EAAE,SAAS,WAAW,CAAC,KAAK,EAAE;EAC9B,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;;EAExC,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;;EAE9C,IAAI,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;EAC/C,IAAI,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;;EAE/C,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,EAAE;EAChC,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;EACzD,KAAK,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE;EACrC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;EAC7C,KAAK,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC,GAAG,EAAE;EACpC,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;EACrD,KAAK;;EAEL,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;EACjD,GAAG;;EAEH,EAAE,SAAS,SAAS,CAAC,KAAK,EAAE;EAC5B,IAAI,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACpE,IAAI,UAAU,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAChE,IAAI,UAAU,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EACjE,IAAI,UAAU,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;;EAEjE,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;EACvB,GAAG;;EAEH,EAAE,SAAS,YAAY,CAAC,KAAK,EAAE;EAC/B,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;;EAE3B;EACA,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,GAAG;;EAEH,EAAE,SAAS,WAAW,CAAC,KAAK,EAAE;EAC9B,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;;EAExC,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;EAC5B,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;EAC3B,KAAK,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;EACnC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;EACzB,KAAK,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;EACnC,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;EACxB,KAAK;;EAEL,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;;EAEjD,IAAI,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACjE,IAAI,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAC7D,IAAI,UAAU,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAC9D,IAAI,UAAU,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAC9D,GAAG;;EAEH,EAAE,SAAS,WAAW,CAAC,KAAK,EAAE;EAC9B,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;EAC3B,GAAG;;EAEH,EAAE,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACjE,EAAE,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC/D,EAAE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;;EAE5D;;EAEA,EAAE,MAAM,OAAO,GAAG,CAAC,IAAIL,aAAO,EAAE,EAAE,IAAIA,aAAO,EAAE,EAAE,IAAIA,aAAO,EAAE,CAAC,CAAC;EAChE,EAAE,MAAM,WAAW,GAAG,CAAC,IAAIA,aAAO,EAAE,EAAE,IAAIA,aAAO,EAAE,EAAE,IAAIA,aAAO,EAAE,CAAC,CAAC;;EAEpE,EAAE,IAAI,YAAY,GAAG,IAAI,CAAC;;EAE1B,EAAE,SAAS,UAAU,CAAC,KAAK,EAAE;EAC7B,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;;EAExC,IAAI,QAAQ,KAAK,CAAC,OAAO,CAAC,MAAM;EAChC,MAAM,KAAK,CAAC;EACZ,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,MAAM;;EAEd,MAAM,KAAK,CAAC;EACZ,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD,QAAQ,MAAM;EACd,KAAK;;EAEL,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,GAAG;;EAEH,EAAE,SAAS,SAAS,CAAC,KAAK,EAAE;EAC5B,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;;EAExC,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;EAC3B,IAAI,KAAK,CAAC,eAAe,EAAE,CAAC;;EAE5B,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE,UAAU,EAAE;EAC3C,MAAM,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElC,MAAM,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;EAClC,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;EACvE,UAAU,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;EAClC,OAAO;;EAEP,MAAM,OAAO,OAAO,CAAC;EACrB,KAAK;;EAEL,IAAI,QAAQ,KAAK,CAAC,OAAO,CAAC,MAAM;EAChC,MAAM,KAAK,CAAC;EACZ,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,KAAK,CAAC,MAAM;EACpB,UAAU,OAAO,CAAC,CAAC,CAAC;EACpB,aAAa,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;EACrD,aAAa,cAAc,CAAC,CAAC,CAAC,CAAC;EAC/B,SAAS,CAAC;EACV,QAAQ,MAAM;;EAEd,MAAM,KAAK,CAAC;EACZ,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,WAAW,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACjD,QAAQ,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC;EAC7D,QAAQ,YAAY,GAAG,QAAQ,CAAC;;EAEhC,QAAQ,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;EAClC,WAAW,KAAK,EAAE;EAClB,WAAW,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;EACpD,QAAQ,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;EAClC,WAAW,KAAK,EAAE;EAClB,WAAW,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;EACpD,QAAQ,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;EAC/B,QAAQ,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE/B,QAAQ,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;;EAExC,QAAQ,MAAM;EACd,KAAK;;EAEL,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,GAAG;;EAEH,EAAE,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC/D,EAAE,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;;EAE7D,EAAE,IAAI,CAAC,OAAO,GAAG,WAAW;EAC5B,IAAI,UAAU,CAAC,mBAAmB,CAAC,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACtE,IAAI,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACpE,IAAI,UAAU,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;;EAEjE,IAAI,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACpE,IAAI,UAAU,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAChE,IAAI,UAAU,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EACjE,IAAI,UAAU,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;;EAEjE,IAAI,UAAU,CAAC,mBAAmB,CAAC,YAAY,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EACpE,IAAI,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAClE,GAAG,CAAC;EACJ,CAAC,CAAC;;EAEF,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAACM,qBAAe,CAAC,SAAS,CAAC,CAAC;EACnE,aAAa,CAAC,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;;EC/RpD,MAAM,QAAQ,CAAC;EACf,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,GAAG,EAAE,EAAE;EACnC,IAAI,IAAI,CAAC,OAAO,GAAG;EACnB,MAAM,GAAG,qBAAqB;EAC9B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,KAAK,EAAE,CAAC;EACtC,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;EAC3B,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;;EAE5B,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;EACtB,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3C,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACzD,GAAG;;EAEH,EAAE,OAAO,GAAG;EACZ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;EAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;;EAEnC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;EAClD,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;EAC3B,IAAI,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxC,GAAG;;EAEH,EAAE,UAAU,GAAG;EACf,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIC,wBAAwB,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;EAChF,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;EAC3B,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;EACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAItC,aAAa,EAAE,CAAC,CAAC;;EAE5C,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAChC,GAAG;;EAEH,EAAE,YAAY,CAAC,OAAO,EAAE;EACxB,IAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;EAC7B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;EAC/B,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;EACnE,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC;EACvC,IAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;EAC3D,IAAI,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;EAC1B,GAAG;;EAEH,EAAE,YAAY,GAAG;EACjB,IAAI,MAAM,QAAQ,GAAG,IAAIuC,mBAAmB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;EAClE,IAAI,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;EAC/B,IAAI,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;EACrC,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACpD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;EAC9E,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;EACpD,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,IAAI,CAAC,OAAO,GAAG;EACnB,MAAM,GAAG,IAAI,CAAC,OAAO;EACrB,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC3C,GAAG;;EAEH,EAAE,OAAO,GAAG;EACZ,IAAI,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;EAC9D,GAAG;;EAEH,EAAE,cAAc,GAAG;EACnB,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;EAC5B,IAAI,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;EACzD,IAAI;EACJ,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;EACrD,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;EACvD,MAAM;EACN,MAAM,MAAM,CAAC,WAAW,EAAE,YAAY,CAAC,GAAG;EAC1C,QAAQ,WAAW,GAAG,GAAG;EACzB,QAAQ,YAAY,GAAG,GAAG;EAC1B,OAAO,CAAC;EACR,MAAM,MAAM,CAAC,IAAI,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;EACrC,MAAM,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;EACrC,MAAM,MAAM,CAAC,GAAG,GAAG,YAAY,GAAG,CAAC,CAAC;EACpC,MAAM,MAAM,CAAC,MAAM,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC;EACxC,MAAM,MAAM,CAAC,sBAAsB,EAAE,CAAC;EACtC,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;EACvD,MAAM,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;EACvC,MAAM,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;EACzC,KAAK;EACL,GAAG;;EAEH,EAAE,gBAAgB,CAAC,SAAS,EAAE;EAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;EAC3C,GAAG;EACH,CAAC;;ECzFD,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,IAAIC,6BAAQ,CAAC;;EAEzD,MAAM,QAAQ,CAAC;EACf,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,GAAG,EAAE,EAAE;EACnC,IAAI,IAAI,CAAC,OAAO,GAAG;EACnB,MAAM,GAAG,qBAAqB;EAC9B,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAClD,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;EAC3B,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;;EAE5B,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,cAAc,CAAC,OAAO,IAAI;EAC5C,MAAM,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;EAC9B,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;EAC9B,OAAO;EACP,KAAK,CAAC,CAAC;;EAEP,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;EACtB,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3C,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACzD,GAAG;;EAEH,EAAE,OAAO,GAAG;EACZ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;EAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;;EAEnC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;EAClD,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;EAC3B,IAAI,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxC,GAAG;;EAEH,EAAE,UAAU,GAAG;EACf,IAAI,IAAI,CAAC,MAAM,GAAG,IAAIC,uBAAuB,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACjE,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;EACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAIzC,aAAa,EAAE,CAAC,CAAC;;EAE5C,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAChC,GAAG;;EAEH,EAAE,YAAY,CAAC,OAAO,EAAE;EACxB,IAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;EAC7B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;EAC/B,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI0C,6BAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;EACpE,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC;EACvC,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACpC,IAAI,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;EAC1B,GAAG;;EAEH,EAAE,YAAY,GAAG;EACjB,IAAI,MAAM,QAAQ,GAAG,IAAIH,mBAAmB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;EAClE,IAAI,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;EAC/B,IAAI,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;EACrC,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACpD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;EAC9E,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;EACpD,GAAG;;EAEH,EAAE,aAAa,CAAC,OAAO,EAAE;EACzB,IAAI,IAAI,CAAC,OAAO,GAAG;EACnB,MAAM,GAAG,IAAI,CAAC,OAAO;EACrB,MAAM,GAAG,OAAO;EAChB,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC3C,GAAG;;EAEH,EAAE,OAAO,GAAG;EACZ;EACA,GAAG;;EAEH,EAAE,cAAc,GAAG;EACnB,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;EAC5B,IAAI,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;EACzD,IAAI;EACJ,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;EACrD,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;EACvD,MAAM;EACN,MAAM,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,YAAY,CAAC;EACjD,MAAM,MAAM,CAAC,sBAAsB,EAAE,CAAC;EACtC,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;EACvD,MAAM,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;EACvC,MAAM,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;EACzC,KAAK;EACL,GAAG;;EAEH,EAAE,gBAAgB,CAAC,SAAS,EAAE;EAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;EAC3C,GAAG;EACH,CAAC;;EC3FD,MAAM,QAAQ,SAAS,QAAQ,CAAC;EAChC,EAAE,WAAW,CAAC,WAAW,EAAE,OAAO,EAAE;EACpC,IAAI,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;EACzB,IAAI,MAAM,EAAE,kBAAkB,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;EAChD,IAAI,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC;EAC3B,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;EACzB,IAAI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;EAC5B,IAAI,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,KAAK,MAAM,EAAE,CAAC,CAAC;;EAE/D,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;EACzB,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/D,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7C,GAAG;;EAEH,EAAE,aAAa,GAAG;EAClB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM;EACpC,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,IAAI;EACtC,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI;EAC9C,UAAU,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC;EACzC,YAAY,GAAG,EAAE,IAAI,CAAC,GAAG;EACzB,YAAY,IAAI;EAChB,YAAY,WAAW,EAAE,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EACxE,WAAW,CAAC,CAAC;EACb,UAAU,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC9C,SAAS,CAAC,CAAC;EACX,OAAO,CAAC,CAAC;EACT,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,aAAa,CAAC,EAAE,UAAU,EAAE,EAAE;EAChC,IAAI,UAAU,CAAC,OAAO;EACtB,MAAM,CAAC;EACP,QAAQ,MAAM,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE;EAC3C,QAAQ,cAAc,EAAE,YAAY;EACpC,QAAQ,SAAS,EAAE;EACnB,UAAU,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAClC,UAAU,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;EAClD,SAAS;EACT,OAAO,KAAK;EACZ,QAAQ,MAAM,CAAC,WAAW,EAAE,YAAY,CAAC,GAAG;EAC5C,UAAU,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC;EAC9C,UAAU,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;EAC/C,SAAS,CAAC;;EAEV,QAAQ,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;EACtC,QAAQ,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,QAAQ,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;EAEnD,QAAQ,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI;EACvD,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;EACrD,YAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACxC,WAAW;EACX,SAAS,CAAC,CAAC;EACX,OAAO;EACP,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;EAC7B,GAAG;;EAEH,EAAE,iBAAiB,CAAC,OAAO,EAAE;EAC7B,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;EACjD,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACpC,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EAC/C,KAAK;EACL,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;EAC9D,IAAI,IAAI,aAAa,EAAE;EACvB,MAAM,OAAO,aAAa,CAAC;EAC3B,KAAK;;EAEL,IAAI,MAAM,QAAQ,GAAG,IAAI1C,WAAW,EAAE,CAAC;EACvC,IAAI,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;EAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;EACnC,IAAI,OAAO,QAAQ,CAAC;EACpB,GAAG;;EAEH,EAAE,mBAAmB,CAAC,aAAa,EAAE;EACrC,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;EACvC,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;EAC7B,GAAG;;EAEH,EAAE,iBAAiB,GAAG;EACtB,IAAI,MAAM;EACV,MAAM,aAAa;EACnB,MAAM,KAAK,EAAE,EAAE,UAAU,EAAE;EAC3B,KAAK,GAAG,IAAI,CAAC;EACb,IAAI,IAAI,CAAC,aAAa,EAAE;EACxB,MAAM,OAAO;EACb,KAAK;EACL,IAAI,MAAM,kBAAkB,GAAG,UAAU,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;;EAEzE,IAAI,IAAI,kBAAkB,EAAE;EAC5B,MAAM,MAAM,UAAU,GAAG,IAAIsB,cAAc,EAAE,CAAC;EAC9C,MAAM,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;EACpD,MAAM,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;;EAEpD,MAAM,MAAM,mBAAmB,GAAG,kBAAkB,CAAC,gBAAgB;EACrE,QAAQ,IAAInB,aAAa,EAAE;EAC3B,OAAO,CAAC;EACR,MAAM,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,kBAAkB;EACzE,QAAQ,IAAIyB,gBAAgB,EAAE;EAC9B,OAAO,CAAC;EACR,MAAM,MAAM,oBAAoB,GAAG,UAAU,CAAC,gBAAgB;EAC9D,QAAQ,IAAIzB,aAAa,EAAE;EAC3B,OAAO,CAAC;EACR,MAAM,MAAM,sBAAsB,GAAG,UAAU,CAAC,kBAAkB;EAClE,QAAQ,IAAIyB,gBAAgB,EAAE;EAC9B,OAAO,CAAC;;EAER,MAAM,MAAM,WAAW,GAAG,oBAAoB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;EACxE,MAAM,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;EAC5E,MAAM,UAAU,CAAC,QAAQ,CAAC,iBAAiB;EAC3C,QAAQ,sBAAsB,CAAC,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;EAC7E,OAAO,CAAC;EACR,MAAM,UAAU,CAAC,iBAAiB,EAAE,CAAC;EACrC,MAAM,UAAU,CAAC,qBAAqB;EACtC,QAAQ,IAAIkB,aAAa,EAAE;EAC3B,WAAW,gBAAgB,CAAC,IAAI3C,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;EACrE,WAAW,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;EACtC,OAAO,CAAC;;EAER,MAAM,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;EACpD,MAAM,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EAC5C,KAAK;EACL,GAAG;;EAEH,EAAE,gBAAgB,CAAC,SAAS,EAAE;EAC9B,IAAI,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;;EAEtC,IAAI,SAAS,CAAC,cAAc,GAAG,UAAU,IAAI;EAC7C,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;EAC7D,MAAM,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EACxC,KAAK,CAAC;EACN,GAAG;;EAEH,EAAE,QAAQ,CAAC,UAAU,EAAE,OAAO,EAAE;EAChC,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,IAAI;EAC9B,MAAM,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;EACpC,MAAM,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;EACzC,MAAM,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;EACvD,QAAQ,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;EACrD,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EAClE,QAAQ,IAAI,cAAc,EAAE;EAC5B,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;EACtC,YAAY,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACtC,WAAW,CAAC,CAAC;EACb,SAAS;EACT,OAAO;EACP,KAAK,CAAC,CAAC;EACP,GAAG;;EAEH,EAAE,aAAa,GAAG,EAAE;EACpB,CAAC;;ACzID,cAAe;EACf,EAAE,UAAU;EACZ,EAAE,OAAO;EACT,EAAE,IAAI;EACN,EAAE,SAAS;EACX,EAAE,EAAE;EACJ,EAAE,UAAU;EACZ,EAAE,WAAW;EACb,EAAE,SAAS;EACX,EAAE,GAAG;EACL,EAAE,QAAQ;EACV,EAAE,IAAI;EACN,EAAE,KAAK;EACP,EAAE,MAAM;;EAER,EAAE,KAAK;;EAEP,EAAE,QAAQ;EACV,EAAE,QAAQ;EACV,EAAE,QAAQ;EACV,CAAC,CAAC;;;;;;;;"}